<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__parse_types_8cs_source" xml:lang="en-US">
<title>ParseTypes.cs</title>
<indexterm><primary>Source/Lib/CompilerServices/CSharp/ParserCase/Internals/ParseTypes.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__parse_types_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__parse_types_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services">Luthetus.TextEditor.RazorLib.CompilerServices</link>;
<anchor xml:id="__parse_types_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax</link>;
<anchor xml:id="__parse_types_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Nodes</link>;
<anchor xml:id="__parse_types_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Tokens</link>;
<anchor xml:id="__parse_types_8cs_source_1l00006"/>00006 
<anchor xml:id="__parse_types_8cs_source_1l00007"/>00007 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_compiler_services_1_1_c_sharp_1_1_parser_case_1_1_internals">Luthetus.CompilerServices.CSharp.ParserCase.Internals</link>;
<anchor xml:id="__parse_types_8cs_source_1l00008"/>00008 
<anchor xml:id="__parse_types_8cs_source_1l00009"/>00009 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>ParseTypes
<anchor xml:id="__parse_types_8cs_source_1l00010"/>00010 {
<anchor xml:id="__parse_types_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleStaticClassIdentifier(
<anchor xml:id="__parse_types_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba5560a6da7097326a85005e45e838c4cd">IdentifierToken</link>&#32;consumedIdentifierToken,
<anchor xml:id="__parse_types_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CSharpParserModel&#32;model)
<anchor xml:id="__parse_types_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00016"/>00016 
<anchor xml:id="__parse_types_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleUndefinedTypeOrNamespaceReference(
<anchor xml:id="__parse_types_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba5560a6da7097326a85005e45e838c4cd">IdentifierToken</link>&#32;consumedIdentifierToken,
<anchor xml:id="__parse_types_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CSharpParserModel&#32;model)
<anchor xml:id="__parse_types_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00022"/>00022 
<anchor xml:id="__parse_types_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba23e9a1c6d514d5893a8b721ca8b0db3a">GenericArgumentsListingNode</link>&#32;HandleGenericArguments(CSharpParserModel&#32;model)
<anchor xml:id="__parse_types_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;openAngleBracketToken&#32;=&#32;(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba27bf1c1ec7a86ae3186a8fe8d7c69e28">OpenAngleBracketToken</link>)model.TokenWalker.Consume();
<anchor xml:id="__parse_types_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;
<anchor xml:id="__parse_types_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.CloseAngleBracketToken&#32;==&#32;model.TokenWalker.Current.SyntaxKind)
<anchor xml:id="__parse_types_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba23e9a1c6d514d5893a8b721ca8b0db3a">GenericArgumentsListingNode</link>(
<anchor xml:id="__parse_types_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;openAngleBracketToken,
<anchor xml:id="__parse_types_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImmutableArray&lt;GenericArgumentEntryNode&gt;.Empty,
<anchor xml:id="__parse_types_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba2616fae732947c9a7f0dc61749aa9aaf">CloseAngleBracketToken</link>)model.TokenWalker.Consume());
<anchor xml:id="__parse_types_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00037"/>00037 
<anchor xml:id="__parse_types_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mutableGenericArgumentsListing&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;GenericArgumentEntryNode&gt;();
<anchor xml:id="__parse_types_8cs_source_1l00039"/>00039 
<anchor xml:id="__parse_types_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__parse_types_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TypeClause</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;typeClauseNode&#32;=&#32;MatchTypeClause(model);
<anchor xml:id="__parse_types_8cs_source_1l00044"/>00044 
<anchor xml:id="__parse_types_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(typeClauseNode.IsFabricated)
<anchor xml:id="__parse_types_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__parse_types_8cs_source_1l00047"/>00047 
<anchor xml:id="__parse_types_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;genericArgumentEntryNode&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921baa337e2aa3936db52d23799a94781552d">GenericArgumentEntryNode</link>(typeClauseNode);
<anchor xml:id="__parse_types_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutableGenericArgumentsListing.Add(genericArgumentEntryNode);
<anchor xml:id="__parse_types_8cs_source_1l00050"/>00050 
<anchor xml:id="__parse_types_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.CommaToken&#32;==&#32;model.TokenWalker.Current.SyntaxKind)
<anchor xml:id="__parse_types_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;commaToken&#32;=&#32;(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921baf17b6fbd28bb7078ea20070d76e8073b">CommaToken</link>)model.TokenWalker.Consume();
<anchor xml:id="__parse_types_8cs_source_1l00054"/>00054 
<anchor xml:id="__parse_types_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Track&#32;comma&#32;tokens?</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;functionArgumentListing.Add(commaToken);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__parse_types_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00064"/>00064 
<anchor xml:id="__parse_types_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;closeAngleBracketToken&#32;=&#32;(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba2616fae732947c9a7f0dc61749aa9aaf">CloseAngleBracketToken</link>)model.TokenWalker.Match(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.CloseAngleBracketToken);
<anchor xml:id="__parse_types_8cs_source_1l00066"/>00066 
<anchor xml:id="__parse_types_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba23e9a1c6d514d5893a8b721ca8b0db3a">GenericArgumentsListingNode</link>(
<anchor xml:id="__parse_types_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;openAngleBracketToken,
<anchor xml:id="__parse_types_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutableGenericArgumentsListing.ToImmutableArray(),
<anchor xml:id="__parse_types_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closeAngleBracketToken);
<anchor xml:id="__parse_types_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00072"/>00072 
<anchor xml:id="__parse_types_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandleAttribute(
<anchor xml:id="__parse_types_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921badc0dbc3f3c9ffc2d9c459ee186557ec8">OpenSquareBracketToken</link>&#32;consumedOpenSquareBracketToken,
<anchor xml:id="__parse_types_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CSharpParserModel&#32;model)
<anchor xml:id="__parse_types_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00078"/>00078 
<anchor xml:id="__parse_types_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsPossibleTypeClause(ISyntaxToken&#32;syntaxToken,&#32;CSharpParserModel&#32;model)
<anchor xml:id="__parse_types_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__parse_types_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00095"/>00095 
<anchor xml:id="__parse_types_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921babf7aa5a37bddb2ef0ea312257a3fa216">TypeClauseNode</link>&#32;MatchTypeClause(CSharpParserModel&#32;model)
<anchor xml:id="__parse_types_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ParseOthers.TryParseExpression(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.TypeClauseNode,&#32;model,&#32;out&#32;var&#32;expressionNode))
<anchor xml:id="__parse_types_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921babf7aa5a37bddb2ef0ea312257a3fa216">TypeClauseNode</link>)expressionNode;
<anchor xml:id="__parse_types_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;syntaxToken&#32;=&#32;model.TokenWalker.Match(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.IdentifierToken);
<anchor xml:id="__parse_types_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__parse_types_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921babf7aa5a37bddb2ef0ea312257a3fa216">TypeClauseNode</link>(
<anchor xml:id="__parse_types_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syntaxToken,
<anchor xml:id="__parse_types_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__parse_types_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__parse_types_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__parse_types_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*ISyntaxToken&#32;syntaxToken;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00113"/>00113 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00114"/>00114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(UtilityApi.IsKeywordSyntaxKind(model.TokenWalker.Current.SyntaxKind)&#32;&amp;&amp;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00115"/>00115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(UtilityApi.IsTypeIdentifierKeywordSyntaxKind(model.TokenWalker.Current.SyntaxKind)&#32;||</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00116"/>00116 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UtilityApi.IsVarContextualKeyword(model,&#32;model.TokenWalker.Current.SyntaxKind)))</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00117"/>00117 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00118"/>00118 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syntaxToken&#32;=&#32;model.TokenWalker.Consume();</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00119"/>00119 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00120"/>00120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00121"/>00121 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00122"/>00122 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syntaxToken&#32;=&#32;model.TokenWalker.Match(SyntaxKind.IdentifierToken);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00123"/>00123 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00124"/>00124 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00125"/>00125 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;typeClauseNode&#32;=&#32;new&#32;TypeClauseNode(</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00126"/>00126 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;syntaxToken,</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00127"/>00127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;null,</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00128"/>00128 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;null);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00129"/>00129 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00130"/>00130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.Binder.BindTypeClauseNode(typeClauseNode,&#32;model);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00131"/>00131 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00132"/>00132 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(model.TokenWalker.Current.SyntaxKind&#32;==&#32;SyntaxKind.OpenAngleBracketToken)</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00133"/>00133 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00134"/>00134 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;genericParametersListingNode&#32;=&#32;(GenericParametersListingNode)ParseOthers.Force_ParseExpression(</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00135"/>00135 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SyntaxKind.GenericParametersListingNode,</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00136"/>00136 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00137"/>00137 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00138"/>00138 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeClauseNode.SetGenericParametersListingNode(genericParametersListingNode);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00139"/>00139 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00140"/>00140 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00141"/>00141 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(model.TokenWalker.Current.SyntaxKind&#32;==&#32;SyntaxKind.QuestionMarkToken)</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00142"/>00142 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00143"/>00143 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeClauseNode.HasQuestionMark&#32;=&#32;true;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00144"/>00144 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;model.TokenWalker.Consume();</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00145"/>00145 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00146"/>00146 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00147"/>00147 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;while&#32;(model.TokenWalker.Current.SyntaxKind&#32;==&#32;SyntaxKind.OpenSquareBracketToken)</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00148"/>00148 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00149"/>00149 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;openSquareBracketToken&#32;=&#32;model.TokenWalker.Consume();</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00150"/>00150 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;closeSquareBracketToken&#32;=&#32;model.TokenWalker.Match(SyntaxKind.CloseSquareBracketToken);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00151"/>00151 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00152"/>00152 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;arraySyntaxTokenTextSpan&#32;=&#32;syntaxToken.TextSpan&#32;with</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00153"/>00153 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00154"/>00154 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EndingIndexExclusive&#32;=&#32;closeSquareBracketToken.TextSpan.EndingIndexExclusive</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00155"/>00155 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00156"/>00156 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00157"/>00157 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;arraySyntaxToken&#32;=&#32;new&#32;ArraySyntaxToken(arraySyntaxTokenTextSpan);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00158"/>00158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;genericParameterEntryNode&#32;=&#32;new&#32;GenericParameterEntryNode(typeClauseNode);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00159"/>00159 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00160"/>00160 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;genericParametersListingNode&#32;=&#32;new&#32;GenericParametersListingNode(</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00161"/>00161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;OpenAngleBracketToken(openSquareBracketToken.TextSpan)</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00162"/>00162 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00163"/>00163 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IsFabricated&#32;=&#32;true</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00164"/>00164 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00165"/>00165 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;List&lt;GenericParameterEntryNode&gt;&#32;{&#32;genericParameterEntryNode&#32;},</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00166"/>00166 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;CloseAngleBracketToken(closeSquareBracketToken.TextSpan)</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00167"/>00167 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00168"/>00168 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IsFabricated&#32;=&#32;true</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00169"/>00169 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00170"/>00170 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00171"/>00171 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;new&#32;TypeClauseNode(</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00172"/>00172 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arraySyntaxToken,</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00173"/>00173 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;null,</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00174"/>00174 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genericParametersListingNode);</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00175"/>00175 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00176"/>00176 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;TODO:&#32;Implement&#32;multidimensional&#32;arrays.&#32;This&#32;array&#32;logic&#32;always&#32;returns&#32;after&#32;finding&#32;the&#32;first&#32;array&#32;syntax.</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00177"/>00177 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00178"/>00178 <emphasis role="comment"></emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00179"/>00179 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;typeClauseNode;</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00180"/>00180 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__parse_types_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00182"/>00182 
<anchor xml:id="__parse_types_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HandlePrimaryConstructorDefinition(
<anchor xml:id="__parse_types_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba38a405ee5bd151ca87cb4f8767d5fdab">TypeDefinitionNode</link>&#32;typeDefinitionNode,
<anchor xml:id="__parse_types_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921ba8406e54bc25563f0799c046043ae02a5">OpenParenthesisToken</link>&#32;consumedOpenParenthesisToken,
<anchor xml:id="__parse_types_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CSharpParserModel&#32;model)
<anchor xml:id="__parse_types_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;{
<anchor xml:id="__parse_types_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;}
<anchor xml:id="__parse_types_8cs_source_1l00189"/>00189 }
</programlisting></section>
