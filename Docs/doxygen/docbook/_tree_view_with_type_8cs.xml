<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__tree_view_with_type_8cs" xml:lang="en-US">
<title>Source/Lib/Common/TreeViews/Models/TreeViewWithType.cs File Reference</title>
<indexterm><primary>Source/Lib/Common/TreeViews/Models/TreeViewWithType.cs</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g">Luthetus.Common.RazorLib.TreeViews.Models.TreeViewWithType&lt; T &gt;</link></para>

<para>Implement the abstract class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g">TreeViewWithType&lt;T&gt;</link> in order to make a TreeView.<?linebreak?><?linebreak?> An abstract class is used because a good deal of customization is required on a per TreeView basis depending on what data type one displays in that TreeView. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_luthetus">Luthetus</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common">Luthetus.Common</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib">Luthetus.Common.RazorLib</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views">Luthetus.Common.RazorLib.TreeViews</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models">Luthetus.Common.RazorLib.TreeViews.Models</link></para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
