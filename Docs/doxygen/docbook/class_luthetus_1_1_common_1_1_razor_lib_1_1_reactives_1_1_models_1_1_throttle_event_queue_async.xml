<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async" xml:lang="en-US">
<title>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync Class Reference</title>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary></indexterm>
<para>

<para>This type is thread safe.<?linebreak?><?linebreak?>. </para>
 
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>async Task <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1af0406fd8ea7dd2d9c9a3f255588ead75">EnqueueAsync</link> (<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link> downstreamEvent)</para>

<para>When enqueueing an event, a batchFunc is also provided.<?linebreak?><?linebreak?>. </para>
</listitem>
            <listitem><para>async Task&lt; <link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link> &gt; <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1ad16053388e4858f8a083cf6619dcdace">DequeueOrDefaultAsync</link> ()</para>

<para>Returns the first entry in the queue, according to &apos;first in first out&apos;. </para>
</listitem>
            <listitem><para>async Task <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a9080c44a0d47eb00c63d893448e0daa6">StopFurtherEnqueuesAsync</link> ()</para>
</listitem>
            <listitem><para>async Task <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a9c18aeecddeaca7a66fac33f13a58ff5">UntilIsEmptyAsync</link> (TimeSpan? pollingTimeSpan=null, CancellationToken cancellationToken=default)</para>

<para>This method does NOT prevent enqueues while flushing. To do so, invoke StopFurtherEnqueuesAsync() prior to invoking this method.<?linebreak?><?linebreak?>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1af84a28f244c74fdc2a039063702327f8">IsStoppingFurtherEnqueues</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>int <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a1e9fb50316818930ce2e364d3ad9f865">Count</link><computeroutput> [get]</computeroutput>
</para>

<para>Returns the amount of <link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link>(s) in the queue. </para>
</listitem>
            <listitem><para>ImmutableArray&lt; <link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link> &gt; <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a1a431e4252754457b13e82d1bae10472">ThrottleEventList</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This type is thread safe.<?linebreak?><?linebreak?>. </para>
<para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00010">10</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1ad16053388e4858f8a083cf6619dcdace"/><section>
    <title>DequeueOrDefaultAsync()</title>
<indexterm><primary>DequeueOrDefaultAsync</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary><secondary>DequeueOrDefaultAsync</secondary></indexterm>
<para><computeroutput>async Task&lt; <link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link> &gt; Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync.DequeueOrDefaultAsync ( )</computeroutput></para><para>

<para>Returns the first entry in the queue, according to &apos;first in first out&apos;. </para>
</para>
<para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00117">117</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_ad16053388e4858f8a083cf6619dcdace_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1af0406fd8ea7dd2d9c9a3f255588ead75"/><section>
    <title>EnqueueAsync()</title>
<indexterm><primary>EnqueueAsync</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary><secondary>EnqueueAsync</secondary></indexterm>
<para><computeroutput>async Task Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync.EnqueueAsync (<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link> downstreamEvent)</computeroutput></para><para>

<para>When enqueueing an event, a batchFunc is also provided.<?linebreak?><?linebreak?>. </para>
</para>

<para>The batchFunc is to take the &apos;to-be-queued&apos; entry, and decide if it can merge with the last event in the queue, as to make a batched event.<?linebreak?><?linebreak?></para>

<para>This batchFunc is invoked over and over, until either a null &apos;batch event&apos; is returned. Or, there are no more entries in the queue to merge with.<?linebreak?><?linebreak?></para>

<para>When a null &apos;batch event&apos; is returned, then the last item in the queue remains unchanged, and after it the &apos;to-be-queued&apos; is ultimately queued.<?linebreak?><?linebreak?></para>

<para>Each invocation of the &apos;batchFunc&apos; will replace the &apos;to-be-queued&apos; unless the &apos;batch event&apos; returned was null.<?linebreak?><?linebreak?> </para>
<para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00052">52</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_af0406fd8ea7dd2d9c9a3f255588ead75_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a9080c44a0d47eb00c63d893448e0daa6"/><section>
    <title>StopFurtherEnqueuesAsync()</title>
<indexterm><primary>StopFurtherEnqueuesAsync</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary><secondary>StopFurtherEnqueuesAsync</secondary></indexterm>
<para><computeroutput>async Task Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync.StopFurtherEnqueuesAsync ( )</computeroutput></para><para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00162">162</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a9c18aeecddeaca7a66fac33f13a58ff5"/><section>
    <title>UntilIsEmptyAsync()</title>
<indexterm><primary>UntilIsEmptyAsync</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary><secondary>UntilIsEmptyAsync</secondary></indexterm>
<para><computeroutput>async Task Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync.UntilIsEmptyAsync (TimeSpan? pollingTimeSpan = <computeroutput>null</computeroutput>
, CancellationToken cancellationToken = <computeroutput>default</computeroutput>
)</computeroutput></para><para>

<para>This method does NOT prevent enqueues while flushing. To do so, invoke StopFurtherEnqueuesAsync() prior to invoking this method.<?linebreak?><?linebreak?>. </para>
</para>

<para>The implementation of this method is a polling solution (as of this comment (2024-05-09)). </para>
<para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00183">183</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a1e9fb50316818930ce2e364d3ad9f865"/><section>
    <title>Count</title>
<indexterm><primary>Count</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary><secondary>Count</secondary></indexterm>
<para><computeroutput>int Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync.Count<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Returns the amount of <link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link>(s) in the queue. </para>
</para>
<para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00034">34</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1af84a28f244c74fdc2a039063702327f8"/><section>
    <title>IsStoppingFurtherEnqueues</title>
<indexterm><primary>IsStoppingFurtherEnqueues</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary><secondary>IsStoppingFurtherEnqueues</secondary></indexterm>
<para><computeroutput>bool Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync.IsStoppingFurtherEnqueues<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00029">29</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async_1a1a431e4252754457b13e82d1bae10472"/><section>
    <title>ThrottleEventList</title>
<indexterm><primary>ThrottleEventList</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync</primary><secondary>ThrottleEventList</secondary></indexterm>
<para><computeroutput>ImmutableArray&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link>&gt; Luthetus.Common.RazorLib.Reactives.Models.ThrottleEventQueueAsync.ThrottleEventList<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__throttle_event_queue_async_8cs_source_1l00036">36</link> of file <link linkend="__throttle_event_queue_async_8cs_source">ThrottleEventQueueAsync.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Source/Lib/Common/Reactives/Models/<link linkend="__throttle_event_queue_async_8cs">ThrottleEventQueueAsync.cs</link></section>
</section>
