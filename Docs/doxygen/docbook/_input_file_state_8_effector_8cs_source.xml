<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__input_file_state_8_effector_8cs_source" xml:lang="en-US">
<title>InputFileState.Effector.cs</title>
<indexterm><primary>Source/Lib/Ide/Ide.RazorLib/InputFiles/States/InputFileState.Effector.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__input_file_state_8_effector_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00004"/>00004 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00005"/>00005 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_input_files_1_1_states">Luthetus.Ide.RazorLib.InputFiles.States</link>;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00006"/>00006 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00007"/>00007 <emphasis role="keyword">public</emphasis>&#32;partial&#32;record&#32;<link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_input_files_1_1_states_1adea9f28dd37beadbdebbbcda3e108036">InputFileState</link>
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00008"/>00008 {
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>Effector
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[EffectMethod]
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;HandleOpenParentDirectoryAction(
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OpenParentDirectoryAction&#32;openParentDirectoryAction,
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IDispatcher&#32;dispatcher)
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a50f035982e1c206f234851523db5cbc8">dispatcher</link>;&#32;<emphasis role="comment">//&#32;Suppress&#32;unused&#32;parameter</emphasis>
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00017"/>00017 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;parentDirectoryTreeViewModel&#32;=&#32;openParentDirectoryAction.ParentDirectoryTreeViewModel;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00019"/>00019 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parentDirectoryTreeViewModel&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;openParentDirectoryAction.BackgroundTaskService.Enqueue(
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinuousBackgroundTaskWorker.GetQueueKey(),
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Open&#32;Parent&#32;Directory&quot;</emphasis>,
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;async&#32;()&#32;=&gt;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;parentDirectoryTreeViewModel.LoadChildListAsync().ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00031"/>00031 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[EffectMethod]
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;HandleRefreshCurrentSelectionAction(
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RefreshCurrentSelectionAction&#32;refreshCurrentSelectionAction,
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IDispatcher&#32;dispatcher)
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a50f035982e1c206f234851523db5cbc8">dispatcher</link>;&#32;<emphasis role="comment">//&#32;Suppress&#32;unused&#32;parameter</emphasis>
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00041"/>00041 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentSelection&#32;=&#32;refreshCurrentSelectionAction.CurrentSelection;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00043"/>00043 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentSelection&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentSelection.ChildList.Clear();
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00047"/>00047 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refreshCurrentSelectionAction.BackgroundTaskService.Enqueue(
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinuousBackgroundTaskWorker.GetQueueKey(),
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Refresh&#32;Current&#32;Selection&quot;</emphasis>,
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;async&#32;()&#32;=&gt;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;currentSelection.LoadChildListAsync().ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;This&#32;still&#32;needs&#32;to&#32;re-render.</emphasis>
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00058"/>00058 
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;}
<anchor xml:id="__input_file_state_8_effector_8cs_source_1l00062"/>00062 }
</programlisting></section>
