<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_dir_36a6c7e1b5b7838454faeefa49aa3ba2" xml:lang="en-US">
<title>Source/Tests/Ide/Basis Directory Reference</title>
<indexterm><primary>Source/Tests/Ide/Basis Directory Reference</primary></indexterm>
Directory dependency graph for Basis:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="dir_36a6c7e1b5b7838454faeefa49aa3ba2_dep.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Directories    </title>
        <itemizedlist>
            <listitem><para>directory <link linkend="_dir_7868278ca9b3921ed9ba704aa914d3ba">Clipboards</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_d4a5196de946871bbb6faa119a29f970">CodeSearches</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_fb63e2c44d0b831b9d6b92922ac3b9c4">CommandLines</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_1250e5a967f18cd6cd687e6343337535">Commands</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_662eb34140ce4b876f61150b88ef4ae1">ComponentRenderers</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_5183a56708b7b9d964b3e6bab814834f">Decorations</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_eab76ddc3056644742778d050c5a74e9">FileSystems</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_e79918fed5b618a77e7a75690a3f523c">FolderExplorers</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_f7b0490297aafb29f60526df3396a2c7">Gits</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_4ec28f37517b4877eef383a1cd391727">InputFiles</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_935e2bedacd0ae33f816fa5ab9b2f7e4">Installations</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_83320cb1f8e4378a76145506dfe8093b">Menus</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_94db74e533e8c8d55c266786d2edc742">ProgramExecutions</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_fe44fd42ff8d62c022246c0770deca3c">Shareds</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_8960b3fa3c52eede44ec2625a01c5240">States</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_6e8c7596b745213b1fe09518afe44e0c">Terminals</link></para>
</listitem>
            <listitem><para>directory <link linkend="_dir_08bb6899e311464fab22b1391200394e">TreeViewImplementations</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Files    </title>
        <itemizedlist>
            <listitem><para>file <link linkend="__ide_test_base_8cs">IdeTestBase.cs</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>One might decide to have a unit test for every public API.</para>

<para>That is the idea of this folder. A one to one unit test per public API at minimum.</para>

<para>Whether every public API will be done or not is being decided upon. But, perhaps that wording illustrates the purpose of this folder.</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para>Ideas:</para>

<para><itemizedlist>
<listitem>
<para>Automate test heatmap... If a C# compiler service could identify all publically scoped API, it could verify if after the basis was ran whether all public API was used.</para>
</listitem><listitem>
<para>Visualize the &quot;basis&quot;... so one could look at a given release of <link linkend="_namespace_luthetus_1_1_ide">Luthetus.Ide</link> and then bring up the &quot;UnitTests-Basis-Visualization&quot; for that given release.<itemizedlist>
<listitem>
<para>Draw a graph of all public API references.</para>
</listitem><listitem>
<para>Color the connection green if no exception occurred.</para>
</listitem><listitem>
<para>Color the connection red if an exception occurred.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem>
<para>Automate test generation...<itemizedlist>
<listitem>
<para>Try any meaningful arguments, automatically as their own test cast. Ex: a method which accepts an &apos;int&apos;. One could decide that meaningful arguments are [ Int.Min, -2, -1, 0, 1, 2 Int.Max ]</para>
</listitem><listitem>
<para>Concerns: could automated test cases result in bad outcomes? I.e. somehow the test case does bank.Withdraw(Int.Max). As per the concern, none of this automation exists at the moment. </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</section>
</section>
