<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__reflective_parameter_tests_8cs_source" xml:lang="en-US">
<title>ReflectiveParameterTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/Reflectives/Models/ReflectiveParameterTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__reflective_parameter_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models">Luthetus.Common.RazorLib.Reflectives.Models</link>;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Reflection;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00003"/>00003 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models">Luthetus.Common.Tests.Basis.Reflectives.Models</link>;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00005"/>00005 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00009"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests">00009</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests">ReflectiveParameterTests</link>
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00010"/>00010 {
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00021"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1afcfad45f7154f706d395177690b8fb6f">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1afcfad45f7154f706d395177690b8fb6f">Constructor_WITH_PrimitiveType</link>()
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;samplePrimitiveType&#32;=&#32;37;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00024"/>00024 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConstructorInfo?&#32;constructorInfo&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00026"/>00026 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Func&lt;object?&gt;?&#32;constructValueFunc&#32;=&#32;()&#32;=&gt;&#32;<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00028"/>00028 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;typeof(<emphasis role="keywordtype">int</emphasis>);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00030"/>00030 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;reflectiveParameterKind&#32;=&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1aba5167a9c064f0eb5144c377bfcea7da">ReflectiveParameterKind</link>.Primitive;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00032"/>00032 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;reflectiveParameter&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1_1_reflective_parameter">ReflectiveParameter</link>(
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constructorInfo,
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constructValueFunc,
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;samplePrimitiveType,
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00038"/>00038 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(constructorInfo&#32;==&#32;reflectiveParameter.ChosenConstructorInfo);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(constructValueFunc&#32;==&#32;reflectiveParameter.ConstructValueFunc);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(samplePrimitiveType&#32;==&#32;(<emphasis role="keywordtype">int</emphasis>)(reflectiveParameter.Value&#32;??&#32;0));
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(type&#32;==&#32;reflectiveParameter.Type);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(reflectiveParameterKind&#32;==&#32;reflectiveParameter.ReflectiveParameterKind);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00045"/>00045 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00056"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1a8c5868a7e92d93e97f427febb650156f">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1a8c5868a7e92d93e97f427febb650156f">Constructor_WITH_ComplexType</link>()
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sampleComplexType&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type">SampleComplexType</link>(<emphasis role="stringliteral">&quot;John&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Doe&quot;</emphasis>);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00059"/>00059 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;constructorInfo&#32;=&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type">SampleComplexType</link>).GetConstructor(
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>[]&#32;{&#32;typeof(<emphasis role="keywordtype">string</emphasis>),&#32;typeof(<emphasis role="keywordtype">string</emphasis>)&#32;});
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00062"/>00062 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Func&lt;object?&gt;?&#32;constructValueFunc&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00064"/>00064 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type">SampleComplexType</link>);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00066"/>00066 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;reflectiveParameterKind&#32;=&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1aba5167a9c064f0eb5144c377bfcea7da">ReflectiveParameterKind</link>.Complex;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00068"/>00068 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(constructorInfo);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00070"/>00070 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;reflectiveParameter&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1_1_reflective_parameter">ReflectiveParameter</link>(
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constructorInfo,
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampleComplexType,
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00076"/>00076 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(constructorInfo&#32;==&#32;reflectiveParameter.ChosenConstructorInfo);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(constructValueFunc&#32;==&#32;reflectiveParameter.ConstructValueFunc);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(sampleComplexType&#32;==&#32;reflectiveParameter.Value);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(type&#32;==&#32;reflectiveParameter.Type);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(reflectiveParameterKind&#32;==&#32;reflectiveParameter.ReflectiveParameterKind);
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00083"/>00083 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00084"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type">00084</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1af9957aeec66b71fb5653a7d09a14a63b">SampleComplexType</link>
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00086"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1af9957aeec66b71fb5653a7d09a14a63b">00086</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1af9957aeec66b71fb5653a7d09a14a63b">SampleComplexType</link>(<emphasis role="keywordtype">string</emphasis>&#32;firstName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;lastName)
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1aea76e35394d29a7eb8f69be727d3a0a5">FirstName</link>&#32;=&#32;firstName;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1a01173d2b53e4afe8275927d6853fdc8b">LastName</link>&#32;=&#32;lastName;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00091"/>00091 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00092"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1aea76e35394d29a7eb8f69be727d3a0a5">00092</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1aea76e35394d29a7eb8f69be727d3a0a5">FirstName</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00093"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1a01173d2b53e4afe8275927d6853fdc8b">00093</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1a01173d2b53e4afe8275927d6853fdc8b">LastName</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00094"/>00094 
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00095"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1a319a123a439f70a406b2a87118826591">00095</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_models_1_1_reflective_parameter_tests_1_1_sample_complex_type_1a319a123a439f70a406b2a87118826591">DisplayName</link>&#32;=&gt;&#32;$<emphasis role="stringliteral">&quot;{FirstName}&#32;{LastName}&quot;</emphasis>;
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_parameter_tests_8cs_source_1l00097"/>00097 }
</programlisting></section>
