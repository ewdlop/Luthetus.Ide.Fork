<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__text_editor_group_tests_8cs_source" xml:lang="en-US">
<title>TextEditorGroupTests.cs</title>
<indexterm><primary>Source/Tests/TextEditor/Basis/Groups/Models/TextEditorGroupTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__text_editor_group_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_groups_1_1_models">Luthetus.TextEditor.RazorLib.Groups.Models</link>;
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models">Luthetus.TextEditor.RazorLib.TextEditors.Models</link>;
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00005"/>00005 
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00006"/>00006 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_groups_1_1_models">Luthetus.TextEditor.Tests.Basis.Groups.Models</link>;
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00007"/>00007 
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00011"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_groups_1_1_models_1_1_text_editor_group_tests">00011</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_groups_1_1_models_1_1_text_editor_group_tests">TextEditorGroupTests</link>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00012"/>00012 {
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00022"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_groups_1_1_models_1_1_text_editor_group_tests_1a8761f1bbd5323b8df1536ad9d965b729">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_groups_1_1_models_1_1_text_editor_group_tests_1a8761f1bbd5323b8df1536ad9d965b729">Constructor</link>()
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;NotImplementedException(<emphasis role="stringliteral">&quot;Test&#32;was&#32;broken&#32;on&#32;(2024-04-08)&quot;</emphasis>);
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;groupKey&#32;=&#32;Key&lt;TextEditorGroup&gt;.NewKey();</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;activeViewModelKey&#32;=&#32;Key&lt;TextEditorViewModel&gt;.NewKey();</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//var&#32;viewModelKeyList&#32;=&#32;new&#32;Key&lt;TextEditorViewModel&gt;[]&#32;{&#32;activeViewModelKey&#32;}.ToImmutableList();</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00028"/>00028 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;var&#32;renderStateKey&#32;=&#32;Key&lt;RenderState&gt;.NewKey();</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00029"/>00029 
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00030"/>00030 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;var&#32;group&#32;=&#32;new&#32;TextEditorGroup(</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00031"/>00031 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;groupKey,</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00032"/>00032 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;activeViewModelKey,</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;viewModelKeyList)</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;RenderStateKey&#32;=&#32;renderStateKey</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00036"/>00036 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;};</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00037"/>00037 
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Assert.Equal(groupKey,&#32;group.GroupKey);</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Assert.Equal(activeViewModelKey,&#32;group.ActiveViewModelKey);</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Assert.Equal(viewModelKeyList,&#32;group.ViewModelKeyList);</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Assert.Equal(renderStateKey,&#32;group.RenderStateKey);</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00042"/>00042 
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00043"/>00043 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Assert&#32;that&#32;the&#32;default&#32;value&#32;for&#32;TextEditorGroup.RenderStateKey</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00044"/>00044 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;//&#32;is&#32;NOT&#32;Key&lt;RenderState&gt;.Empty</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00045"/>00045 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00046"/>00046 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotEqual(</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00047"/>00047 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;RenderState&gt;.Empty,</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00048"/>00048 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;TextEditorGroup(groupKey,&#32;activeViewModelKey,&#32;viewModelKeyList).RenderStateKey);</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00049"/>00049 &#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_group_tests_8cs_source_1l00051"/>00051 }
</programlisting></section>
