<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__reflective_state_actions_tests_8cs_source" xml:lang="en-US">
<title>ReflectiveStateActionsTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/Reflectives/States/ReflectiveStateActionsTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models">Luthetus.Common.RazorLib.Reflectives.Models</link>;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states">Luthetus.Common.RazorLib.Reflectives.States</link>;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>Luthetus.Common.RazorLib.Icons.Displays.Codicon;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis>System.Reflection;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00008"/>00008 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00009"/><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states">00009</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states">Luthetus.Common.Tests.Basis.Reflectives.States</link>;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00010"/>00010 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00014"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests">00014</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests">ReflectiveStateActionsTests</link>
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00015"/>00015 {
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00020"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests_1a56152c9ff2f36b4ae0634beab31d70a0">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests_1a56152c9ff2f36b4ae0634beab31d70a0">RegisterAction</link>()
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeReflectiveStateActionsTests(out&#32;var&#32;model);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00023"/>00023 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;insertionIndex&#32;=&#32;0;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00025"/>00025 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;registerAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.RegisterAction(model,&#32;insertionIndex);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(model,&#32;registerAction.Entry);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(insertionIndex,&#32;registerAction.InsertionIndex);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00030"/>00030 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00035"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests_1af8d7e3625701c10c5f38bd0bb1dae0b8">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests_1af8d7e3625701c10c5f38bd0bb1dae0b8">DisposeAction</link>()
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeReflectiveStateActionsTests(out&#32;var&#32;model);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00038"/>00038 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;disposeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.DisposeAction(model.Key);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(model.Key,&#32;disposeAction.Key);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00042"/>00042 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00047"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests_1a64c3d0dcc997cdb2f28c22176efffc58">00047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_reflectives_1_1_states_1_1_reflective_state_actions_tests_1a64c3d0dcc997cdb2f28c22176efffc58">WithAction</link>()
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeReflectiveStateActionsTests(out&#32;var&#32;model);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00050"/>00050 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Func&lt;ReflectiveModel,&#32;ReflectiveModel&gt;&#32;withFunc&#32;=&#32;inState&#32;=&gt;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;inState;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00055"/>00055 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;withAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.WithAction(
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.Key,
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;withFunc);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00059"/>00059 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(model.Key,&#32;withAction.Key);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(withFunc,&#32;withAction.WithFunc);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00063"/>00063 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeReflectiveStateActionsTests(out&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1a87d77c11765aadf12d63350b888987e6">ReflectiveModel</link>&#32;model)
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddFluxor(options&#32;=&gt;&#32;options.ScanAssemblies(typeof(<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>).Assembly));
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00068"/>00068 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;serviceProvider&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00070"/>00070 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;store&#32;=&#32;serviceProvider.GetRequiredService&lt;IStore&gt;();
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.InitializeAsync().Wait();
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00073"/>00073 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dispatcher&#32;=&#32;serviceProvider.GetRequiredService&lt;IDispatcher&gt;();
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00075"/>00075 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;componentTypeList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Type&gt;
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(IconArrowDownFragment),
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(IconArrowLeftFragment),
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(IconArrowRightFragment),
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(IconArrowUpFragment),
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00083"/>00083 
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1a87d77c11765aadf12d63350b888987e6">ReflectiveModel</link>(
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;ReflectiveModel&gt;.NewKey(),
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;componentTypeList,
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Guid.Empty,
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Guid.Empty,
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Array.Empty&lt;PropertyInfo&gt;(),
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>(),
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dispatcher);
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_state_actions_tests_8cs_source_1l00093"/>00093 }
</programlisting></section>
