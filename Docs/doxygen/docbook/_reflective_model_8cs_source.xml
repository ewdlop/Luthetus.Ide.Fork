<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__reflective_model_8cs_source" xml:lang="en-US">
<title>ReflectiveModel.cs</title>
<indexterm><primary>Source/Lib/Common/Reflectives/Models/ReflectiveModel.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__reflective_model_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__reflective_model_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states">Luthetus.Common.RazorLib.Reflectives.States</link>;
<anchor xml:id="__reflective_model_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__reflective_model_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>Microsoft.AspNetCore.Components;
<anchor xml:id="__reflective_model_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>System.Reflection;
<anchor xml:id="__reflective_model_8cs_source_1l00006"/>00006 
<anchor xml:id="__reflective_model_8cs_source_1l00007"/>00007 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models">Luthetus.Common.RazorLib.Reflectives.Models</link>;
<anchor xml:id="__reflective_model_8cs_source_1l00008"/>00008 
<anchor xml:id="__reflective_model_8cs_source_1l00009"/><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1a87d77c11765aadf12d63350b888987e6">00009</link> <emphasis role="keyword">public</emphasis>&#32;record&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1a87d77c11765aadf12d63350b888987e6">ReflectiveModel</link>(
<anchor xml:id="__reflective_model_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;Key&lt;ReflectiveModel&gt;&#32;Key,
<anchor xml:id="__reflective_model_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;List&lt;Type&gt;&#32;ComponentTypeList,
<anchor xml:id="__reflective_model_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;Guid&#32;ChosenTypeGuid,
<anchor xml:id="__reflective_model_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;Guid&#32;PreviousTypeGuid,
<anchor xml:id="__reflective_model_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;PropertyInfo[]&#32;ComponentPropertyInfoList,
<anchor xml:id="__reflective_model_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;Dictionary&lt;string,&#32;IReflectiveParameter&gt;&#32;ReflectiveParameterMap,
<anchor xml:id="__reflective_model_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;IDispatcher&#32;Dispatcher)&#32;<emphasis role="comment">//&#32;This&#32;is&#32;gonna&#32;be&#32;a&#32;hack&#32;for&#32;re-rendering&#32;temporarily</emphasis>
<anchor xml:id="__reflective_model_8cs_source_1l00017"/>00017 {
<anchor xml:id="__reflective_model_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Type?&#32;ChosenType&#32;=&gt;&#32;ComponentTypeList
<anchor xml:id="__reflective_model_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FirstOrDefault(x&#32;=&gt;&#32;x.GUID&#32;==&#32;ChosenTypeGuid);
<anchor xml:id="__reflective_model_8cs_source_1l00020"/>00020 
<anchor xml:id="__reflective_model_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">object</emphasis>&#32;_parametersLock&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__reflective_model_8cs_source_1l00022"/>00022 
<anchor xml:id="__reflective_model_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1_1_i_reflective_parameter">IReflectiveParameter</link>&#32;GetParameter(<emphasis role="keywordtype">string</emphasis>&#32;variableName,&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1_1_i_reflective_parameter">IReflectiveParameter</link>&#32;defaultValueIfKeyNotExists)
<anchor xml:id="__reflective_model_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_parametersLock)
<anchor xml:id="__reflective_model_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ReflectiveParameterMap.TryGetValue(variableName,&#32;out&#32;var&#32;value))
<anchor xml:id="__reflective_model_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;defaultValueIfKeyNotExists;
<anchor xml:id="__reflective_model_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReflectiveParameterMap.Add(variableName,&#32;value);
<anchor xml:id="__reflective_model_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00032"/>00032 
<anchor xml:id="__reflective_model_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__reflective_model_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00036"/>00036 
<anchor xml:id="__reflective_model_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetParameter(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1_1_i_reflective_parameter">IReflectiveParameter</link>&#32;value)
<anchor xml:id="__reflective_model_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_parametersLock)
<anchor xml:id="__reflective_model_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ReflectiveParameterMap.TryAdd(name,&#32;value))
<anchor xml:id="__reflective_model_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReflectiveParameterMap[name]&#32;=&#32;value;
<anchor xml:id="__reflective_model_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00046"/>00046 
<anchor xml:id="__reflective_model_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.WithAction(
<anchor xml:id="__reflective_model_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key,
<anchor xml:id="__reflective_model_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inState&#32;=&gt;&#32;inState&#32;with&#32;{&#32;}));
<anchor xml:id="__reflective_model_8cs_source_1l00050"/>00050 
<anchor xml:id="__reflective_model_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BubbleUpValue(name,&#32;value);
<anchor xml:id="__reflective_model_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00053"/>00053 
<anchor xml:id="__reflective_model_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Dictionary&lt;string,&#32;object?&gt;?&#32;ConstructBlazorParameters()
<anchor xml:id="__reflective_model_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blazorParameters&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;object?&gt;();
<anchor xml:id="__reflective_model_8cs_source_1l00057"/>00057 
<anchor xml:id="__reflective_model_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;parameterInfo&#32;<emphasis role="keywordflow">in</emphasis>&#32;ComponentPropertyInfoList)
<anchor xml:id="__reflective_model_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;parameterKey&#32;=&#32;parameterInfo.Name;
<anchor xml:id="__reflective_model_8cs_source_1l00061"/>00061 
<anchor xml:id="__reflective_model_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameterInfo.PropertyType.IsPrimitive&#32;||
<anchor xml:id="__reflective_model_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameterInfo.PropertyType&#32;==&#32;typeof(<emphasis role="keywordtype">string</emphasis>))
<anchor xml:id="__reflective_model_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReflectiveParameterMap.TryGetValue(parameterKey,&#32;out&#32;var&#32;value))
<anchor xml:id="__reflective_model_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blazorParameters.Add(parameterKey,&#32;value.Value);
<anchor xml:id="__reflective_model_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__reflective_model_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReflectiveParameterMap.TryGetValue(parameterKey,&#32;out&#32;var&#32;value)&#32;&amp;&amp;
<anchor xml:id="__reflective_model_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.ChosenConstructorInfo&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__reflective_model_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;topLevelConstructorArgs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;object?&gt;();
<anchor xml:id="__reflective_model_8cs_source_1l00076"/>00076 
<anchor xml:id="__reflective_model_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;constructorParameter&#32;<emphasis role="keywordflow">in</emphasis>&#32;value.ChosenConstructorInfo.GetParameters())
<anchor xml:id="__reflective_model_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;topLevelConstructorArgs.Add(InvokeConstructorRecursively(
<anchor xml:id="__reflective_model_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameterKey,
<anchor xml:id="__reflective_model_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constructorParameter));
<anchor xml:id="__reflective_model_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00083"/>00083 
<anchor xml:id="__reflective_model_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;objectInstance&#32;=&#32;value.ChosenConstructorInfo.Invoke(
<anchor xml:id="__reflective_model_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;topLevelConstructorArgs.ToArray());
<anchor xml:id="__reflective_model_8cs_source_1l00086"/>00086 
<anchor xml:id="__reflective_model_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.Value&#32;=&#32;objectInstance;
<anchor xml:id="__reflective_model_8cs_source_1l00088"/>00088 
<anchor xml:id="__reflective_model_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blazorParameters.Add(parameterKey,&#32;value.Value);
<anchor xml:id="__reflective_model_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00093"/>00093 
<anchor xml:id="__reflective_model_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;blazorParameters;
<anchor xml:id="__reflective_model_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00096"/>00096 
<anchor xml:id="__reflective_model_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CalculateComponentPropertyInfoList(<emphasis role="keywordtype">string</emphasis>?&#32;chosenTypeGuidString,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;chosenComponentChangeCounter)
<anchor xml:id="__reflective_model_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;refDisplayState&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__reflective_model_8cs_source_1l00100"/>00100 
<anchor xml:id="__reflective_model_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrWhiteSpace(chosenTypeGuidString)&#32;||
<anchor xml:id="__reflective_model_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chosenTypeGuidString&#32;==&#32;Guid.Empty.ToString()&#32;||
<anchor xml:id="__reflective_model_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!Guid.TryParse(chosenTypeGuidString,&#32;out&#32;var&#32;chosenTypeGuid))
<anchor xml:id="__reflective_model_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refDisplayState&#32;=&#32;refDisplayState&#32;with
<anchor xml:id="__reflective_model_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChosenTypeGuid&#32;=&#32;Guid.Empty
<anchor xml:id="__reflective_model_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__reflective_model_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__reflective_model_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refDisplayState&#32;=&#32;refDisplayState&#32;with
<anchor xml:id="__reflective_model_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChosenTypeGuid&#32;=&#32;chosenTypeGuid
<anchor xml:id="__reflective_model_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__reflective_model_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00117"/>00117 
<anchor xml:id="__reflective_model_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(refDisplayState.PreviousTypeGuid&#32;!=&#32;refDisplayState.ChosenTypeGuid)
<anchor xml:id="__reflective_model_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refDisplayState&#32;=&#32;refDisplayState&#32;with
<anchor xml:id="__reflective_model_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PreviousTypeGuid&#32;=&#32;refDisplayState.ChosenTypeGuid
<anchor xml:id="__reflective_model_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__reflective_model_8cs_source_1l00124"/>00124 
<anchor xml:id="__reflective_model_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chosenComponentChangeCounter++;
<anchor xml:id="__reflective_model_8cs_source_1l00126"/>00126 
<anchor xml:id="__reflective_model_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;type&#32;=&#32;refDisplayState.ChosenType;
<anchor xml:id="__reflective_model_8cs_source_1l00128"/>00128 
<anchor xml:id="__reflective_model_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__reflective_model_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refDisplayState&#32;=&#32;refDisplayState&#32;with
<anchor xml:id="__reflective_model_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ComponentPropertyInfoList&#32;=&#32;type
<anchor xml:id="__reflective_model_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.GetProperties()
<anchor xml:id="__reflective_model_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Where(x&#32;=&gt;&#32;Attribute.IsDefined(x,&#32;typeof(ParameterAttribute)))
<anchor xml:id="__reflective_model_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.ToArray()
<anchor xml:id="__reflective_model_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__reflective_model_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__reflective_model_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refDisplayState&#32;=&#32;refDisplayState&#32;with
<anchor xml:id="__reflective_model_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ComponentPropertyInfoList&#32;=&#32;Array.Empty&lt;PropertyInfo&gt;()
<anchor xml:id="__reflective_model_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__reflective_model_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00147"/>00147 
<anchor xml:id="__reflective_model_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.WithAction(
<anchor xml:id="__reflective_model_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refDisplayState.Key,&#32;inDisplayState&#32;=&gt;&#32;inDisplayState&#32;with
<anchor xml:id="__reflective_model_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChosenTypeGuid&#32;=&#32;refDisplayState.ChosenTypeGuid,
<anchor xml:id="__reflective_model_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PreviousTypeGuid&#32;=&#32;refDisplayState.PreviousTypeGuid,
<anchor xml:id="__reflective_model_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ComponentPropertyInfoList&#32;=&#32;refDisplayState.ComponentPropertyInfoList,
<anchor xml:id="__reflective_model_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReflectiveParameterMap&#32;=&#32;new(),
<anchor xml:id="__reflective_model_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__reflective_model_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00157"/>00157 
<anchor xml:id="__reflective_model_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">object</emphasis>?&#32;InvokeConstructorRecursively(
<anchor xml:id="__reflective_model_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;parameterKey,
<anchor xml:id="__reflective_model_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ParameterInfo&#32;parameterInfo)
<anchor xml:id="__reflective_model_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameterKey&#32;+=&#32;$<emphasis role="stringliteral">&quot;.{parameterInfo.Name}&quot;</emphasis>;
<anchor xml:id="__reflective_model_8cs_source_1l00166"/>00166 
<anchor xml:id="__reflective_model_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;objectInstance&#32;=&#32;(<emphasis role="keywordtype">object</emphasis>?)<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__reflective_model_8cs_source_1l00168"/>00168 
<anchor xml:id="__reflective_model_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameterInfo.ParameterType.IsPrimitive&#32;||
<anchor xml:id="__reflective_model_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameterInfo.ParameterType&#32;==&#32;typeof(<emphasis role="keywordtype">string</emphasis>))
<anchor xml:id="__reflective_model_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReflectiveParameterMap.TryGetValue(parameterKey,&#32;out&#32;var&#32;value))
<anchor xml:id="__reflective_model_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objectInstance&#32;=&#32;value.Value;
<anchor xml:id="__reflective_model_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__reflective_model_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReflectiveParameterMap.TryGetValue(parameterKey,&#32;out&#32;var&#32;value)&#32;&amp;&amp;
<anchor xml:id="__reflective_model_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.ChosenConstructorInfo&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__reflective_model_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;topLevelConstructorArgs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;object?&gt;();
<anchor xml:id="__reflective_model_8cs_source_1l00181"/>00181 
<anchor xml:id="__reflective_model_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;constructorParameter&#32;<emphasis role="keywordflow">in</emphasis>&#32;value.ChosenConstructorInfo.GetParameters())
<anchor xml:id="__reflective_model_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;topLevelConstructorArgs.Add(InvokeConstructorRecursively(
<anchor xml:id="__reflective_model_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameterKey,
<anchor xml:id="__reflective_model_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constructorParameter));
<anchor xml:id="__reflective_model_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00188"/>00188 
<anchor xml:id="__reflective_model_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;objectInstance&#32;=&#32;value.ChosenConstructorInfo.Invoke(
<anchor xml:id="__reflective_model_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;topLevelConstructorArgs.ToArray());
<anchor xml:id="__reflective_model_8cs_source_1l00191"/>00191 
<anchor xml:id="__reflective_model_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.Value&#32;=&#32;objectInstance;
<anchor xml:id="__reflective_model_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00195"/>00195 
<anchor xml:id="__reflective_model_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;objectInstance;
<anchor xml:id="__reflective_model_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00198"/>00198 
<anchor xml:id="__reflective_model_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;BubbleUpValue(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1_1_i_reflective_parameter">IReflectiveParameter</link>&#32;value)
<anchor xml:id="__reflective_model_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;splitName&#32;=&#32;name.Split(<emphasis role="charliteral">&apos;.&apos;</emphasis>);
<anchor xml:id="__reflective_model_8cs_source_1l00202"/>00202 
<anchor xml:id="__reflective_model_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;splitName.Length;&#32;i++)
<anchor xml:id="__reflective_model_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_model_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;splitName.Length&#32;-&#32;1)
<anchor xml:id="__reflective_model_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__reflective_model_8cs_source_1l00207"/>00207 
<anchor xml:id="__reflective_model_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;parentKey&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Join(<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;splitName.Take(i&#32;+&#32;1));
<anchor xml:id="__reflective_model_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;childKey&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Join(<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;splitName.Take(i&#32;+&#32;2));
<anchor xml:id="__reflective_model_8cs_source_1l00210"/>00210 
<anchor xml:id="__reflective_model_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ReflectiveParameterMap.TryGetValue(parentKey,&#32;out&#32;var&#32;parentValue)&#32;||
<anchor xml:id="__reflective_model_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!ReflectiveParameterMap.TryGetValue(childKey,&#32;out&#32;var&#32;childValue))
<anchor xml:id="__reflective_model_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__reflective_model_8cs_source_1l00214"/>00214 
<anchor xml:id="__reflective_model_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parentValue.ChosenConstructorInfo&#32;is&#32;<emphasis role="keyword">null</emphasis>&#32;||
<anchor xml:id="__reflective_model_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;childValue.ChosenConstructorInfo&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__reflective_model_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__reflective_model_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_model_8cs_source_1l00220"/>00220 }
</programlisting></section>
