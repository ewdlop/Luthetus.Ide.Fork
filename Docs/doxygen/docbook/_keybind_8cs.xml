<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__keybind_8cs" xml:lang="en-US">
<title>Source/Lib/Common/Keymaps/Models/Keybind.cs File Reference</title>
<indexterm><primary>Source/Lib/Common/Keymaps/Models/Keybind.cs</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keybind">Luthetus.Common.RazorLib.Keymaps.Models.Keybind</link></para>

<para>The idea behind this class is entirely based on the &apos;event.key&apos; vs &apos;event.code&apos; for a given keyboard event. It is desired to use the &apos;event.key&apos; sometimes, whereas other times the &apos;event.code&apos;. So, these corresponding properties on this type were made nullable. It still is incredibly clumsy because the goal is that 1 of them isn&apos;t null, yet both will forever be &quot;nullable&quot;. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_luthetus">Luthetus</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common">Luthetus.Common</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib">Luthetus.Common.RazorLib</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps">Luthetus.Common.RazorLib.Keymaps</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models">Luthetus.Common.RazorLib.Keymaps.Models</link></para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
