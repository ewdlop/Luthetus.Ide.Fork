<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models" xml:lang="en-US">
<title>Luthetus.Common.RazorLib.Reactives.Models Namespace Reference</title>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_debounce-1-g">Debounce&lt; TArgs &gt;</link></para>

<para>The &quot;starter code&quot; for this was copy and pasted from ThrottleOptimized. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_i_state_scheduler">IStateScheduler</link></para>

<para>Background and asynchronous state modification needs to be scheduled to the IDispatcher. </para>
</listitem>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_progress_bar_model">ProgressBarModel</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_state_scheduler">StateScheduler</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache">StringBuilderCache</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle">Throttle</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async">ThrottleAsync</link></para>

<para><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async">ThrottleAsync</link> does not achieve the desired result. It blocks itself, and therefore is useless? I like the idea I had with a blocking background task. But it doesn&apos;t really extend here much, at least given how its currently written? </para>
</listitem>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_event_queue_async">ThrottleEventQueueAsync</link></para>

<para>This type is thread safe.<?linebreak?><?linebreak?>. </para>
</listitem>
            <listitem><para>class <emphasis role="strong">ThrottleFacts</emphasis></para>
</listitem>
            <listitem><para>class <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_optimized-1-g">ThrottleOptimized&lt; TArgs &gt;</link></para>

<para>Sometimes when using the <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle">Throttle</link>, one is just re-using the same Func. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
