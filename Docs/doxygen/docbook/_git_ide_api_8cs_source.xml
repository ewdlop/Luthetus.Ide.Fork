<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__git_ide_api_8cs_source" xml:lang="en-US">
<title>GitIdeApi.cs</title>
<indexterm><primary>Source/Lib/Extensions/Extensions.Git/Models/GitIdeApi.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__git_ide_api_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Text;
<anchor xml:id="__git_ide_api_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__git_ide_api_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models">Luthetus.Common.RazorLib.FileSystems.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_notifications_1_1_models">Luthetus.Common.RazorLib.Notifications.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models">Luthetus.Common.RazorLib.ComponentRenderers.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_utility">Luthetus.TextEditor.RazorLib.CompilerServices.Utility</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models">Luthetus.TextEditor.RazorLib.Lexers.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_facts">Luthetus.TextEditor.RazorLib.CompilerServices.Facts</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models">Luthetus.Ide.RazorLib.Terminals.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00012"/>00012 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_states">Luthetus.Ide.RazorLib.Terminals.States</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00013"/>00013 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Ide.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00014"/>00014 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_command_lines_1_1_models">Luthetus.Ide.RazorLib.CommandLines.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00015"/>00015 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Ide.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00016"/>00016 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_states">Luthetus.Extensions.Git.States</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00017"/>00017 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_background_tasks_1_1_models">Luthetus.Extensions.Git.BackgroundTasks.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00018"/>00018 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_command_lines_1_1_models">Luthetus.Extensions.Git.CommandLines.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00019"/>00019 
<anchor xml:id="__git_ide_api_8cs_source_1l00020"/>00020 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models">Luthetus.Extensions.Git.Models</link>;
<anchor xml:id="__git_ide_api_8cs_source_1l00021"/>00021 
<anchor xml:id="__git_ide_api_8cs_source_1l00022"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api">00022</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1abac049abf1b6a1c3776e7aff84bc8b1d">GitIdeApi</link>
<anchor xml:id="__git_ide_api_8cs_source_1l00023"/>00023 {
<anchor xml:id="__git_ide_api_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_background_tasks_1_1_models_1_1_git_background_task_api">GitBackgroundTaskApi</link>&#32;_gitBackgroundTaskApi;
<anchor xml:id="__git_ide_api_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_ide_background_task_api">IdeBackgroundTaskApi</link>&#32;_ideBackgroundTaskApi;
<anchor xml:id="__git_ide_api_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;IState&lt;TerminalState&gt;&#32;_terminalStateWrap;
<anchor xml:id="__git_ide_api_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;IState&lt;GitState&gt;&#32;_gitStateWrap;
<anchor xml:id="__git_ide_api_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser">GitCliOutputParser</link>&#32;_gitCliOutputParser;
<anchor xml:id="__git_ide_api_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_i_environment_provider">IEnvironmentProvider</link>&#32;_environmentProvider;
<anchor xml:id="__git_ide_api_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&#32;_backgroundTaskService;
<anchor xml:id="__git_ide_api_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models_1_1_i_common_component_renderers">ICommonComponentRenderers</link>&#32;_commonComponentRenderers;
<anchor xml:id="__git_ide_api_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;IDispatcher&#32;_dispatcher;
<anchor xml:id="__git_ide_api_8cs_source_1l00033"/>00033 
<anchor xml:id="__git_ide_api_8cs_source_1l00034"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1abac049abf1b6a1c3776e7aff84bc8b1d">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1abac049abf1b6a1c3776e7aff84bc8b1d">GitIdeApi</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_background_tasks_1_1_models_1_1_git_background_task_api">GitBackgroundTaskApi</link>&#32;gitBackgroundTaskApi,
<anchor xml:id="__git_ide_api_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_ide_background_task_api">IdeBackgroundTaskApi</link>&#32;ideBackgroundTaskApi,
<anchor xml:id="__git_ide_api_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IState&lt;TerminalState&gt;&#32;terminalStateWrap,
<anchor xml:id="__git_ide_api_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IState&lt;GitState&gt;&#32;gitStateWrap,
<anchor xml:id="__git_ide_api_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser">GitCliOutputParser</link>&#32;gitCliOutputParser,
<anchor xml:id="__git_ide_api_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_i_environment_provider">IEnvironmentProvider</link>&#32;environmentProvider,
<anchor xml:id="__git_ide_api_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&#32;backgroundTaskService,
<anchor xml:id="__git_ide_api_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models_1_1_i_common_component_renderers">ICommonComponentRenderers</link>&#32;commonComponentRenderers,
<anchor xml:id="__git_ide_api_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IDispatcher&#32;dispatcher)
<anchor xml:id="__git_ide_api_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitBackgroundTaskApi&#32;=&#32;gitBackgroundTaskApi;
<anchor xml:id="__git_ide_api_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ideBackgroundTaskApi&#32;=&#32;ideBackgroundTaskApi;
<anchor xml:id="__git_ide_api_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap&#32;=&#32;terminalStateWrap;
<anchor xml:id="__git_ide_api_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitStateWrap&#32;=&#32;gitStateWrap;
<anchor xml:id="__git_ide_api_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser&#32;=&#32;gitCliOutputParser;
<anchor xml:id="__git_ide_api_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_environmentProvider&#32;=&#32;environmentProvider;
<anchor xml:id="__git_ide_api_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService&#32;=&#32;backgroundTaskService;
<anchor xml:id="__git_ide_api_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_commonComponentRenderers&#32;=&#32;commonComponentRenderers;
<anchor xml:id="__git_ide_api_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dispatcher&#32;=&#32;dispatcher;
<anchor xml:id="__git_ide_api_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00055"/>00055 
<anchor xml:id="__git_ide_api_8cs_source_1l00056"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aa53c94f8de8b3bce5732e5a802e707a0">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Key&lt;TerminalCommandRequest&gt;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aa53c94f8de8b3bce5732e5a802e707a0">GitTerminalCommandRequestKey</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}&#32;=&#32;Key&lt;TerminalCommandRequest&gt;.NewKey();
<anchor xml:id="__git_ide_api_8cs_source_1l00057"/>00057 
<anchor xml:id="__git_ide_api_8cs_source_1l00058"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aebc69e5672fb59432890286ec08eecd6">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aebc69e5672fb59432890286ec08eecd6">StatusEnqueue</link>()
<anchor xml:id="__git_ide_api_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;status&#32;-u&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00067"/>00067 
<anchor xml:id="__git_ide_api_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null)
<anchor xml:id="__git_ide_api_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00070"/>00070 
<anchor xml:id="__git_ide_api_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;gitStatusDashUCommand&#32;=&#32;$<emphasis role="stringliteral">&quot;{GitCliFacts.STATUS_COMMAND}&#32;-u&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;gitStatusDashUCommand&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;gitStatusDashUCommand,
<anchor xml:id="__git_ide_api_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser">GitCliOutputParser</link>.<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser_1_1_tag_constants">TagConstants</link>.StatusEnqueue,
<anchor xml:id="__git_ide_api_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00079"/>00079 
<anchor xml:id="__git_ide_api_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textSpanList&#32;=&#32;_gitCliOutputParser.StatusParseEntire(
<anchor xml:id="__git_ide_api_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsedCommand.OutputCache.ToString());
<anchor xml:id="__git_ide_api_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser.DispatchSetStatusAction();
<anchor xml:id="__git_ide_api_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsedCommand.TextSpanList&#32;=&#32;textSpanList;
<anchor xml:id="__git_ide_api_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00100"/>00100 
<anchor xml:id="__git_ide_api_8cs_source_1l00101"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a649542caab0826bcee1fedf2ff557c8f">00101</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a649542caab0826bcee1fedf2ff557c8f">RefreshEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aebc69e5672fb59432890286ec08eecd6">StatusEnqueue</link>();
<anchor xml:id="__git_ide_api_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a418f22c689b9c9f7aefa74550b15cc3f">BranchGetAllEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1ab740f39e8f73fcd1a571d7202aa89c18">GetActiveBranchNameEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a098360b247fcf5e4b2bda5d5b0a0f2ef">GetOriginNameEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00108"/>00108 
<anchor xml:id="__git_ide_api_8cs_source_1l00109"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1ab740f39e8f73fcd1a571d7202aa89c18">00109</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1ab740f39e8f73fcd1a571d7202aa89c18">GetActiveBranchNameEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;get&#32;active&#32;branch&#32;name&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00118"/>00118 
<anchor xml:id="__git_ide_api_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00121"/>00121 
<anchor xml:id="__git_ide_api_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandArgs&#32;=&#32;$<emphasis role="stringliteral">&quot;branch&#32;--show-current&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;terminalCommandArgs&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;terminalCommandArgs,
<anchor xml:id="__git_ide_api_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;GitCliOutputParser.TagConstants.GetActiveBranchNameEnqueue
<anchor xml:id="__git_ide_api_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00130"/>00130 
<anchor xml:id="__git_ide_api_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser.GetBranchParse(
<anchor xml:id="__git_ide_api_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsedCommand.OutputCache.ToString());
<anchor xml:id="__git_ide_api_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser.DispatchSetBranchAction();
<anchor xml:id="__git_ide_api_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00149"/>00149 
<anchor xml:id="__git_ide_api_8cs_source_1l00150"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a098360b247fcf5e4b2bda5d5b0a0f2ef">00150</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a098360b247fcf5e4b2bda5d5b0a0f2ef">GetOriginNameEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;get&#32;origin&#32;name&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00159"/>00159 
<anchor xml:id="__git_ide_api_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00162"/>00162 
<anchor xml:id="__git_ide_api_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandArgs&#32;=&#32;$<emphasis role="stringliteral">&quot;config&#32;--get&#32;remote.origin.url&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;terminalCommandArgs&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;terminalCommandArgs,
<anchor xml:id="__git_ide_api_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser">GitCliOutputParser</link>.<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser_1_1_tag_constants">TagConstants</link>.GetOriginNameEnqueue,
<anchor xml:id="__git_ide_api_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser.GetOriginParse(
<anchor xml:id="__git_ide_api_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsedCommand.OutputCache.ToString());
<anchor xml:id="__git_ide_api_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser.DispatchSetOriginAction();
<anchor xml:id="__git_ide_api_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00190"/>00190 
<anchor xml:id="__git_ide_api_8cs_source_1l00191"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a654a8cfbad1fa234968b9140ab1b9f91">00191</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a654a8cfbad1fa234968b9140ab1b9f91">AddEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;add&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00200"/>00200 
<anchor xml:id="__git_ide_api_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00203"/>00203 
<anchor xml:id="__git_ide_api_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;filesBuilder&#32;=&#32;&#32;new&#32;StringBuilder();
<anchor xml:id="__git_ide_api_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foreach&#32;(var&#32;gitFile&#32;in&#32;localGitState.SelectedFileList)
<anchor xml:id="__git_ide_api_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;relativePathString&#32;=&#32;gitFile.RelativePathString;
<anchor xml:id="__git_ide_api_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(_environmentProvider.DirectorySeparatorChar&#32;==&#32;<emphasis role="stringliteral">&apos;\\&apos;</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;following&#32;fails&#32;(directory&#32;separator&#32;character):</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;git&#32;add&#32;&quot;.\MyApp\&quot;</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Whereas&#32;the&#32;following&#32;succeeds</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;git&#32;add&#32;&quot;./MyApp/&quot;</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;relativePathString&#32;=&#32;relativePathString.Replace(
<anchor xml:id="__git_ide_api_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_environmentProvider.DirectorySeparatorChar,
<anchor xml:id="__git_ide_api_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_environmentProvider.AltDirectorySeparatorChar);
<anchor xml:id="__git_ide_api_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filesBuilder.Append($<emphasis role="stringliteral">&quot;\&quot;{relativePathString}\&quot;&#32;&quot;</emphasis>);
<anchor xml:id="__git_ide_api_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandArgs&#32;=&#32;<emphasis role="stringliteral">&quot;add&#32;&quot;</emphasis>&#32;+&#32;filesBuilder.ToString();
<anchor xml:id="__git_ide_api_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_command_lines_1_1_models_1_1_formatted_command">FormattedCommand</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;{&#32;terminalCommandArgs&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;terminalCommandArgs
<anchor xml:id="__git_ide_api_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StatusEnqueue();
<anchor xml:id="__git_ide_api_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00250"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aec58cdd4101301ba687d597a5aabd538">00250</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aec58cdd4101301ba687d597a5aabd538">UnstageEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;unstage&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00259"/>00259 
<anchor xml:id="__git_ide_api_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00262"/>00262 
<anchor xml:id="__git_ide_api_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;filesBuilder&#32;=&#32;&#32;new&#32;StringBuilder();
<anchor xml:id="__git_ide_api_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foreach&#32;(var&#32;gitFile&#32;in&#32;localGitState.SelectedFileList)
<anchor xml:id="__git_ide_api_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;relativePathString&#32;=&#32;gitFile.RelativePathString;
<anchor xml:id="__git_ide_api_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(_environmentProvider.DirectorySeparatorChar&#32;==&#32;<emphasis role="stringliteral">&apos;\\&apos;</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;following&#32;fails&#32;(directory&#32;separator&#32;character):</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;git&#32;restore&#32;--staged&#32;&quot;.\MyApp\&quot;</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Whereas&#32;the&#32;following&#32;succeeds</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;git&#32;restore&#32;--staged&#32;&quot;./MyApp/&quot;</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;relativePathString&#32;=&#32;relativePathString.Replace(
<anchor xml:id="__git_ide_api_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_environmentProvider.DirectorySeparatorChar,
<anchor xml:id="__git_ide_api_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_environmentProvider.AltDirectorySeparatorChar);
<anchor xml:id="__git_ide_api_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filesBuilder.Append($<emphasis role="stringliteral">&quot;\&quot;{relativePathString}\&quot;&#32;&quot;</emphasis>);
<anchor xml:id="__git_ide_api_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandArgs&#32;=&#32;<emphasis role="stringliteral">&quot;restore&#32;--staged&#32;&quot;</emphasis>&#32;+&#32;filesBuilder.ToString();
<anchor xml:id="__git_ide_api_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_command_lines_1_1_models_1_1_formatted_command">FormattedCommand</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;{&#32;terminalCommandArgs&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;terminalCommandArgs
<anchor xml:id="__git_ide_api_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StatusEnqueue();
<anchor xml:id="__git_ide_api_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00309"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a88a41bd77e80dfb30820f3e82f8f993d">00309</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a88a41bd77e80dfb30820f3e82f8f993d">CommitEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest,&#32;<emphasis role="keywordtype">string</emphasis>&#32;commitSummary)
<anchor xml:id="__git_ide_api_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;commit&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00318"/>00318 
<anchor xml:id="__git_ide_api_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00321"/>00321 
<anchor xml:id="__git_ide_api_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;argumentsString&#32;=&#32;$<emphasis role="stringliteral">&quot;commit&#32;-m&#32;\&quot;{commitSummary}\&quot;&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00323"/>00323 
<anchor xml:id="__git_ide_api_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;argumentsString&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;argumentsString
<anchor xml:id="__git_ide_api_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00330"/>00330 
<anchor xml:id="__git_ide_api_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1aebc69e5672fb59432890286ec08eecd6">StatusEnqueue</link>();
<anchor xml:id="__git_ide_api_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotificationHelper.DispatchInformative(
<anchor xml:id="__git_ide_api_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Git:&#32;committed&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commitSummary,
<anchor xml:id="__git_ide_api_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_commonComponentRenderers,
<anchor xml:id="__git_ide_api_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dispatcher,
<anchor xml:id="__git_ide_api_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TimeSpan.FromSeconds(5));
<anchor xml:id="__git_ide_api_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00354"/>00354 
<anchor xml:id="__git_ide_api_8cs_source_1l00355"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a71e9a9b2e2bb040fe8ea5359c5b0dc3a">00355</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a71e9a9b2e2bb040fe8ea5359c5b0dc3a">BranchNewEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest,&#32;<emphasis role="keywordtype">string</emphasis>&#32;branchName)
<anchor xml:id="__git_ide_api_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrWhiteSpace(branchName))
<anchor xml:id="__git_ide_api_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotificationHelper.DispatchError(nameof(<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a71e9a9b2e2bb040fe8ea5359c5b0dc3a">BranchNewEnqueue</link>),&#32;<emphasis role="stringliteral">&quot;branchName&#32;was&#32;null&#32;or&#32;whitespace&quot;</emphasis>,&#32;_commonComponentRenderers,&#32;_dispatcher,&#32;TimeSpan.FromSeconds(6));
<anchor xml:id="__git_ide_api_8cs_source_1l00359"/>00359 
<anchor xml:id="__git_ide_api_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;new&#32;branch&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00367"/>00367 
<anchor xml:id="__git_ide_api_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00370"/>00370 
<anchor xml:id="__git_ide_api_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;argumentsString&#32;=&#32;<emphasis role="stringliteral">&quot;checkout&#32;-b&#32;&quot;</emphasis>&#32;+&#32;branchName;
<anchor xml:id="__git_ide_api_8cs_source_1l00372"/>00372 
<anchor xml:id="__git_ide_api_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;argumentsString&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;argumentsString
<anchor xml:id="__git_ide_api_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a649542caab0826bcee1fedf2ff557c8f">RefreshEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00395"/>00395 
<anchor xml:id="__git_ide_api_8cs_source_1l00396"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a418f22c689b9c9f7aefa74550b15cc3f">00396</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a418f22c689b9c9f7aefa74550b15cc3f">BranchGetAllEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;branch&#32;-a&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00405"/>00405 
<anchor xml:id="__git_ide_api_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00408"/>00408 
<anchor xml:id="__git_ide_api_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;argumentsString&#32;=&#32;<emphasis role="stringliteral">&quot;branch&#32;-a&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00410"/>00410 
<anchor xml:id="__git_ide_api_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;argumentsString&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;argumentsString,
<anchor xml:id="__git_ide_api_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser">GitCliOutputParser</link>.<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser_1_1_tag_constants">TagConstants</link>.BranchGetAllEnqueue,
<anchor xml:id="__git_ide_api_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser.GetBranchListEntire(
<anchor xml:id="__git_ide_api_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsedCommand.OutputCache.ToString());
<anchor xml:id="__git_ide_api_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser.DispatchSetBranchListAction();
<anchor xml:id="__git_ide_api_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00438"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a26276afc98fdf8c456c86ddcaa3791e9">00438</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a26276afc98fdf8c456c86ddcaa3791e9">BranchSetEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest,&#32;<emphasis role="keywordtype">string</emphasis>&#32;branchName)
<anchor xml:id="__git_ide_api_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$<emphasis role="stringliteral">&quot;git&#32;checkout&#32;{branchName}&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00447"/>00447 
<anchor xml:id="__git_ide_api_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00450"/>00450 
<anchor xml:id="__git_ide_api_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;argumentsString&#32;=&#32;$<emphasis role="stringliteral">&quot;checkout&#32;{branchName}&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00452"/>00452 
<anchor xml:id="__git_ide_api_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;argumentsString&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;argumentsString,
<anchor xml:id="__git_ide_api_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser">GitCliOutputParser</link>.<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser_1_1_tag_constants">TagConstants</link>.BranchSetEnqueue,
<anchor xml:id="__git_ide_api_8cs_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00460"/>00460 
<anchor xml:id="__git_ide_api_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a649542caab0826bcee1fedf2ff557c8f">RefreshEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00477"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1af62bb43dfb3e94c1e1525710fc31ebad">00477</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1af62bb43dfb3e94c1e1525710fc31ebad">PushToOriginWithTrackingEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;push&#32;-u&#32;origin&#32;{branchName&#32;will&#32;go&#32;here}&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00486"/>00486 
<anchor xml:id="__git_ide_api_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00489"/>00489 
<anchor xml:id="__git_ide_api_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;command&#32;will&#32;push&#32;to&#32;origin,&#32;and&#32;then&#32;set&#32;the&#32;upstream&#32;variable</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(unsure&#32;if&#32;this&#32;is&#32;the&#32;correct&#32;description)</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;argumentsString&#32;=&#32;$<emphasis role="stringliteral">&quot;push&#32;-u&#32;origin&#32;{localGitState.Branch}&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00493"/>00493 
<anchor xml:id="__git_ide_api_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;argumentsString&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;argumentsString,
<anchor xml:id="__git_ide_api_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;GitCliOutputParser.TagConstants.PushToOriginWithTrackingEnqueue
<anchor xml:id="__git_ide_api_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00501"/>00501 
<anchor xml:id="__git_ide_api_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a649542caab0826bcee1fedf2ff557c8f">RefreshEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00517"/>00517 
<anchor xml:id="__git_ide_api_8cs_source_1l00518"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1ab0ea1abd66cc5a696a44d3b1e4d2cabb">00518</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1ab0ea1abd66cc5a696a44d3b1e4d2cabb">PullEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;pull&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00527"/>00527 
<anchor xml:id="__git_ide_api_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00530"/>00530 
<anchor xml:id="__git_ide_api_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;argumentsString&#32;=&#32;$<emphasis role="stringliteral">&quot;pull&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00532"/>00532 
<anchor xml:id="__git_ide_api_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;argumentsString&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;argumentsString,
<anchor xml:id="__git_ide_api_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;GitCliOutputParser.TagConstants.PullEnqueue
<anchor xml:id="__git_ide_api_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00540"/>00540 
<anchor xml:id="__git_ide_api_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a649542caab0826bcee1fedf2ff557c8f">RefreshEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00557"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1ace0d50de71b4baf0d9bb2c1d1bd9afcd">00557</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1ace0d50de71b4baf0d9bb2c1d1bd9afcd">FetchEnqueue</link>(<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;fetch&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00566"/>00566 
<anchor xml:id="__git_ide_api_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00569"/>00569 
<anchor xml:id="__git_ide_api_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;argumentsString&#32;=&#32;$<emphasis role="stringliteral">&quot;fetch&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00571"/>00571 
<anchor xml:id="__git_ide_api_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;argumentsString&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;argumentsString,
<anchor xml:id="__git_ide_api_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;GitCliOutputParser.TagConstants.FetchEnqueue
<anchor xml:id="__git_ide_api_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00579"/>00579 
<anchor xml:id="__git_ide_api_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a649542caab0826bcee1fedf2ff557c8f">RefreshEnqueue</link>(repoAtTimeOfRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00596"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a797be9bd8b42cc3b185a41f3d41040ba">00596</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a797be9bd8b42cc3b185a41f3d41040ba">LogFileEnqueue</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest,
<anchor xml:id="__git_ide_api_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;relativePathToFile,
<anchor xml:id="__git_ide_api_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Func&lt;GitCliOutputParser,&#32;string,&#32;Task&gt;&#32;callback)
<anchor xml:id="__git_ide_api_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;log&#32;file&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00608"/>00608 
<anchor xml:id="__git_ide_api_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00611"/>00611 
<anchor xml:id="__git_ide_api_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandArgs&#32;=&#32;$<emphasis role="stringliteral">&quot;log&#32;-p&#32;{relativePathToFile}&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;terminalCommandArgs&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;terminalCommandArgs,
<anchor xml:id="__git_ide_api_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;GitCliOutputParser.TagConstants.LogFileEnqueue
<anchor xml:id="__git_ide_api_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00620"/>00620 
<anchor xml:id="__git_ide_api_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;callback.Invoke(
<anchor xml:id="__git_ide_api_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser,
<anchor xml:id="__git_ide_api_8cs_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsedCommand.OutputCache.ToString());
<anchor xml:id="__git_ide_api_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00638"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a8e602b5bae59e997072993729eb2d629">00638</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a8e602b5bae59e997072993729eb2d629">ShowFileEnqueue</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest,
<anchor xml:id="__git_ide_api_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;relativePathToFile,
<anchor xml:id="__git_ide_api_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Func&lt;GitCliOutputParser,&#32;string,&#32;Task&gt;&#32;callback)
<anchor xml:id="__git_ide_api_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;show&#32;file&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00650"/>00650 
<anchor xml:id="__git_ide_api_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00653"/>00653 
<anchor xml:id="__git_ide_api_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Example&#32;output:</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00656"/>00656 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PS&#32;C:\Users\hunte\Repos\Demos\BlazorApp4NetCoreDbg&gt;&#32;git&#32;log&#32;BlazorApp4NetCoreDbg/Pages/FetchData.razor</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00657"/>00657 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commit&#32;87c2893b1006defc36770c166ab13fdbc6b7f959</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00658"/>00658 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Author:&#32;Luthetus&#32;&lt;45454132+huntercfreeman@users.noreply.github.com&gt;</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00659"/>00659 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Date:&#32;&#32;&#32;Fri&#32;May&#32;3&#32;16:15:17&#32;2024&#32;-0400</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00660"/>00660 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00661"/>00661 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Abc123&#32;3</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00662"/>00662 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;skipTextLength&#32;=&#32;<emphasis role="stringliteral">&quot;commit&#32;&quot;</emphasis>.Length;
<anchor xml:id="__git_ide_api_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;takeTextLength&#32;=&#32;<emphasis role="stringliteral">&quot;87c2893b1006defc36770c166ab13fdbc6b7f959&quot;</emphasis>.Length;
<anchor xml:id="__git_ide_api_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;logTerminalCommandArgs&#32;=&#32;$<emphasis role="stringliteral">&quot;log&#32;-p&#32;{relativePathToFile}&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;logTerminalCommandArgs&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;logTerminalCommandArgs,
<anchor xml:id="__git_ide_api_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;GitCliOutputParser.TagConstants.LogFileEnqueue
<anchor xml:id="__git_ide_api_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00675"/>00675 
<anchor xml:id="__git_ide_api_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;logTerminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;gitHashParsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;hash&#32;=&#32;gitHashParsedCommand.OutputCache
<anchor xml:id="__git_ide_api_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.ToString()
<anchor xml:id="__git_ide_api_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Substring(skipTextLength,&#32;takeTextLength)
<anchor xml:id="__git_ide_api_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Trim();
<anchor xml:id="__git_ide_api_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;showTerminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$<emphasis role="stringliteral">&quot;git&#32;show&#32;{hash}:{relativePathToFile}&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;output&#32;=&#32;parsedCommand.OutputCache.ToString();
<anchor xml:id="__git_ide_api_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(output.StartsWith(<emphasis role="stringliteral">&quot;ï»¿&quot;</emphasis>))
<anchor xml:id="__git_ide_api_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output&#32;=&#32;output[<emphasis role="stringliteral">&quot;ï»¿&quot;</emphasis>.Length..];
<anchor xml:id="__git_ide_api_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;callback.Invoke(
<anchor xml:id="__git_ide_api_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser,
<anchor xml:id="__git_ide_api_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output);
<anchor xml:id="__git_ide_api_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(showTerminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(logTerminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;int&gt;&#32;GetPlusMarkedLineIndexList(<emphasis role="keywordtype">string</emphasis>&#32;gitLogDashPOutput)
<anchor xml:id="__git_ide_api_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;stringWalker&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_utility_1_1_string_walker">StringWalker</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a26a1b63ad28ec7955b30bc6c91571eca">ResourceUri</link>(<emphasis role="stringliteral">&quot;/getPlusMarkedLineIndexList.txt&quot;</emphasis>),&#32;gitLogDashPOutput);
<anchor xml:id="__git_ide_api_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;linesReadCount&#32;=&#32;0;
<anchor xml:id="__git_ide_api_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;hunk&#32;header&#32;looks&#32;like:</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;@@&#32;-1,6&#32;+1,23&#32;@@&quot;</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;atAtReadCount&#32;=&#32;0;
<anchor xml:id="__git_ide_api_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;oldAndNewHaveEqualFirstLine&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>?&#32;sourceLineNumber&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;isFirstCharacterOnLine&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;plusMarkedLineIndexList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
<anchor xml:id="__git_ide_api_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!stringWalker.IsEof)
<anchor xml:id="__git_ide_api_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(WhitespaceFacts.LINE_ENDING_CHARACTER_LIST.Contains(stringWalker.CurrentCharacter))
<anchor xml:id="__git_ide_api_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stringWalker.CurrentCharacter&#32;==&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>&#32;&amp;&amp;&#32;stringWalker.NextCharacter&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;stringWalker.ReadCharacter();
<anchor xml:id="__git_ide_api_8cs_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;linesReadCount++;
<anchor xml:id="__git_ide_api_8cs_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isFirstCharacterOnLine&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sourceLineNumber&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLineNumber++;
<anchor xml:id="__git_ide_api_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(linesReadCount&#32;==&#32;4&#32;&amp;&amp;&#32;sourceLineNumber&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Naively&#32;going&#32;to&#32;assume&#32;that&#32;the&#32;5th&#32;line&#32;is&#32;always&#32;the&#32;start&#32;of&#32;the&#32;hunk&#32;header...&#32;for&#32;now</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stringWalker.CurrentCharacter&#32;==&#32;<emphasis role="charliteral">&apos;@&apos;</emphasis>&#32;&amp;&amp;&#32;stringWalker.NextCharacter&#32;==&#32;<emphasis role="charliteral">&apos;@&apos;</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;atAtReadCount++;
<anchor xml:id="__git_ide_api_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(atAtReadCount&#32;==&#32;2)
<anchor xml:id="__git_ide_api_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(WhitespaceFacts.LINE_ENDING_CHARACTER_LIST.Contains(stringWalker.PeekCharacter(2)))
<anchor xml:id="__git_ide_api_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;immediately&#32;after&#32;the&#32;hunk&#32;header&#32;there&#32;is&#32;a&#32;newline&#32;character,</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;then&#32;the&#32;old&#32;and&#32;new&#32;text&#32;are&#32;NOT&#32;equal&#32;with&#32;respects&#32;to&#32;the&#32;first&#32;line.</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;after&#32;the&#32;hunk&#32;header&#32;there&#32;is&#32;NOT&#32;a&#32;newline&#32;character,</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;then&#32;the&#32;old&#32;and&#32;new&#32;text&#32;are&#32;equal&#32;with&#32;respects&#32;to&#32;the&#32;first&#32;line.</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(Does&#32;modificaton&#32;imply&#32;deletion&#32;of&#32;old,&#32;and&#32;insertion&#32;of&#32;new?)</emphasis>
<anchor xml:id="__git_ide_api_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oldAndNewHaveEqualFirstLine&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLineNumber&#32;=&#32;0;
<anchor xml:id="__git_ide_api_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sourceLineNumber&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isFirstCharacterOnLine&#32;&amp;&amp;&#32;stringWalker.CurrentCharacter&#32;==&#32;<emphasis role="charliteral">&apos;+&apos;</emphasis>)
<anchor xml:id="__git_ide_api_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plusMarkedLineIndexList.Add(sourceLineNumber.Value&#32;-&#32;1);
<anchor xml:id="__git_ide_api_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;stringWalker.ReadCharacter();
<anchor xml:id="__git_ide_api_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;plusMarkedLineIndexList;
<anchor xml:id="__git_ide_api_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00781"/><link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a42264c1741bc2a754cf02ff61f7bdc45">00781</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_ide_api_1a42264c1741bc2a754cf02ff61f7bdc45">DiffFileEnqueue</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_extensions_1_1_git_1_1_models_1acfcc10aa7ca94ea134cc43cd40e790ab">GitRepo</link>&#32;repoAtTimeOfRequest,
<anchor xml:id="__git_ide_api_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;relativePathToFile,
<anchor xml:id="__git_ide_api_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Func&lt;<link linkend="_class_luthetus_1_1_extensions_1_1_git_1_1_models_1_1_git_cli_output_parser">GitCliOutputParser</link>,&#32;<emphasis role="keywordtype">string</emphasis>,&#32;List&lt;int&gt;,&#32;Task&gt;&#32;callback)
<anchor xml:id="__git_ide_api_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backgroundTaskService.Enqueue(
<anchor xml:id="__git_ide_api_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTask&gt;.NewKey(),
<anchor xml:id="__git_ide_api_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__git_ide_api_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;git&#32;diff&#32;file&quot;</emphasis>,
<anchor xml:id="__git_ide_api_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localGitState&#32;=&#32;_gitStateWrap.Value;
<anchor xml:id="__git_ide_api_8cs_source_1l00793"/>00793 
<anchor xml:id="__git_ide_api_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(localGitState.Repo&#32;is&#32;null&#32;||&#32;localGitState.Repo&#32;!=&#32;repoAtTimeOfRequest)
<anchor xml:id="__git_ide_api_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00796"/>00796 
<anchor xml:id="__git_ide_api_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandArgs&#32;=&#32;$<emphasis role="stringliteral">&quot;diff&#32;-p&#32;{relativePathToFile}&quot;</emphasis>;
<anchor xml:id="__git_ide_api_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;formattedCommand&#32;=&#32;new&#32;FormattedCommand(
<anchor xml:id="__git_ide_api_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GitCliFacts.TARGET_FILE_NAME,
<anchor xml:id="__git_ide_api_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;string[]&#32;{&#32;terminalCommandArgs&#32;})
<anchor xml:id="__git_ide_api_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HACK_ArgumentsString&#32;=&#32;terminalCommandArgs,
<anchor xml:id="__git_ide_api_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tag&#32;=&#32;GitCliOutputParser.TagConstants.LogFileEnqueue
<anchor xml:id="__git_ide_api_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00805"/>00805 
<anchor xml:id="__git_ide_api_8cs_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__git_ide_api_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formattedCommand.Value,
<anchor xml:id="__git_ide_api_8cs_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localGitState.Repo.AbsolutePath.Value)
<anchor xml:id="__git_ide_api_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__git_ide_api_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__git_ide_api_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;plusMarkedLineIndexList&#32;=&#32;GetPlusMarkedLineIndexList(parsedCommand.OutputCache.ToString());
<anchor xml:id="__git_ide_api_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;callback.Invoke(
<anchor xml:id="__git_ide_api_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_gitCliOutputParser,
<anchor xml:id="__git_ide_api_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parsedCommand.OutputCache.ToString(),
<anchor xml:id="__git_ide_api_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plusMarkedLineIndexList);
<anchor xml:id="__git_ide_api_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__git_ide_api_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__git_ide_api_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.GENERAL_KEY].EnqueueCommand(terminalCommandRequest);
<anchor xml:id="__git_ide_api_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__git_ide_api_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__git_ide_api_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;}
<anchor xml:id="__git_ide_api_8cs_source_1l00825"/>00825 }
</programlisting></section>
