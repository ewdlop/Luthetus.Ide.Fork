<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__reflective_display_8razor_8cs_source" xml:lang="en-US">
<title>ReflectiveDisplay.razor.cs</title>
<indexterm><primary>Source/Lib/Common/Reflectives/Displays/ReflectiveDisplay.razor.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__reflective_display_8razor_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Reflection;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Microsoft.AspNetCore.Components;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Microsoft.AspNetCore.Components.Web;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states">Luthetus.Common.RazorLib.Reflectives.States</link>;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models">Luthetus.Common.RazorLib.Reflectives.Models</link>;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_states">Luthetus.Common.RazorLib.Options.States</link>;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00009"/>00009 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00010"/>00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays">Luthetus.Common.RazorLib.Reflectives.Displays</link>;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00011"/>00011 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00012"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display">00012</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display">ReflectiveDisplay</link>&#32;:&#32;ComponentBase
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00013"/>00013 {
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[Inject]
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IDispatcher&#32;Dispatcher&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;[Inject]
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IStateSelection&lt;ReflectiveState,&#32;ReflectiveModel?&gt;&#32;ReflectiveStateSelection&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;[Inject]
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IState&lt;AppOptionsState&gt;&#32;AppOptionsStateWrap&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00020"/>00020 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;[Parameter,&#32;EditorRequired]
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00022"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a4d9a5ac835c9a8e45c37b30d0487def3">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Key&lt;ReflectiveModel&gt;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a4d9a5ac835c9a8e45c37b30d0487def3">ReflectiveModelKey</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;[Parameter,&#32;EditorRequired]
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00024"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a49ce8fb556139343577d6b9bb0965666">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a49ce8fb556139343577d6b9bb0965666">Index</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;[Parameter,&#32;EditorRequired]
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00026"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1acb13dbc551528fca769b6fdee8ae2131">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;Type&gt;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1acb13dbc551528fca769b6fdee8ae2131">ComponentTypeList</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00027"/>00027 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;ErrorBoundary&#32;_errorBoundaryComponent&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;ElementReference&#32;_selectElementReference;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_chosenComponentChangeCounter;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00031"/>00031 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00032"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a25bb634adb39f3eda92171936d50ef75">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a25bb634adb39f3eda92171936d50ef75">OnInitialized</link>()
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReflectiveStateSelection
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Select(x&#32;=&gt;&#32;x.ReflectiveModelList
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FirstOrDefault(y&#32;=&gt;&#32;y.Key&#32;==&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a4d9a5ac835c9a8e45c37b30d0487def3">ReflectiveModelKey</link>));
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00037"/>00037 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnInitialized();
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00040"/>00040 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00041"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a7c36de970373c4aabb70990f7b5af794">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;async&#32;Task&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1a7c36de970373c4aabb70990f7b5af794">OnAfterRenderAsync</link>(<emphasis role="keywordtype">bool</emphasis>&#32;firstRender)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_chosenComponentChangeCounter&#32;&gt;&#32;0)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_chosenComponentChangeCounter&#32;=&#32;0;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00046"/>00046 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Invoke&#32;&apos;Recover&apos;&#32;directly,&#32;do&#32;not&#32;use&#32;&apos;WrapRecover&apos;&#32;here.</emphasis>
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_errorBoundaryComponent.Recover();
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00049"/>00049 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;_selectElementReference.FocusAsync().ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00052"/>00052 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;base.OnAfterRenderAsync(firstRender);
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00055"/>00055 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnSelectChanged(ChangeEventArgs&#32;changeEventArgs)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;model&#32;=&#32;ReflectiveStateSelection.Value;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00059"/>00059 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(model&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00062"/>00062 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;chosenTypeGuidString&#32;=&#32;changeEventArgs.Value&#32;as&#32;string;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00064"/>00064 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.CalculateComponentPropertyInfoList(chosenTypeGuidString,&#32;ref&#32;_chosenComponentChangeCounter);
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00067"/>00067 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;WrapRecover()
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;displayState&#32;=&#32;ReflectiveStateSelection.Value;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00071"/>00071 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(displayState&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00074"/>00074 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.WithAction(
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displayState.Key,&#32;inDisplayState&#32;=&gt;&#32;inDisplayState&#32;with&#32;{&#32;}));
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00077"/>00077 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_errorBoundaryComponent.Recover();
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00080"/>00080 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DispatchDisposeAction(<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1a87d77c11765aadf12d63350b888987e6">ReflectiveModel</link>&#32;reflectiveModel)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.DisposeAction(reflectiveModel.Key));
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00085"/>00085 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DispatchRegisterAction(<emphasis role="keywordtype">int</emphasis>&#32;insertionIndex)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1a87d77c11765aadf12d63350b888987e6">ReflectiveModel</link>(
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;ReflectiveModel&gt;.NewKey(),
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_displays_1_1_reflective_display_1acb13dbc551528fca769b6fdee8ae2131">ComponentTypeList</link>,
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Guid.Empty,
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Guid.Empty,
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Array.Empty&lt;PropertyInfo&gt;(),
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>(),
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher);
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00096"/>00096 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_states_1acba6b3f1b3436e8855ad1401b1d8718e">ReflectiveState</link>.RegisterAction(model,&#32;insertionIndex));
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00099"/>00099 
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetIsOptionSelected(<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reflectives_1_1_models_1a87d77c11765aadf12d63350b888987e6">ReflectiveModel</link>&#32;model,&#32;Guid&#32;typeGuid)
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;{
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;typeGuid&#32;==&#32;model.ChosenTypeGuid;
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="__reflective_display_8razor_8cs_source_1l00104"/>00104 }
</programlisting></section>
