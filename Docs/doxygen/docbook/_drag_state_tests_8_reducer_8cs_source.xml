<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__drag_state_tests_8_reducer_8cs_source" xml:lang="en-US">
<title>DragStateTests.Reducer.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/Drags/States/DragStateTests.Reducer.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_displays">Luthetus.Common.RazorLib.Drags.Displays</link>;
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00004"/>00004 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00005"/>00005 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_states">Luthetus.Common.Tests.Basis.Drags.States</link>;
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00006"/>00006 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00010"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_states_1_1_drag_state_reducer_tests">00010</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_states_1_1_drag_state_reducer_tests">DragStateReducerTests</link>
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00011"/>00011 {
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00016"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_states_1_1_drag_state_reducer_tests_1a0c9edaa970ed7da6c98047df70f51a8c">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_states_1_1_drag_state_reducer_tests_1a0c9edaa970ed7da6c98047df70f51a8c">ReduceWithAction</link>()
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;{
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeDragStateReducerTests(out&#32;_,&#32;out&#32;var&#32;dragStateWrap,&#32;out&#32;var&#32;dispatcher);
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00019"/>00019 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(dragStateWrap.Value.ShouldDisplay);
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(dragStateWrap.Value.MouseEventArgs);
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00022"/>00022 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_displays_1a2158af3f35275731447356de1965b7cb">DragState</link>.WithAction(x&#32;=&gt;&#32;x&#32;with
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShouldDisplay&#32;=&#32;true,
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MouseEventArgs&#32;=&#32;new(),
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00028"/>00028 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(dragStateWrap.Value.ShouldDisplay);
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(dragStateWrap.Value.MouseEventArgs);
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00032"/>00032 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeDragStateReducerTests(
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;ServiceProvider&#32;serviceProvider,
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;IState&lt;DragState&gt;&#32;dragStateWrap,
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;IDispatcher&#32;dispatcher)
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;{
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddFluxor(options&#32;=&gt;&#32;options.ScanAssemblies(typeof(<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_displays_1a2158af3f35275731447356de1965b7cb">DragState</link>).Assembly));
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00040"/>00040 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serviceProvider&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00042"/>00042 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;store&#32;=&#32;serviceProvider.GetRequiredService&lt;IStore&gt;();
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.InitializeAsync().Wait();
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00045"/>00045 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dragStateWrap&#32;=&#32;serviceProvider.GetRequiredService&lt;IState&lt;DragState&gt;&gt;();
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00047"/>00047 
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dispatcher&#32;=&#32;serviceProvider.GetRequiredService&lt;IDispatcher&gt;();
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__drag_state_tests_8_reducer_8cs_source_1l00050"/>00050 }
</programlisting></section>
