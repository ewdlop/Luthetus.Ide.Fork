<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope" xml:lang="en-US">
<title>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope Interface Reference</title>
<indexterm><primary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</primary></indexterm>
Inheritance diagram for Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_fbb89b74d57a0670c22846a0a2d85ed6">ICodeBlockOwner</link> <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1ac864a69c5039a944689ef6e02d803e3a">CodeBlockOwner</link><computeroutput> [get]</computeroutput>
</para>

<para>This is believed to be far better than a <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_i_syntax_node">ISyntaxNode</link> having a pointer to its parent. </para>
</listitem>
            <listitem><para>int <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1a61522fba59477beb1f3cafe27c43cb9c">IndexKey</link><computeroutput> [get]</computeroutput>
</para>

<para>All scopes in a file are stored in a flat list, grouped by the ResourceUri they were found in. Everytime a scope is instantiated, it gets an incrementing counter as its IndexKey (which is equal to the index it was inserted at... &apos;list.Count&apos;). </para>
</listitem>
            <listitem><para>int? <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1abfaa5ee6ee4ef26f6072fc309d244d71">ParentIndexKey</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>int <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1a7e7db70d787bcdb4c9ffd3d5f11f9ca4">StartingIndexInclusive</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>int? <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1a3aafa57351a91d8b8be8f76045501186">EndingIndexExclusive</link><computeroutput> [get, set]</computeroutput>
</para>

<para>Beware of this property&apos;s setter, as a hack to set the ending index later on in this type&apos;s lifecycle because it isn&apos;t immediately known. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__i_scope_8cs_source_1l00009">9</link> of file <link linkend="__i_scope_8cs_source">IScope.cs</link>.</para>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1ac864a69c5039a944689ef6e02d803e3a"/><section>
    <title>CodeBlockOwner</title>
<indexterm><primary>CodeBlockOwner</primary><secondary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</secondary></indexterm>
<indexterm><primary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</primary><secondary>CodeBlockOwner</secondary></indexterm>
<para><computeroutput><link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_fbb89b74d57a0670c22846a0a2d85ed6">ICodeBlockOwner</link> Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope.CodeBlockOwner<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>This is believed to be far better than a <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_i_syntax_node">ISyntaxNode</link> having a pointer to its parent. </para>
</para>

<para>(i.e.: with this the <link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes">Nodes</link> can be left as a singly linked tree.)</para>

<para>Then, one can query the <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_binder">IBinder</link> to determine what the active scope is given a positionIndex within a file, or etc...</para>

<para>This scope struct then acts as an index into the compilation unit&apos;s node tree.</para>

<para>If a scope contains 100 nodes, then 100 pointers would have previously been needed due to 1 per node.</para>

<para>By having the &apos;Scope&apos; contain a pointer to a node, the same example only requires 1 pointer to the node that created the scope.</para>

<para>From there, traversal down the tree is done with <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_i_syntax_node_1a73d81f1c4e42db7e80bfdd4db97c10fe">ISyntaxNode.GetChildList()</link>;</para>

<para>Traversal up the tree is done by reading from the <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_binder_session">IBinderSession</link> inside the IBinderSession.ScopeList at index ParentIndexKey.</para>

<para>This tells you the node that owns the parent scope.</para>

<para>If it turns out that this is too cumbersome to use in practice then perhaps a different solution should be considered. </para>
<para>
Implemented in <link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_implementations_1_1_scope_1a987feea04974b183f1e6d4dcf04894de">Luthetus.TextEditor.RazorLib.CompilerServices.Implementations.Scope</link>.</para>
<para>
Definition at line <link linkend="__i_scope_8cs_source_1l00037">37</link> of file <link linkend="__i_scope_8cs_source">IScope.cs</link>.</para>
</section>
<anchor xml:id="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1a3aafa57351a91d8b8be8f76045501186"/><section>
    <title>EndingIndexExclusive</title>
<indexterm><primary>EndingIndexExclusive</primary><secondary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</secondary></indexterm>
<indexterm><primary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</primary><secondary>EndingIndexExclusive</secondary></indexterm>
<para><computeroutput>int? Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope.EndingIndexExclusive<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Beware of this property&apos;s setter, as a hack to set the ending index later on in this type&apos;s lifecycle because it isn&apos;t immediately known. </para>
</para>
<para>
Implemented in <link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_implementations_1_1_scope_1a9596716656a60b22ba986b427319b22a">Luthetus.TextEditor.RazorLib.CompilerServices.Implementations.Scope</link>.</para>
<para>
Definition at line <link linkend="__i_scope_8cs_source_1l00082">82</link> of file <link linkend="__i_scope_8cs_source">IScope.cs</link>.</para>
</section>
<anchor xml:id="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1a61522fba59477beb1f3cafe27c43cb9c"/><section>
    <title>IndexKey</title>
<indexterm><primary>IndexKey</primary><secondary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</secondary></indexterm>
<indexterm><primary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</primary><secondary>IndexKey</secondary></indexterm>
<para><computeroutput>int Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope.IndexKey<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>All scopes in a file are stored in a flat list, grouped by the ResourceUri they were found in. Everytime a scope is instantiated, it gets an incrementing counter as its IndexKey (which is equal to the index it was inserted at... &apos;list.Count&apos;). </para>
</para>

<para>Therefore, to go to the parent scope: &apos;var parentScope = list[ParentIndexKey]&apos; To get &quot;yourself&quot;: &apos;var selfScope = list[IndexKey]&apos;</para>

<para>Every time the file is parsed the counter resets to 0.</para>

<para>In the future there should be optimizations that don&apos;t reparse the entire file, but instead only the scopes that need to be re-parsed given the change made.</para>

<para>This shouldn&apos;t be an issue beyond integer overflow. And to in the future solve the integer overflow, in the rare case that someone parses int.MaxValue number of scopes in a singular C# ResourceUri they likely don&apos;t actually have that many scopes in the file, but instead hit that number due to the future optimization that wasn&apos;t reseting the counter. Then that would trigger a counter reset to 0, and the entire file would have to be reparsed for that edge case.</para>

<para>If a file needs int.MaxValue number of scopes during a fresh parse with the counter starting at 0, then I presume this code will throw an exception.</para>

<para>But wouldn&apos;t it just the same do so with the previous code once the list of scopes hit a count &gt; int.MaxValue?</para>

<para>If it turns out that int.MaxValue is an issue, the storage of scopes needs to be re-worked. But it isn&apos;t expected to be the case.</para>

<para>Side note: in order to avoid race conditions involving out dated data, should the list itself have an int associated with it, that the <link linkend="__i_scope_8cs">IScope.cs</link> has as a property, so it can verify that the &quot;batch id&quot; is the same. </para>
<para>
Implemented in <link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_implementations_1_1_scope_1a04a947ddeab9d6ca90394113f40afd78">Luthetus.TextEditor.RazorLib.CompilerServices.Implementations.Scope</link>.</para>
<para>
Definition at line <link linkend="__i_scope_8cs_source_1l00073">73</link> of file <link linkend="__i_scope_8cs_source">IScope.cs</link>.</para>
</section>
<anchor xml:id="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1abfaa5ee6ee4ef26f6072fc309d244d71"/><section>
    <title>ParentIndexKey</title>
<indexterm><primary>ParentIndexKey</primary><secondary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</secondary></indexterm>
<indexterm><primary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</primary><secondary>ParentIndexKey</secondary></indexterm>
<para><computeroutput>int? Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope.ParentIndexKey<computeroutput>[get]</computeroutput></computeroutput></para><para>
</para>
<para>
Implemented in <link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_implementations_1_1_scope_1aebbd763d50ce5b2f6d2d4231a270f718">Luthetus.TextEditor.RazorLib.CompilerServices.Implementations.Scope</link>.</para>
<para>
Definition at line <link linkend="__i_scope_8cs_source_1l00075">75</link> of file <link linkend="__i_scope_8cs_source">IScope.cs</link>.</para>
</section>
<anchor xml:id="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope_1a7e7db70d787bcdb4c9ffd3d5f11f9ca4"/><section>
    <title>StartingIndexInclusive</title>
<indexterm><primary>StartingIndexInclusive</primary><secondary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</secondary></indexterm>
<indexterm><primary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope</primary><secondary>StartingIndexInclusive</secondary></indexterm>
<para><computeroutput>int Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces.IScope.StartingIndexInclusive<computeroutput>[get]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_implementations_1_1_scope_1aed1dfed81e67665c03b198b28a64469f">Luthetus.TextEditor.RazorLib.CompilerServices.Implementations.Scope</link>.</para>
<para>
Definition at line <link linkend="__i_scope_8cs_source_1l00076">76</link> of file <link linkend="__i_scope_8cs_source">IScope.cs</link>.</para>
</section>
<para>
The documentation for this interface was generated from the following file:</para>
Source/Lib/TextEditor/CompilerServices/Interfaces/<link linkend="__i_scope_8cs">IScope.cs</link></section>
</section>
