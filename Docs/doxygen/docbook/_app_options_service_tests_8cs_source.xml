<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__app_options_service_tests_8cs_source" xml:lang="en-US">
<title>AppOptionsServiceTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/Options/Models/AppOptionsServiceTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__app_options_service_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_models">Luthetus.Common.RazorLib.Options.Models</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_storages_1_1_models">Luthetus.Common.RazorLib.Storages.Models</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_themes_1_1_models">Luthetus.Common.RazorLib.Themes.Models</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_themes_1_1_states">Luthetus.Common.RazorLib.Themes.States</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_states">Luthetus.Common.RazorLib.Options.States</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00010"/>00010 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00011"/><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options">00011</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models">Luthetus.Common.Tests.Basis.Options.Models</link>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00012"/>00012 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00016"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests">00016</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests">AppOptionsServiceTests</link>
<anchor xml:id="__app_options_service_tests_8cs_source_1l00017"/>00017 {
<anchor xml:id="__app_options_service_tests_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__app_options_service_tests_8cs_source_1l00027"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a06f492680931a5d3ae5906403e431eed">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a06f492680931a5d3ae5906403e431eed">Constructor</link>()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;{
<anchor xml:id="__app_options_service_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeAppOptionsServiceTests(out&#32;var&#32;appOptionsService,&#32;out&#32;_);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00030"/>00030 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(appOptionsService);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(appOptionsService.AppOptionsStateWrap);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(appOptionsService.StorageKey);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(appOptionsService.ThemeCssClassString);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(appOptionsService.FontSizeCssStyleString);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;}
<anchor xml:id="__app_options_service_tests_8cs_source_1l00037"/>00037 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__app_options_service_tests_8cs_source_1l00042"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1afec672bcbf219e9fb8d2a8278baa102e">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1afec672bcbf219e9fb8d2a8278baa102e">SetActiveThemeRecordKey</link>()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;{
<anchor xml:id="__app_options_service_tests_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeAppOptionsServiceTests(out&#32;var&#32;appOptionsService,&#32;out&#32;_);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00045"/>00045 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;notCurrentlyChosenTheme&#32;=&#32;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.AppOptionsStateWrap.Value.Options.ThemeKey&#32;==&#32;ThemeFacts.VisualStudioDarkThemeClone.Key
<anchor xml:id="__app_options_service_tests_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;ThemeFacts.VisualStudioLightThemeClone
<anchor xml:id="__app_options_service_tests_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;ThemeFacts.VisualStudioDarkThemeClone;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00050"/>00050 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotEqual(
<anchor xml:id="__app_options_service_tests_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notCurrentlyChosenTheme.Key,
<anchor xml:id="__app_options_service_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.AppOptionsStateWrap.Value.Options.ThemeKey);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.SetActiveThemeRecordKey(notCurrentlyChosenTheme.Key);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(
<anchor xml:id="__app_options_service_tests_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notCurrentlyChosenTheme.Key,
<anchor xml:id="__app_options_service_tests_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.AppOptionsStateWrap.Value.Options.ThemeKey);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;}
<anchor xml:id="__app_options_service_tests_8cs_source_1l00061"/>00061 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__app_options_service_tests_8cs_source_1l00066"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1ab33e3f11da4e4e4cc39f71aa21e53b95">00066</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1ab33e3f11da4e4e4cc39f71aa21e53b95">SetTheme</link>()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;{
<anchor xml:id="__app_options_service_tests_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeAppOptionsServiceTests(out&#32;var&#32;appOptionsService,&#32;out&#32;_);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00069"/>00069 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;notCurrentlyChosenTheme&#32;=
<anchor xml:id="__app_options_service_tests_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.AppOptionsStateWrap.Value.Options.ThemeKey&#32;==&#32;ThemeFacts.VisualStudioDarkThemeClone.Key
<anchor xml:id="__app_options_service_tests_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;ThemeFacts.VisualStudioLightThemeClone
<anchor xml:id="__app_options_service_tests_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;ThemeFacts.VisualStudioDarkThemeClone;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00074"/>00074 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotEqual(
<anchor xml:id="__app_options_service_tests_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notCurrentlyChosenTheme.Key,
<anchor xml:id="__app_options_service_tests_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.AppOptionsStateWrap.Value.Options.ThemeKey);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00078"/>00078 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.SetTheme(notCurrentlyChosenTheme);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00080"/>00080 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(
<anchor xml:id="__app_options_service_tests_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notCurrentlyChosenTheme.Key,
<anchor xml:id="__app_options_service_tests_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.AppOptionsStateWrap.Value.Options.ThemeKey);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;}
<anchor xml:id="__app_options_service_tests_8cs_source_1l00085"/>00085 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__app_options_service_tests_8cs_source_1l00090"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a5bf8af99de8e216d4b0f0eaeb24be6af">00090</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a5bf8af99de8e216d4b0f0eaeb24be6af">SetFontFamily</link>()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;{
<anchor xml:id="__app_options_service_tests_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeAppOptionsServiceTests(out&#32;var&#32;appOptionsService,&#32;out&#32;_);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00093"/>00093 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fontFamily&#32;=&#32;<emphasis role="stringliteral">&quot;monospace&quot;</emphasis>;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00095"/>00095 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotEqual(fontFamily,&#32;appOptionsService.AppOptionsStateWrap.Value.Options.FontFamily);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00097"/>00097 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.SetFontFamily(fontFamily);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00099"/>00099 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(fontFamily,&#32;appOptionsService.AppOptionsStateWrap.Value.Options.FontFamily);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="__app_options_service_tests_8cs_source_1l00102"/>00102 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__app_options_service_tests_8cs_source_1l00107"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a849e78c196c2e1f5800c54f560437b71">00107</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a849e78c196c2e1f5800c54f560437b71">SetFontSize</link>()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;{
<anchor xml:id="__app_options_service_tests_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeAppOptionsServiceTests(out&#32;var&#32;appOptionsService,&#32;out&#32;_);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00110"/>00110 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fontSize&#32;=&#32;appOptionsService.AppOptionsStateWrap.Value.Options.FontSizeInPixels&#32;+&#32;5;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00112"/>00112 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.SetFontSize(fontSize);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00114"/>00114 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(fontSize,&#32;appOptionsService.AppOptionsStateWrap.Value.Options.FontSizeInPixels);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="__app_options_service_tests_8cs_source_1l00117"/>00117 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__app_options_service_tests_8cs_source_1l00122"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a6b0e4ba4e3fb09cf60dad38fd0f21d0e">00122</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_options_1_1_models_1_1_app_options_service_tests_1a6b0e4ba4e3fb09cf60dad38fd0f21d0e">SetIconSize</link>()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;{
<anchor xml:id="__app_options_service_tests_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeAppOptionsServiceTests(out&#32;var&#32;appOptionsService,&#32;out&#32;_);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00125"/>00125 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;iconSize&#32;=&#32;appOptionsService.AppOptionsStateWrap.Value.Options.IconSizeInPixels&#32;+&#32;3;
<anchor xml:id="__app_options_service_tests_8cs_source_1l00127"/>00127 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService.SetIconSize(iconSize);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00129"/>00129 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(iconSize,&#32;appOptionsService.AppOptionsStateWrap.Value.Options.IconSizeInPixels);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;}
<anchor xml:id="__app_options_service_tests_8cs_source_1l00132"/>00132 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeAppOptionsServiceTests(
<anchor xml:id="__app_options_service_tests_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_models_1_1_i_app_options_service">IAppOptionsService</link>&#32;appOptionsService,
<anchor xml:id="__app_options_service_tests_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;ServiceProvider&#32;serviceProvider)
<anchor xml:id="__app_options_service_tests_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;{
<anchor xml:id="__app_options_service_tests_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTaskService&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_synchronous">BackgroundTaskServiceSynchronous</link>();
<anchor xml:id="__app_options_service_tests_8cs_source_1l00138"/>00138 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddScoped&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_models_1_1_i_app_options_service">IAppOptionsService</link>,&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_models_1_1_app_options_service">AppOptionsService</link>&gt;()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.<link linkend="__lib_2_ide_2_host_8_blazor_web_assembly_2_program_8cs_1ad23e038402085511bf6d150f155199f9">AddScoped&lt;IStorageService, DoNothingStorageService&gt;</link>()
<anchor xml:id="__app_options_service_tests_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddScoped&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&gt;(_&#32;=&gt;&#32;backgroundTaskService)
<anchor xml:id="__app_options_service_tests_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddFluxor(options&#32;=&gt;&#32;options.ScanAssemblies(typeof(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_models_1_1_i_app_options_service">IAppOptionsService</link>).Assembly));
<anchor xml:id="__app_options_service_tests_8cs_source_1l00144"/>00144 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serviceProvider&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__app_options_service_tests_8cs_source_1l00146"/>00146 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;store&#32;=&#32;serviceProvider.GetRequiredService&lt;IStore&gt;();
<anchor xml:id="__app_options_service_tests_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.InitializeAsync().Wait();
<anchor xml:id="__app_options_service_tests_8cs_source_1l00149"/>00149 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appOptionsService&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_options_1_1_models_1_1_i_app_options_service">IAppOptionsService</link>&gt;();
<anchor xml:id="__app_options_service_tests_8cs_source_1l00151"/>00151 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;continuousQueue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>(
<anchor xml:id="__app_options_service_tests_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__app_options_service_tests_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a22c2b04c4f8e393a7ab0f17031f1a43a">QUEUE_DISPLAY_NAME</link>);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00155"/>00155 
<anchor xml:id="__app_options_service_tests_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService.RegisterQueue(continuousQueue);
<anchor xml:id="__app_options_service_tests_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;}
<anchor xml:id="__app_options_service_tests_8cs_source_1l00158"/>00158 }
</programlisting></section>
