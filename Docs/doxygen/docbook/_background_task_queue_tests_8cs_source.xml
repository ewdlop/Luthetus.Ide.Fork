<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__background_task_queue_tests_8cs_source" xml:lang="en-US">
<title>BackgroundTaskQueueTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/BackgroundTasks/Models/BackgroundTaskQueueTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__background_task_queue_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00005"/>00005 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00006"/><link linkend="_namespace_luthetus_1_1_common_1_1_tests">00006</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models">Luthetus.Common.Tests.Basis.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00007"/>00007 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00011"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests">00011</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests">BackgroundTaskQueueTests</link>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00012"/>00012 {
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00020"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests_1a791e062f2e1541906378e404090f5bb5">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests_1a791e062f2e1541906378e404090f5bb5">Constructor</link>()
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;key&#32;=&#32;Key&lt;IBackgroundTaskQueue&gt;.NewKey();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;displayName&#32;=&#32;<emphasis role="stringliteral">&quot;Continuous&quot;</emphasis>;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>(key,&#32;displayName);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00026"/>00026 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(key,&#32;queue.Key);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(displayName,&#32;queue.DisplayName);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00029"/>00029 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;taskKey&#32;=&#32;Key&lt;IBackgroundTask&gt;.NewKey();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;taskQueueKey&#32;=&#32;Key&lt;IBackgroundTaskQueue&gt;.NewKey();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;name&#32;=&#32;<emphasis role="stringliteral">&quot;Write&#32;\&quot;Hello&#32;World!\&quot;&#32;to&#32;the&#32;console&quot;</emphasis>;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00033"/>00033 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTask&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task">BackgroundTask</link>(
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;taskKey,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;taskQueueKey,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(<emphasis role="stringliteral">&quot;Hello&#32;World!&quot;</emphasis>);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(queue.BackgroundTaskList);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;queue.Count);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00046"/>00046 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Broke&#32;this&#32;test&#32;(2024-03-17)</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;NotImplementedException();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;queue.BackgroundTasks.Enqueue(backgroundTask);</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotEmpty(queue.BackgroundTaskList);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;queue.Count);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00056"/>00056 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00061"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests_1a078e9c26640e4448f5b925532cefe8ca">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests_1a078e9c26640e4448f5b925532cefe8ca">WorkItemAvailableSemaphoreSlim</link>()
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00064"/>00064 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Thoughts&#32;for&#32;this&#32;test&#32;as&#32;of&#32;(2023-11-20)</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00065"/>00065 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;------------------------------------------</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00066"/>00066 <emphasis role="comment"></emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00067"/>00067 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Async&#32;Parallel&#32;Task&#32;library&#32;to&#32;enqueue&#32;many&#32;work&#32;items</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00068"/>00068 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;same&#32;queue.</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00069"/>00069 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;======================================================</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00070"/>00070 <emphasis role="comment"></emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00071"/>00071 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;But&#32;would&#32;it&#32;have&#32;to&#32;be&#32;async&#32;parallel?</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00072"/>00072 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;======================================================</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00073"/>00073 <emphasis role="comment"></emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00074"/>00074 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Would&#32;something&#32;like&#32;this&#32;work?:</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00075"/>00075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;C#</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00076"/>00076 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00077"/>00077 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTaskList&#32;=&#32;new&#32;List&lt;BackgroundTask&gt;();</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00078"/>00078 <emphasis role="comment"></emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00079"/>00079 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Add&#32;many&#32;things&#32;to&#32;backgroundTaskList</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00080"/>00080 <emphasis role="comment"></emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00081"/>00081 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queue&#32;=&#32;new&#32;BackgroundTaskQueue();</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00082"/>00082 <emphasis role="comment"></emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00083"/>00083 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Parallel.Foreach(backgroundTaskList,&#32;bt&#32;=&gt;&#32;</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00084"/>00084 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00085"/>00085 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue.Enqueue(backgroundTaskList);</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00086"/>00086 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;})</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00087"/>00087 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00088"/>00088 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00089"/>00089 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;NotImplementedException();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00092"/>00092 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00099"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests_1afd85a8e1d6c3ff3eb95acc298f98f154">00099</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_queue_tests_1afd85a8e1d6c3ff3eb95acc298f98f154">ExecutingBackgroundTask</link>()
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeBackgroundTaskQueueTests(
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;queue,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;_);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00105"/>00105 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(queue.ExecutingBackgroundTask);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00107"/>00107 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;number&#32;=&#32;0;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;number);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00110"/>00110 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTaskKey&#32;=&#32;Key&lt;IBackgroundTask&gt;.NewKey();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00112"/>00112 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;+=&#32;2;&#32;from&#32;the&#32;event.</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;executing&#32;to&#32;the&#32;task&#32;is&#32;+1,&#32;then&#32;set&#32;the&#32;executing&#32;to&#32;null&#32;is&#32;another&#32;+1</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnExecutingBackgroundTaskChanged()&#32;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number++;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00119"/>00119 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue.ExecutingBackgroundTaskChanged&#32;+=&#32;OnExecutingBackgroundTaskChanged;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00121"/>00121 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTask&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task">BackgroundTask</link>(
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskKey,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue.Key,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Abc&quot;</emphasis>,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(queue.ExecutingBackgroundTask);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(backgroundTaskKey,&#32;queue.ExecutingBackgroundTask!.BackgroundTaskKey);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00130"/>00130 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;+=&#32;1;&#32;from&#32;the&#32;task.</emphasis>
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number++;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00133"/>00133 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService.Enqueue(backgroundTask);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00138"/>00138 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(3,&#32;number);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(queue.ExecutingBackgroundTask);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue.ExecutingBackgroundTaskChanged&#32;-=&#32;OnExecutingBackgroundTaskChanged;
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00144"/>00144 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeBackgroundTaskQueueTests(
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&#32;backgroundTaskService,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>&#32;continuousQueue,
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>&#32;blockingQueue)
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddScoped&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&gt;(_&#32;=&gt;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_synchronous">BackgroundTaskServiceSynchronous</link>())
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddFluxor(options&#32;=&gt;&#32;options.ScanAssemblies(typeof(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>).Assembly));
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00153"/>00153 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;serviceProvider&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00155"/>00155 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;store&#32;=&#32;serviceProvider.GetRequiredService&lt;IStore&gt;();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.InitializeAsync().Wait();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00158"/>00158 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&gt;();
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00160"/>00160 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;continuousQueue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>(
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a22c2b04c4f8e393a7ab0f17031f1a43a">QUEUE_DISPLAY_NAME</link>);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00164"/>00164 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService.RegisterQueue(continuousQueue);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00166"/>00166 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blockingQueue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>(
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker">BlockingBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker_1a267091acd637305c1ddcfe78bef3343f">GetQueueKey</link>(),
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker">BlockingBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker_1a15164ffc66eccc1ab15eccb3351b13d0">QUEUE_DISPLAY_NAME</link>);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00170"/>00170 
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService.RegisterQueue(blockingQueue);
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_queue_tests_8cs_source_1l00173"/>00173 }
</programlisting></section>
