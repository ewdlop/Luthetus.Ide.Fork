<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__background_task_dialog_display_8razor_8cs_source" xml:lang="en-US">
<title>BackgroundTaskDialogDisplay.razor.cs</title>
<indexterm><primary>Source/Lib/Ide/Ide.RazorLib/Shareds/Displays/Internals/BackgroundTaskDialogDisplay.razor.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Microsoft.AspNetCore.Components;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models">Luthetus.Common.RazorLib.Reactives.Models</link>;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00004"/>00004 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00005"/><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals">00005</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals">Luthetus.Ide.RazorLib.Shareds.Displays.Internals</link>;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00006"/>00006 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00007"/><link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display">00007</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display">BackgroundTaskDialogDisplay</link>&#32;:&#32;ComponentBase,&#32;IDisposable
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00008"/>00008 {
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;[Inject]
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00010"/><link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display_1a5e7bd8041ebe1980c85249f4805e53ad">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display_1a5e7bd8041ebe1980c85249f4805e53ad">BackgroundTaskService</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00011"/>00011 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle">Throttle</link>&#32;_executingBackgroundTaskChangedThrottle&#32;=&#32;<emphasis role="keyword">new</emphasis>(TimeSpan.FromMilliseconds(1000));
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;List&lt;IBackgroundTask&gt;&#32;_seenBackgroundTasks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IBackgroundTask&gt;();
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">object</emphasis>&#32;_seenBackgroundTasksLock&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00015"/>00015 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>&#32;_continuousBackgroundTaskWorker&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_countTracked&#32;=&#32;100;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_clearTo&#32;=&#32;15;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00019"/>00019 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00020"/><link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display_1a66bed98534b4310a16be66a5f2c86bc7">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display_1a66bed98534b4310a16be66a5f2c86bc7">OnInitialized</link>()
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_continuousBackgroundTaskWorker&#32;=&#32;(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>)<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display_1a5e7bd8041ebe1980c85249f4805e53ad">BackgroundTaskService</link>.GetQueue(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>());
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_continuousBackgroundTaskWorker.ExecutingBackgroundTaskChanged&#32;+=&#32;ContinuousBackgroundTaskWorker_ExecutingBackgroundTaskChanged;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00024"/>00024 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnInitialized();
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00027"/>00027 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ContinuousBackgroundTaskWorker_ExecutingBackgroundTaskChanged()
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;executingBackgroundTask&#32;=&#32;_continuousBackgroundTaskWorker.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue_1aabfa53a5b76d80bab65cc1250e14cc98">ExecutingBackgroundTask</link>;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(executingBackgroundTask&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_seenBackgroundTasksLock)
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_seenBackgroundTasks.Count&#32;&gt;&#32;_countTracked)
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lastFifty&#32;=&#32;_seenBackgroundTasks.TakeLast(15).ToList();
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_seenBackgroundTasks.Clear();
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_seenBackgroundTasks.AddRange(lastFifty);
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_seenBackgroundTasks.Add(executingBackgroundTask);
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00046"/>00046 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_executingBackgroundTaskChangedThrottle.Run(async&#32;_&#32;=&gt;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;InvokeAsync(StateHasChanged);
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00052"/>00052 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;IBackgroundTask&gt;&#32;GetThreadSafeCopyOfSeenBackgroundTasks()
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_seenBackgroundTasksLock)
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IBackgroundTask&gt;(_seenBackgroundTasks);
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00060"/>00060 
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00061"/><link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display_1a1ae54a756c9ad5d0186adf5f059ebf3f">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_displays_1_1_internals_1_1_background_task_dialog_display_1a1ae54a756c9ad5d0186adf5f059ebf3f">Dispose</link>()
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_continuousBackgroundTaskWorker.ExecutingBackgroundTaskChanged&#32;-=&#32;ContinuousBackgroundTaskWorker_ExecutingBackgroundTaskChanged;
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_dialog_display_8razor_8cs_source_1l00065"/>00065 }
</programlisting></section>
