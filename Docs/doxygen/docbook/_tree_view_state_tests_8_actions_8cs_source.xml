<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__tree_view_state_tests_8_actions_8cs_source" xml:lang="en-US">
<title>TreeViewStateTests.Actions.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/TreeViews/States/TreeViewStateTests.Actions.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_states">Luthetus.Common.RazorLib.TreeViews.States</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models">Luthetus.Common.RazorLib.ComponentRenderers.Models</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models">Luthetus.Common.RazorLib.TreeViews.Models</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_notifications_1_1_displays">Luthetus.Common.RazorLib.Notifications.Displays</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays">Luthetus.Common.RazorLib.WatchWindows.Displays</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_models_1_1_internals">Luthetus.Common.Tests.Basis.TreeViews.Models.Internals</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00012"/>00012 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_displays_1_1_utils">Luthetus.Common.RazorLib.TreeViews.Displays.Utils</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00013"/>00013 <emphasis role="keyword">using&#32;</emphasis>static&#32;<link linkend="_namespace_luthetus">Luthetus</link>.<link linkend="_namespace_luthetus_1_1_common">Common</link>.<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib">RazorLib</link>.<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views">TreeViews</link>.<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_states">States</link>.TreeViewState;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00014"/>00014 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00015"/><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states">00015</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states">Luthetus.Common.Tests.Basis.TreeViews.States</link>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00016"/>00016 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00020"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests">00020</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests">TreeViewStateActionsTests</link>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00021"/>00021 {
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00026"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a890247920077060bdde94f45af99b6c4">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a890247920077060bdde94f45af99b6c4">RegisterContainerAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00039"/>00039 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;registerContainerAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a890247920077060bdde94f45af99b6c4">RegisterContainerAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00042"/>00042 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer,&#32;registerContainerAction.Container);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00045"/>00045 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00050"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a4e6dd3357db43546da99c1017a6891f7">00050</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a4e6dd3357db43546da99c1017a6891f7">DisposeContainerAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00063"/>00063 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;disposeContainerAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a4e6dd3357db43546da99c1017a6891f7">DisposeContainerAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00066"/>00066 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;disposeContainerAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00069"/>00069 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00074"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a9f51467a1b5365c6aeef26b4225c0675">00074</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a9f51467a1b5365c6aeef26b4225c0675">WithRootNodeActionAsync</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00087"/>00087 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;websiteServerTreeView.LoadChildListAsync();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00089"/>00089 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;withRootNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;WithRootNodeAction(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView.ChildList.First());
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00093"/>00093 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;withRootNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView.ChildList.First(),&#32;withRootNodeAction.Node);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00097"/>00097 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00102"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a7c81168d6575341ee32b617f1270ac03">00102</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a7c81168d6575341ee32b617f1270ac03">TryGetContainerAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00115"/>00115 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tryGetContainerAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a7c81168d6575341ee32b617f1270ac03">TryGetContainerAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00118"/>00118 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;tryGetContainerAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00121"/>00121 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00126"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a8c661559d57b16962b2cec97ac32dce4">00126</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a8c661559d57b16962b2cec97ac32dce4">ReplaceContainerAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00139"/>00139 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;replaceContainerAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a8c661559d57b16962b2cec97ac32dce4">ReplaceContainerAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00143"/>00143 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;replaceContainerAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer,&#32;replaceContainerAction.Container);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00147"/>00147 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00152"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a76462fbf64f40deb4e6d48aea8eac6a8">00152</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a76462fbf64f40deb4e6d48aea8eac6a8">AddChildNodeActionAsync</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00165"/>00165 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;websiteServerTreeView.LoadChildListAsync();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00167"/>00167 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addChildNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AddChildNodeAction(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView.ChildList.First());
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00172"/>00172 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;addChildNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView,&#32;addChildNodeAction.ParentNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView.ChildList.First(),&#32;addChildNodeAction.ChildNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00177"/>00177 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00182"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a433acc7a6b72146fb81aaa87fc341c9f">00182</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a433acc7a6b72146fb81aaa87fc341c9f">ReRenderNodeAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00195"/>00195 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;reRenderNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a433acc7a6b72146fb81aaa87fc341c9f">ReRenderNodeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00199"/>00199 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;reRenderNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView,&#32;reRenderNodeAction.Node);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00203"/>00203 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00208"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a5c70b1e97f3f9ce95eb4f9a5bbbc6b79">00208</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a5c70b1e97f3f9ce95eb4f9a5bbbc6b79">SetActiveNodeAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;active&#32;node,&#32;and&#32;clear&#32;selected&#32;nodes.</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00223"/>00223 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00226"/>00226 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;setActiveNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a5c70b1e97f3f9ce95eb4f9a5bbbc6b79">SetActiveNodeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00232"/>00232 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;setActiveNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView,&#32;setActiveNodeAction.NextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;setActiveNodeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;setActiveNodeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;active&#32;node&#32;and&#32;selected&#32;nodes.</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00252"/>00252 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00255"/>00255 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;setActiveNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a5c70b1e97f3f9ce95eb4f9a5bbbc6b79">SetActiveNodeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00261"/>00261 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;setActiveNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(setActiveNodeAction.NextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;setActiveNodeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;setActiveNodeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00267"/>00267 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;active&#32;node,&#32;do&#32;NOT&#32;clear&#32;selected&#32;nodes.</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00281"/>00281 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00284"/>00284 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;setActiveNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a5c70b1e97f3f9ce95eb4f9a5bbbc6b79">SetActiveNodeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00290"/>00290 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;setActiveNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView,&#32;setActiveNodeAction.NextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;setActiveNodeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;setActiveNodeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;active&#32;node,&#32;do&#32;NOT&#32;clear&#32;selected&#32;nodes,&#32;and&#32;select&#32;between.</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00310"/>00310 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00313"/>00313 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;setActiveNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a5c70b1e97f3f9ce95eb4f9a5bbbc6b79">SetActiveNodeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00319"/>00319 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;setActiveNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView,&#32;setActiveNodeAction.NextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;setActiveNodeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;setActiveNodeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00325"/>00325 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;active&#32;node,&#32;clear&#32;selected&#32;nodes,&#32;and&#32;select&#32;between.</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;What&#32;would&#32;even&#32;be&#32;the&#32;result&#32;of&#32;this?&#32;It&#32;seems&#32;nonsensical</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;have&#32;addSelectedNodes&#32;==&#32;false;&#32;meanwhile</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;==&#32;true;</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00343"/>00343 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00346"/>00346 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;setActiveNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a5c70b1e97f3f9ce95eb4f9a5bbbc6b79">SetActiveNodeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00352"/>00352 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;setActiveNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView,&#32;setActiveNodeAction.NextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;setActiveNodeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;setActiveNodeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00359"/>00359 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00364"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaa8bfc00e01b46ce9a4402d3b0bd9b2d">00364</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaa8bfc00e01b46ce9a4402d3b0bd9b2d">RemoveSelectedNodeAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00377"/>00377 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;removeSelectedNodeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaa8bfc00e01b46ce9a4402d3b0bd9b2d">RemoveSelectedNodeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView.Key);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00381"/>00381 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;removeSelectedNodeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeView.Key,&#32;removeSelectedNodeAction.KeyOfNodeToRemove);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00385"/>00385 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00390"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1af20842674c8266bdd6538d954ec25642">00390</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1af20842674c8266bdd6538d954ec25642">MoveLeftAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00403"/>00403 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containerKey&#32;=&#32;websiteServerTreeViewContainer.Key;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00405"/>00405 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00411"/>00411 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveLeftAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1af20842674c8266bdd6538d954ec25642">MoveLeftAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00416"/>00416 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveLeftAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveLeftAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveLeftAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00421"/>00421 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00427"/>00427 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveLeftAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1af20842674c8266bdd6538d954ec25642">MoveLeftAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;moveLeftAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveLeftAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveLeftAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00443"/>00443 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveLeftAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1af20842674c8266bdd6538d954ec25642">MoveLeftAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;moveLeftAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveLeftAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveLeftAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00453"/>00453 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00459"/>00459 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveLeftAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1af20842674c8266bdd6538d954ec25642">MoveLeftAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;moveLeftAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveLeftAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveLeftAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00470"/>00470 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00475"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaea73429fb0b8bee3e21e40e7eaec112">00475</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaea73429fb0b8bee3e21e40e7eaec112">MoveDownAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00488"/>00488 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containerKey&#32;=&#32;websiteServerTreeViewContainer.Key;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00490"/>00490 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00496"/>00496 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveDownAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaea73429fb0b8bee3e21e40e7eaec112">MoveDownAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00501"/>00501 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;moveDownAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveDownAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveDownAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00506"/>00506 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00512"/>00512 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveDownAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaea73429fb0b8bee3e21e40e7eaec112">MoveDownAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00517"/>00517 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;moveDownAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveDownAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveDownAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00522"/>00522 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00528"/>00528 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveDownAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaea73429fb0b8bee3e21e40e7eaec112">MoveDownAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00533"/>00533 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;moveDownAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveDownAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveDownAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00538"/>00538 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00544"/>00544 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveDownAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaea73429fb0b8bee3e21e40e7eaec112">MoveDownAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00549"/>00549 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(websiteServerTreeViewContainer.Key,&#32;moveDownAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveDownAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveDownAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00555"/>00555 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00560"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a199d12c9bdb78a52793f8613b988c1b6">00560</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a199d12c9bdb78a52793f8613b988c1b6">MoveUpAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00573"/>00573 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containerKey&#32;=&#32;websiteServerTreeViewContainer.Key;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00575"/>00575 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00581"/>00581 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveUpAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a199d12c9bdb78a52793f8613b988c1b6">MoveUpAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00586"/>00586 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveUpAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveUpAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveUpAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00591"/>00591 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00597"/>00597 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveUpAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a199d12c9bdb78a52793f8613b988c1b6">MoveUpAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00602"/>00602 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveUpAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveUpAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveUpAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00607"/>00607 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00613"/>00613 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveUpAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a199d12c9bdb78a52793f8613b988c1b6">MoveUpAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00618"/>00618 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveUpAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveUpAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveUpAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00623"/>00623 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00629"/>00629 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveUpAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a199d12c9bdb78a52793f8613b988c1b6">MoveUpAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00634"/>00634 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveUpAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveUpAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveUpAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00639"/>00639 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00640"/>00640 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00645"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a092e9a00a2aceae9859e6dc9f1563e18">00645</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a092e9a00a2aceae9859e6dc9f1563e18">MoveRightAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00658"/>00658 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containerKey&#32;=&#32;websiteServerTreeViewContainer.Key;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Action&lt;TreeViewNoType&gt;&#32;loadChildListAction&#32;=&#32;_&#32;=&gt;&#32;{&#32;};
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00661"/>00661 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00667"/>00667 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveRightAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a092e9a00a2aceae9859e6dc9f1563e18">MoveRightAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00673"/>00673 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveRightAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveRightAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveRightAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(loadChildListAction,&#32;moveRightAction.LoadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00679"/>00679 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00685"/>00685 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveRightAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a092e9a00a2aceae9859e6dc9f1563e18">MoveRightAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00691"/>00691 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveRightAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveRightAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveRightAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(loadChildListAction,&#32;moveRightAction.LoadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00697"/>00697 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00703"/>00703 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveRightAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a092e9a00a2aceae9859e6dc9f1563e18">MoveRightAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00709"/>00709 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveRightAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveRightAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveRightAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(loadChildListAction,&#32;moveRightAction.LoadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00715"/>00715 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00721"/>00721 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveRightAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a092e9a00a2aceae9859e6dc9f1563e18">MoveRightAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer.Key,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00727"/>00727 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveRightAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveRightAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveRightAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(loadChildListAction,&#32;moveRightAction.LoadChildListAction);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00734"/>00734 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00739"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a12627e9d3250551e9710a14f607c1969">00739</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a12627e9d3250551e9710a14f607c1969">MoveHomeAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00752"/>00752 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containerKey&#32;=&#32;websiteServerTreeViewContainer.Key;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00754"/>00754 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00760"/>00760 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveHomeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a12627e9d3250551e9710a14f607c1969">MoveHomeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00765"/>00765 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveHomeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveHomeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveHomeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00770"/>00770 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00776"/>00776 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveHomeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a12627e9d3250551e9710a14f607c1969">MoveHomeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00781"/>00781 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveHomeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveHomeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveHomeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00786"/>00786 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00792"/>00792 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveHomeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a12627e9d3250551e9710a14f607c1969">MoveHomeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00797"/>00797 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveHomeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveHomeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveHomeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00802"/>00802 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00808"/>00808 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveHomeAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1a12627e9d3250551e9710a14f607c1969">MoveHomeAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00813"/>00813 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveHomeAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveHomeAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveHomeAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00819"/>00819 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00823"/>00823 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00824"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaf780f9ad7fc809147328c5317d6bf5b">00824</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaf780f9ad7fc809147328c5317d6bf5b">MoveEndAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00837"/>00837 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containerKey&#32;=&#32;websiteServerTreeViewContainer.Key;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00839"/>00839 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00845"/>00845 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveEndAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaf780f9ad7fc809147328c5317d6bf5b">MoveEndAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00850"/>00850 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveEndAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveEndAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveEndAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00855"/>00855 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00861"/>00861 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveEndAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaf780f9ad7fc809147328c5317d6bf5b">MoveEndAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00866"/>00866 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveEndAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveEndAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveEndAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00871"/>00871 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;false</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00877"/>00877 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveEndAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaf780f9ad7fc809147328c5317d6bf5b">MoveEndAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00882"/>00882 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveEndAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveEndAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveEndAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00887"/>00887 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;addSelectedNodes&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;true</emphasis>
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addSelectedNodes&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;selectNodesBetweenCurrentAndNextActiveNode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00893"/>00893 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;moveEndAction&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aaf780f9ad7fc809147328c5317d6bf5b">MoveEndAction</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containerKey,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addSelectedNodes,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;selectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00898"/>00898 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(containerKey,&#32;moveEndAction.ContainerKey);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(addSelectedNodes,&#32;moveEndAction.AddSelectedNodes);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(selectNodesBetweenCurrentAndNextActiveNode,&#32;moveEndAction.SelectNodesBetweenCurrentAndNextActiveNode);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00903"/>00903 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00904"/>00904 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00908"/>00908 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00909"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aad28385d3ab856013e30a91326913a32">00909</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_actions_tests_1aad28385d3ab856013e30a91326913a32">LoadChildListAction</link>()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00910"/>00910 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;NotImplementedException();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00912"/>00912 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00913"/>00913 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00914"/>00914 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeTreeViewStateActionsTests(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;IDispatcher&#32;dispatcher,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models_1_1_common_tree_views">CommonTreeViews</link>&#32;commonTreeViews,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models_1_1_common_component_renderers">CommonComponentRenderers</link>&#32;commonComponentRenderers,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;IState&lt;TreeViewState&gt;&#32;treeViewStateWrap,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_i_tree_view_service">ITreeViewService</link>&#32;treeViewService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&#32;backgroundTaskService,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_models_1_1_internals_1_1_website_server_state">WebsiteServerState</link>&#32;websiteServerState,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_models_1_1_internals_1_1_website_server">WebsiteServer</link>&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_models_1_1_internals_1_1_website_server_tree_view">WebsiteServerTreeView</link>&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1ace4f137317eda265ad6dd976b61de5c6">TreeViewContainer</link>&#32;websiteServerTreeViewContainer)
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00925"/>00925 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;temporaryBackgroundTaskService&#32;=&#32;backgroundTaskService&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_synchronous">BackgroundTaskServiceSynchronous</link>();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00927"/>00927 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;continuousQueue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a22c2b04c4f8e393a7ab0f17031f1a43a">QUEUE_DISPLAY_NAME</link>);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00931"/>00931 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService.RegisterQueue(continuousQueue);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00933"/>00933 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;blockingQueue&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker">BlockingBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker_1a267091acd637305c1ddcfe78bef3343f">GetQueueKey</link>(),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker">BlockingBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_blocking_background_task_worker_1a15164ffc66eccc1ab15eccb3351b13d0">QUEUE_DISPLAY_NAME</link>);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00937"/>00937 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService.RegisterQueue(blockingQueue);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00939"/>00939 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddScoped&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_i_tree_view_service">ITreeViewService</link>,&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_service">TreeViewService</link>&gt;()
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.<link linkend="__lib_2_ide_2_host_8_blazor_web_assembly_2_program_8cs_1ad23e038402085511bf6d150f155199f9">AddScoped</link>(sp&#32;=&gt;&#32;temporaryBackgroundTaskService)
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddFluxor(options&#32;=&gt;&#32;options.ScanAssemblies(typeof(TreeViewState).Assembly));
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00944"/>00944 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;serviceProvider&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00946"/>00946 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;store&#32;=&#32;serviceProvider.GetRequiredService&lt;IStore&gt;();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.InitializeAsync().Wait();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00949"/>00949 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewStateWrap&#32;=&#32;serviceProvider.GetRequiredService&lt;IState&lt;TreeViewState&gt;&gt;();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewService&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_i_tree_view_service">ITreeViewService</link>&gt;();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&gt;();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dispatcher&#32;=&#32;serviceProvider.GetRequiredService&lt;IDispatcher&gt;();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00954"/>00954 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commonTreeViews&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models_1_1_common_tree_views">CommonTreeViews</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_displays_1_1_utils_1_1_tree_view_exception_display">TreeViewExceptionDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays_1_1_tree_view_missing_renderer_fallback_display">TreeViewMissingRendererFallbackDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays_1_1_tree_view_text_display">TreeViewTextDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays_1_1_tree_view_reflection_display">TreeViewReflectionDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays_1_1_tree_view_properties_display">TreeViewPropertiesDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays_1_1_tree_view_interface_implementation_display">TreeViewInterfaceImplementationDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays_1_1_tree_view_fields_display">TreeViewFieldsDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_displays_1_1_utils_1_1_tree_view_exception_display">TreeViewExceptionDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_watch_windows_1_1_displays_1_1_tree_view_enumerable_display">TreeViewEnumerableDisplay</link>));
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00965"/>00965 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commonComponentRenderers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_component_renderers_1_1_models_1_1_common_component_renderers">CommonComponentRenderers</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_notifications_1_1_displays_1_1_common_error_notification_display">CommonErrorNotificationDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_notifications_1_1_displays_1_1_common_informative_notification_display">CommonInformativeNotificationDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_notifications_1_1_displays_1_1_common_progress_notification_display">CommonProgressNotificationDisplay</link>),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commonTreeViews);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00971"/>00971 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerState&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_models_1_1_internals_1_1_website_server_state">WebsiteServerState</link>();
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00973"/>00973 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_models_1_1_internals_1_1_website_server">WebsiteServer</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;TestServer&quot;</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>[]
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/index/&quot;</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/counter/&quot;</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;/fetchdata/&quot;</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerState);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00984"/>00984 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_models_1_1_internals_1_1_website_server_tree_view">WebsiteServerTreeView</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServer,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00989"/>00989 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeViewContainer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1ace4f137317eda265ad6dd976b61de5c6">TreeViewContainer</link>(
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;TreeViewContainer&gt;.NewKey(),
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;websiteServerTreeView,
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type">TreeViewNoType</link>[]&#32;{&#32;websiteServerTreeView&#32;}.ToImmutableList());
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00994"/>00994 
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewService.RegisterTreeViewContainer(websiteServerTreeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00996"/>00996 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_actions_8cs_source_1l00997"/>00997 }
</programlisting></section>
