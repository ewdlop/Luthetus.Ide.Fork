<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__adhoc_test_8_main_8cs_source" xml:lang="en-US">
<title>AdhocTest.Main.cs</title>
<indexterm><primary>Source/Tests/TextEditor/Adhoc/AdhocTest.Main.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__adhoc_test_8_main_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Microsoft.JSInterop;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_installations_1_1_models">Luthetus.Common.RazorLib.Installations.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_misc">Luthetus.Common.RazorLib.Misc</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models">Luthetus.TextEditor.RazorLib.Lexers.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models">Luthetus.TextEditor.RazorLib.TextEditors.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_generic_lexer_1_1_decoration">Luthetus.TextEditor.RazorLib.CompilerServices.GenericLexer.Decoration</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00012"/>00012 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces">Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00013"/>00013 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_decorations_1_1_models">Luthetus.TextEditor.RazorLib.Decorations.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00014"/>00014 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models">Luthetus.TextEditor.RazorLib.Rows.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00015"/>00015 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00016"/>00016 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib">Luthetus.TextEditor.RazorLib</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00017"/>00017 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models">Luthetus.TextEditor.RazorLib.Cursors.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00018"/>00018 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_compiler_services_1_1_c_sharp_1_1_compiler_service_case">Luthetus.CompilerServices.CSharp.CompilerServiceCase</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00019"/>00019 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_installations_1_1_models">Luthetus.Ide.RazorLib.Installations.Models</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00020"/>00020 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_config_1_1_compiler_services">Luthetus.Extensions.Config.CompilerServices</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00021"/>00021 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_config_1_1_decorations">Luthetus.Extensions.Config.Decorations</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00022"/>00022 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00023"/>00023 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc">Luthetus.TextEditor.Tests.Adhoc</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00024"/>00024 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00025"/>00025 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test">AdhocTest</link>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00026"/>00026 {
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00028"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a5f4440704a7cac5cd3101f6693a89bac">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a5f4440704a7cac5cd3101f6693a89bac">Why_Is_Command_Cut_Very_Slow</link>()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model">TextEditorModel</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.cs&quot;</emphasis>),
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DateTime.UtcNow,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExtensionNoPeriodFacts.C_SHARP_CLASS,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a21674b19a4eea348351e41f0a732da9e">_bigString</link>,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00037"/>00037 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;modelModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model_modifier">TextEditorModelModifier</link>(model);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00039"/>00039 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;beforeAllText&#32;=&#32;modelModifier.GetAllText();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00041"/>00041 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modelModifier.__RemoveRange(0,&#32;5);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00043"/>00043 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;afterAllText&#32;=&#32;modelModifier.GetAllText();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00045"/>00045 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modelModifier.__RemoveRange(0,&#32;5);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00047"/>00047 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;anotherAfterAllText&#32;=&#32;modelModifier.GetAllText();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00050"/>00050 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00052"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a6ebf6370a47dde729c51b2ede9af618b">00052</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a6ebf6370a47dde729c51b2ede9af618b">Insert_Into_Empty_Model_A_LetterOrDigit</link>()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model">TextEditorModel</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.cs&quot;</emphasis>),
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DateTime.UtcNow,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExtensionNoPeriodFacts.C_SHARP_CLASS,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00061"/>00061 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;modelModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model_modifier">TextEditorModelModifier</link>(model);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00063"/>00063 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Before-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Single();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00080"/>00080 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Variables</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;letterToInsert&#32;=&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00083"/>00083 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;State&#32;change</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b">TextEditorCursor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isPrimaryCursor:&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1_1_text_editor_cursor_modifier">TextEditorCursorModifier</link>(cursor);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifierBag&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_cursor_modifier_bag_text_editor">CursorModifierBagTextEditor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;TextEditorViewModel&gt;.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;TextEditorCursorModifier&gt;()&#32;{&#32;cursorModifier&#32;});
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00094"/>00094 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modelModifier.Insert(letterToInsert,&#32;cursorModifierBag,&#32;cancellationToken:&#32;CancellationToken.None);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model&#32;=&#32;modelModifier.ToModel();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00098"/>00098 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;After-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(letterToInsert,&#32;model.RichCharacterList.Single().Value.ToString());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Single();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00117"/>00117 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00119"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a94b089c35dc0ef8a0297887a15da864f">00119</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a94b089c35dc0ef8a0297887a15da864f">Insert_Into_Empty_Model_A_LineFeed</link>()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model">TextEditorModel</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.cs&quot;</emphasis>),
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DateTime.UtcNow,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExtensionNoPeriodFacts.C_SHARP_CLASS,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00128"/>00128 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;modelModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model_modifier">TextEditorModelModifier</link>(model);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00130"/>00130 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Before-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Single();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00147"/>00147 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Variables</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;letterToInsert&#32;=&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00150"/>00150 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;State&#32;change</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b">TextEditorCursor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isPrimaryCursor:&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1_1_text_editor_cursor_modifier">TextEditorCursorModifier</link>(cursor);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifierBag&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_cursor_modifier_bag_text_editor">CursorModifierBagTextEditor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;TextEditorViewModel&gt;.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;TextEditorCursorModifier&gt;()&#32;{&#32;cursorModifier&#32;});
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00161"/>00161 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modelModifier.Insert(letterToInsert,&#32;cursorModifierBag,&#32;cancellationToken:&#32;CancellationToken.None);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model&#32;=&#32;modelModifier.ToModel();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00165"/>00165 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;After-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(letterToInsert,&#32;model.RichCharacterList.Single().Value.ToString());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(2,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Last();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00184"/>00184 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00186"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1ab1e5b00f5302f2110ddc5af79b018667">00186</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1ab1e5b00f5302f2110ddc5af79b018667">Insert_Into_Empty_Model_A_CarriageReturn</link>()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model">TextEditorModel</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.cs&quot;</emphasis>),
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DateTime.UtcNow,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExtensionNoPeriodFacts.C_SHARP_CLASS,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00195"/>00195 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;modelModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model_modifier">TextEditorModelModifier</link>(model);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00197"/>00197 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Before-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Single();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00214"/>00214 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Variables</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;letterToInsert&#32;=&#32;<emphasis role="stringliteral">&quot;\r&quot;</emphasis>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;Any&#32;CarriageReturnNewLine,&#32;or&#32;CarriageReturn,&#32;is&#32;currently</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;replaced&#32;with&#32;&apos;\n&apos;.</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;Therefore&#32;the&#32;expected&#32;letter&#32;that&#32;was&#32;inserted&#32;would&#32;be&#32;&quot;\n&quot;</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;(2024-04-12)</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;expectedLetterThatWasInserted&#32;=&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00223"/>00223 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;State&#32;change</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b">TextEditorCursor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isPrimaryCursor:&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1_1_text_editor_cursor_modifier">TextEditorCursorModifier</link>(cursor);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifierBag&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_cursor_modifier_bag_text_editor">CursorModifierBagTextEditor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;TextEditorViewModel&gt;.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;TextEditorCursorModifier&gt;()&#32;{&#32;cursorModifier&#32;});
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00234"/>00234 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modelModifier.Insert(letterToInsert,&#32;cursorModifierBag,&#32;cancellationToken:&#32;CancellationToken.None);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model&#32;=&#32;modelModifier.ToModel();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00238"/>00238 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;After-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(expectedLetterThatWasInserted,&#32;model.RichCharacterList.Single().Value.ToString());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(2,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Last();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00257"/>00257 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00259"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1aafc61425a9959dc443a4f2698d17aff2">00259</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1aafc61425a9959dc443a4f2698d17aff2">Insert_Into_Empty_Model_A_CarriageReturnNewLine</link>()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model">TextEditorModel</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.cs&quot;</emphasis>),
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DateTime.UtcNow,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExtensionNoPeriodFacts.C_SHARP_CLASS,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00268"/>00268 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;modelModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model_modifier">TextEditorModelModifier</link>(model);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00270"/>00270 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Before-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Last();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00287"/>00287 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Variables</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;letterToInsert&#32;=&#32;<emphasis role="stringliteral">&quot;\r\n&quot;</emphasis>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;Any&#32;CarriageReturnNewLine,&#32;or&#32;CarriageReturn,&#32;is&#32;currently</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;replaced&#32;with&#32;&apos;\n&apos;.</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;Therefore&#32;the&#32;expected&#32;letter&#32;that&#32;was&#32;inserted&#32;would&#32;be&#32;&quot;\n&quot;</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//#&#32;(2024-04-12)</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;expectedLetterThatWasInserted&#32;=&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00296"/>00296 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;State&#32;change</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b">TextEditorCursor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex:&#32;0,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isPrimaryCursor:&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1_1_text_editor_cursor_modifier">TextEditorCursorModifier</link>(cursor);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorModifierBag&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_cursor_modifier_bag_text_editor">CursorModifierBagTextEditor</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;TextEditorViewModel&gt;.Empty,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;TextEditorCursorModifier&gt;()&#32;{&#32;cursorModifier&#32;});
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00307"/>00307 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modelModifier.Insert(letterToInsert,&#32;cursorModifierBag,&#32;cancellationToken:&#32;CancellationToken.None);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model&#32;=&#32;modelModifier.ToModel();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00311"/>00311 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;After-assertions</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(model.RichCharacterList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(expectedLetterThatWasInserted,&#32;model.RichCharacterList.Single().Value.ToString());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(2,&#32;model.LineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfFileLineEnd&#32;=&#32;model.LineEndList.Last();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;endOfFileLineEnd.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;endOfFileLineEnd.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;model.LineEndKindCountList.Single(x&#32;=&gt;&#32;x.lineEndKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed).count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(model.TabKeyPositionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00330"/>00330 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00395"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a0e05b02cbf3b8b889e6458e0b04cd52b">00395</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a0e05b02cbf3b8b889e6458e0b04cd52b">ContentList_Change</link>()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeTextEditorServicesTestsHelper(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;initialContent,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;refModel,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;viewModel,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00402"/>00402 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(initialContent,&#32;refModel.GetAllText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00404"/>00404 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refModel.CompilerService.ResourceWasModified(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refModel.ResourceUri,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImmutableArray&lt;TextEditorTextSpan&gt;.Empty);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00408"/>00408 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refModel&#32;=&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>.ModelApi.GetOrDefault(refModel.ResourceUri)&#32;??&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00410"/>00410 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>.PostUnique(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameof(<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_adhoc_test_1a0e05b02cbf3b8b889e6458e0b04cd52b">ContentList_Change</link>),
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;editContext&#32;=&gt;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;modelModifier&#32;=&#32;editContext.GetModelModifier(refModel.ResourceUri);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00416"/>00416 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(modelModifier&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00419"/>00419 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>.ModelApi.ApplySyntaxHighlighting(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;editContext,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modelModifier);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00425"/>00425 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ContentList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;contentList&#32;=&#32;refModel.RichCharacterList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(27,&#32;refModel.RichCharacterList.Length);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00430"/>00430 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;i&#32;=&#32;0;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00432"/>00432 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Idea:&#32;Would&#32;a&#32;method,&#32;&apos;RichCharacter&#32;GetRichCharacter(int&#32;globalPositionIndex)&apos;,&#32;be&#32;good?</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Currently,&#32;I&#32;have&#32;to&#32;index&#32;into&#32;two&#32;separate&#32;lists,&#32;i.e.&#32;the&#32;&apos;CharList&apos;</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;DecorationByteList.</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;|</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;Internally&#32;&apos;RichCharacter&#32;GetRichCharacter(int&#32;globalPositionIndex)&apos;&#32;would&#32;be&#32;no&#32;different,</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;perhaps&#32;the&#32;API&#32;would&#32;provide&#32;some&#32;sanity?</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00439"/>00439 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;p&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00443"/>00443 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;u&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00447"/>00447 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;b&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00451"/>00451 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;l&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00455"/>00455 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;i&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00459"/>00459 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;c&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00463"/>00463 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00467"/>00467 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;c&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00471"/>00471 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;l&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00475"/>00475 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;a&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00479"/>00479 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;s&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00483"/>00483 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;s&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00491"/>00491 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;M&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(11,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00495"/>00495 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;y&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(11,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00499"/>00499 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;C&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(11,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00503"/>00503 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;l&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(11,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00507"/>00507 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;a&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(11,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00511"/>00511 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;s&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(11,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00515"/>00515 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;s&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(11,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00519"/>00519 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;\n&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00523"/>00523 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;{&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00527"/>00527 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;\n&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00531"/>00531 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;\t&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00535"/>00535 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;\n&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00539"/>00539 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;}&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00543"/>00543 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;richCharacter&#32;=&#32;refModel.RichCharacterList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;\n&apos;</emphasis>,&#32;richCharacter.Value);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;richCharacter.DecorationByte);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00547"/>00547 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(27,&#32;i);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00550"/>00550 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PartitionList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;partitionList&#32;=&#32;refModel.PartitionList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(partitionList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00556"/>00556 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;EditBlocksList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;editBlocksList&#32;=&#32;refModel.EditBlockList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(editBlocksList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00562"/>00562 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RowEndingPositionsList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rowEndingPositionsList&#32;=&#32;refModel.LineEndList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00566"/>00566 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(5,&#32;rowEndingPositionsList.Count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00568"/>00568 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;i&#32;=&#32;0;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00570"/>00570 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rowEnding&#32;=&#32;rowEndingPositionsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(20,&#32;rowEnding.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(21,&#32;rowEnding.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed,&#32;rowEnding.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00575"/>00575 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowEnding&#32;=&#32;rowEndingPositionsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(22,&#32;rowEnding.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(23,&#32;rowEnding.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed,&#32;rowEnding.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00580"/>00580 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowEnding&#32;=&#32;rowEndingPositionsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(24,&#32;rowEnding.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(25,&#32;rowEnding.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed,&#32;rowEnding.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00585"/>00585 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowEnding&#32;=&#32;rowEndingPositionsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(26,&#32;rowEnding.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(27,&#32;rowEnding.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed,&#32;rowEnding.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00590"/>00590 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowEnding&#32;=&#32;rowEndingPositionsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(27,&#32;rowEnding.StartPositionIndexInclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(27,&#32;rowEnding.EndPositionIndexExclusive);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.EndOfFile,&#32;rowEnding.LineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00596"/>00596 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RowEndingKindCountsList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rowEndingKindCountsList&#32;=&#32;refModel.LineEndKindCountList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00600"/>00600 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(3,&#32;rowEndingKindCountsList.Count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00602"/>00602 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;i&#32;=&#32;0;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00604"/>00604 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rowEndingKindCountTuple&#32;=&#32;rowEndingKindCountsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturn,&#32;rowEndingKindCountTuple.lineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;rowEndingKindCountTuple.count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00608"/>00608 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowEndingKindCountTuple&#32;=&#32;rowEndingKindCountsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed,&#32;rowEndingKindCountTuple.lineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(4,&#32;rowEndingKindCountTuple.count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00612"/>00612 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowEndingKindCountTuple&#32;=&#32;rowEndingKindCountsList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.CarriageReturnLineFeed,&#32;rowEndingKindCountTuple.lineEndKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;rowEndingKindCountTuple.count);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00617"/>00617 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PresentationModelsList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;presentationModelsList&#32;=&#32;refModel.PresentationModelList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(presentationModelsList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00623"/>00623 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TabKeyPositionsList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tabKeyPositionsList&#32;=&#32;refModel.TabKeyPositionList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00627"/>00627 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(tabKeyPositionsList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00629"/>00629 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tabKeyPosition&#32;=&#32;tabKeyPositionsList.Single();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(23,&#32;tabKeyPosition);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00633"/>00633 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;OnlyRowEndingKind</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;onlyRowEndingKind&#32;=&#32;refModel.OnlyLineEndKind;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed,&#32;onlyRowEndingKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00639"/>00639 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;UsingRowEndingKind</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;usingRowEndingKind&#32;=&#32;refModel.LineEndKindPreference;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.LineFeed,&#32;usingRowEndingKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00645"/>00645 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ResourceUri</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1ae531f6ec8ec05e2493aabf8d17c23e4b">resourceUri</link>&#32;=&#32;refModel.ResourceUri;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.cs&quot;</emphasis>),&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1ae531f6ec8ec05e2493aabf8d17c23e4b">resourceUri</link>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00651"/>00651 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ResourceLastWriteTime</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00656"/>00656 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PartitionSize</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;partitionSize&#32;=&#32;refModel.PartitionSize;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(4096,&#32;partitionSize);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00662"/>00662 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;FileExtension</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fileExtension&#32;=&#32;refModel.FileExtension;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(ExtensionNoPeriodFacts.C_SHARP_CLASS,&#32;fileExtension);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00668"/>00668 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DecorationMapper</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;decorationMapper&#32;=&#32;refModel.DecorationMapper;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsType&lt;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_generic_lexer_1_1_decorat78ccafb1ce12678be58e76a7e584cb2d">GenericDecorationMapper</link>&gt;(decorationMapper);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00674"/>00674 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;CompilerService</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;compilerService&#32;=&#32;refModel.CompilerService;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsType&lt;<link linkend="_class_luthetus_1_1_compiler_services_1_1_c_sharp_1_1_compiler_service_case_1_1_c_sharp_compiler_service">CSharpCompilerService</link>&gt;(compilerService);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00680"/>00680 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TextEditorSaveFileHelper</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textEditorSaveFileHelper&#32;=&#32;refModel.TextEditorSaveFileHelper;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(textEditorSaveFileHelper);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00686"/>00686 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;EditBlockIndex</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;editBlockIndex&#32;=&#32;refModel.EditBlockIndex;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;editBlockIndex);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00692"/>00692 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;IsDirty</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;isDirty&#32;=&#32;refModel.IsDirty;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(isDirty);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00698"/>00698 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MostCharactersOnASingleRowTuple</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mostCharactersOnASingleLineTuple&#32;=&#32;refModel.MostCharactersOnASingleLineTuple;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;mostCharactersOnASingleLineTuple.lineIndex);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(26,&#32;mostCharactersOnASingleLineTuple.lineLength);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00705"/>00705 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RenderStateKey</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00710"/>00710 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LineCount</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineCount&#32;=&#32;refModel.LineCount;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(5,&#32;lineCount);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00716"/>00716 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DocumentLength</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;documentLength&#32;=&#32;refModel.DocumentLength;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(27,&#32;documentLength);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00722"/>00722 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cSharpResource</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cSharpResource&#32;=&#32;refModel.CompilerService.GetCompilerServiceResourceFor(refModel.ResourceUri)&#32;??&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00726"/>00726 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;CompilationUnit</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00731"/>00731 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SyntaxTokenList</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;syntaxTokenList&#32;=&#32;cSharpResource.SyntaxTokenList;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00735"/>00735 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(6,&#32;syntaxTokenList.Length);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00737"/>00737 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;i&#32;=&#32;0;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00739"/>00739 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;token&#32;=&#32;syntaxTokenList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.PublicTokenKeyword,&#32;token.SyntaxKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;public&quot;</emphasis>,&#32;token.TextSpan.GetText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00743"/>00743 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;syntaxTokenList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.ClassTokenKeyword,&#32;token.SyntaxKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;class&quot;</emphasis>,&#32;token.TextSpan.GetText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00747"/>00747 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;syntaxTokenList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.IdentifierToken,&#32;token.SyntaxKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;MyClass&quot;</emphasis>,&#32;token.TextSpan.GetText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00751"/>00751 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;syntaxTokenList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.OpenBraceToken,&#32;token.SyntaxKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;{&quot;</emphasis>,&#32;token.TextSpan.GetText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00755"/>00755 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;syntaxTokenList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.CloseBraceToken,&#32;token.SyntaxKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;}&quot;</emphasis>,&#32;token.TextSpan.GetText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00759"/>00759 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;syntaxTokenList[i++];
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.EndOfFileToken,&#32;token.SyntaxKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="keywordtype">string</emphasis>.Empty,&#32;token.TextSpan.GetText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00763"/>00763 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(6,&#32;i);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00766"/>00766 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GetTokenTextSpans()</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00771"/>00771 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GetSymbols()</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;symbolList&#32;=&#32;cSharpResource.GetSymbols();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00775"/>00775 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Single(symbolList);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00777"/>00777 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;symbol&#32;=&#32;symbolList.Single();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b">SyntaxKind</link>.TypeSymbol,&#32;symbol.SyntaxKind);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;MyClass&quot;</emphasis>,&#32;symbol.TextSpan.GetText());
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00782"/>00782 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;GetDiagnostics()</emphasis>
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;diagnostics&#32;=&#32;cSharpResource.GetDiagnostics();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Empty(diagnostics);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00789"/>00789 &#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00790"/>00790 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00791"/>00791 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeTextEditorServicesTestsHelper(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<emphasis role="keywordtype">string</emphasis>&#32;initialContent,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model">TextEditorModel</link>&#32;model,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aa2a2da032900659e3cf98e4b28fc476d">TextEditorViewModel</link>&#32;viewModel,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_i_text_editor_service">ITextEditorService</link>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>)
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00796"/>00796 &#32;&#32;&#32;&#32;{
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTaskService&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_synchronous">BackgroundTaskServiceSynchronous</link>();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00798"/>00798 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddScoped&lt;IJSRuntime,&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_misc_1_1_do_nothing_js_runtime">DoNothingJsRuntime</link>&gt;()
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddLuthetusIdeRazorLibServices(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_installations_1_1_models_1a761f9bfb52cfd9ffaa1a4bbdddf1aebb">LuthetusHostingInformation</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_installations_1_1_models_1a6fa014b5a7072b6304fd9fe595cc2a60">LuthetusHostingKind</link>.UnitTestingSynchronous,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_installations_1_1_models_1a6de164b4b02fa971f5eddc7f274686a6">LuthetusPurposeKind</link>.TextEditor,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskService));
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00806"/>00806 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;serviceProvider&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;store&#32;=&#32;serviceProvider.GetRequiredService&lt;IStore&gt;();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.InitializeAsync().Wait();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00810"/>00810 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textEditorRegistryWrap&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_decorations_1_1_models_1_1_i_text_editor_registry_wrap">ITextEditorRegistryWrap</link>&gt;();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorRegistryWrap.DecorationMapperRegistry&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_decorations_1_1_models_1_1_i_decoration_mapper_registry">IDecorationMapperRegistry</link>&gt;();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorRegistryWrap.CompilerServiceRegistry&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_compiler_service_registry">ICompilerServiceRegistry</link>&gt;();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00814"/>00814 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_i_text_editor_service">ITextEditorService</link>&gt;();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00816"/>00816 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fileExtension&#32;=&#32;ExtensionNoPeriodFacts.C_SHARP_CLASS;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1ae531f6ec8ec05e2493aabf8d17c23e4b">resourceUri</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.cs&quot;</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;resourceLastWriteTime&#32;=&#32;DateTime.UtcNow;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialContent&#32;=&#32;<emphasis role="stringliteral">&quot;public&#32;class&#32;MyClass\n{\n\t\n}\n&quot;</emphasis>.ReplaceLineEndings(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;genericDecorationMapper&#32;=&#32;((<link linkend="_class_luthetus_1_1_extensions_1_1_config_1_1_decorations_1_1_decoration_mapper_registry">DecorationMapperRegistry</link>)serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_decorations_1_1_models_1_1_i_decoration_mapper_registry">IDecorationMapperRegistry</link>&gt;()).<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_generic_lexer_1_1_decorat78ccafb1ce12678be58e76a7e584cb2d">GenericDecorationMapper</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cSharpCompilerService&#32;=&#32;((<link linkend="_class_luthetus_1_1_extensions_1_1_config_1_1_compiler_services_1_1_compiler_service_registry">CompilerServiceRegistry</link>)serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_compiler_service_registry">ICompilerServiceRegistry</link>&gt;()).<link linkend="_class_luthetus_1_1_compiler_services_1_1_c_sharp_1_1_compiler_service_case_1_1_c_sharp_compiler_service">CSharpCompilerService</link>;
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00823"/>00823 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_text_editor_model">TextEditorModel</link>(
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1ae531f6ec8ec05e2493aabf8d17c23e4b">resourceUri</link>,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resourceLastWriteTime,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fileExtension,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialContent,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;genericDecorationMapper,
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cSharpCompilerService);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00831"/>00831 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>.ModelApi.RegisterCustom(model);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cSharpCompilerService.RegisterResource(model.ResourceUri,&#32;shouldTriggerResourceWasModified:&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model&#32;=&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>.ModelApi.GetOrDefault(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1ae531f6ec8ec05e2493aabf8d17c23e4b">resourceUri</link>)&#32;??&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00835"/>00835 
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;viewModelKey&#32;=&#32;Key&lt;TextEditorViewModel&gt;.NewKey();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>.ViewModelApi.Register(viewModelKey,&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1ae531f6ec8ec05e2493aabf8d17c23e4b">resourceUri</link>,&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1ab53dfba5ef40ddaeca4b8982ea420fd1">Category</link>(<emphasis role="stringliteral">&quot;UnitTesting&quot;</emphasis>));
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewModel&#32;=&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aecfb76d19da117c025734259242d144d">textEditorService</link>.ViewModelApi.GetOrDefault(viewModelKey)&#32;??&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException();
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00839"/>00839 &#32;&#32;&#32;&#32;}
<anchor xml:id="__adhoc_test_8_main_8cs_source_1l00840"/>00840 }
</programlisting></section>
