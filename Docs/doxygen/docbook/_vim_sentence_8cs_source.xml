<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__vim_sentence_8cs_source" xml:lang="en-US">
<title>VimSentence.cs</title>
<indexterm><primary>Source/Lib/TextEditor/Keymaps/Models/Vims/VimSentence.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__vim_sentence_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_commands_1_1_models_1_1_vims">Luthetus.TextEditor.RazorLib.Commands.Models.Vims</link>;
<anchor xml:id="__vim_sentence_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__vim_sentence_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_commands_1_1_models">Luthetus.TextEditor.RazorLib.Commands.Models</link>;
<anchor xml:id="__vim_sentence_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_commands_1_1_models_1_1_defaults">Luthetus.TextEditor.RazorLib.Commands.Models.Defaults</link>;
<anchor xml:id="__vim_sentence_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models">Luthetus.Common.RazorLib.Keymaps.Models</link>;
<anchor xml:id="__vim_sentence_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_exceptions">Luthetus.TextEditor.RazorLib.Exceptions</link>;
<anchor xml:id="__vim_sentence_8cs_source_1l00007"/>00007 
<anchor xml:id="__vim_sentence_8cs_source_1l00008"/>00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims">Luthetus.TextEditor.RazorLib.Keymaps.Models.Vims</link>;
<anchor xml:id="__vim_sentence_8cs_source_1l00009"/>00009 
<anchor xml:id="__vim_sentence_8cs_source_1l00010"/><link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence">00010</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence">VimSentence</link>
<anchor xml:id="__vim_sentence_8cs_source_1l00011"/>00011 {
<anchor xml:id="__vim_sentence_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;List&lt;VimGrammarToken&gt;&#32;_pendingSentenceList&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__vim_sentence_8cs_source_1l00013"/>00013 
<anchor xml:id="__vim_sentence_8cs_source_1l00014"/><link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a5a78cd9486aed7f7c830ca10cc824225">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ImmutableArray&lt;VimGrammarToken&gt;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a5a78cd9486aed7f7c830ca10cc824225">PendingSentenceList</link>&#32;=&gt;&#32;_pendingSentenceList.ToImmutableArray();
<anchor xml:id="__vim_sentence_8cs_source_1l00015"/><link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a102c1b717e16590c268eb60ff14bf873">00015</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ImmutableArray&lt;VimGrammarToken&gt;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a102c1b717e16590c268eb60ff14bf873">MostRecentSyntacticallyCompleteSentence</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}&#32;=&#32;ImmutableArray&lt;VimGrammarToken&gt;.Empty;
<anchor xml:id="__vim_sentence_8cs_source_1l00016"/>00016 
<anchor xml:id="__vim_sentence_8cs_source_1l00017"/><link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a7726123d0229df037b699392cd5f09b1">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a7726123d0229df037b699392cd5f09b1">TryLex</link>(
<anchor xml:id="__vim_sentence_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_text_editor_keymap_vim">TextEditorKeymapVim</link>&#32;textEditorKeymapVim,
<anchor xml:id="__vim_sentence_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args">KeymapArgs</link>&#32;keymapArgs,
<anchor xml:id="__vim_sentence_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection,
<anchor xml:id="__vim_sentence_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_commands_1_1_models_1_1_text_editor_command">TextEditorCommand</link>?&#32;textEditorCommand)
<anchor xml:id="__vim_sentence_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;sentenceIsSyntacticallyComplete;
<anchor xml:id="__vim_sentence_8cs_source_1l00024"/>00024 
<anchor xml:id="__vim_sentence_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;mostRecentToken&#32;=&#32;_pendingSentenceList.LastOrDefault();
<anchor xml:id="__vim_sentence_8cs_source_1l00026"/>00026 
<anchor xml:id="__vim_sentence_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mostRecentToken&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sentenceIsSyntacticallyComplete&#32;=&#32;ContinueFromStart(keymapArgs,&#32;hasTextSelection);
<anchor xml:id="__vim_sentence_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sentenceIsSyntacticallyComplete&#32;=&#32;mostRecentToken.VimGrammarKind&#32;<emphasis role="keywordflow">switch</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58adcfc313589935306402ea9ee3c7647f8">VimGrammarKind.Verb</link>&#32;=&gt;&#32;ContinueFromVerb(keymapArgs,&#32;hasTextSelection),
<anchor xml:id="__vim_sentence_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58a898c079d2e62a4b1971dfbad9d860838">VimGrammarKind.Modifier</link>&#32;=&gt;&#32;ContinueFromModifier(keymapArgs,&#32;hasTextSelection),
<anchor xml:id="__vim_sentence_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58a3e2c5944bed6f2e006627e9af8ef597c">VimGrammarKind.TextObject</link>&#32;=&gt;&#32;ContinueFromTextObject(keymapArgs,&#32;hasTextSelection),
<anchor xml:id="__vim_sentence_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58a7020426cfb0a204051be4b3053d2acc8">VimGrammarKind.Repeat</link>&#32;=&gt;&#32;ContinueFromRepeat(keymapArgs,&#32;hasTextSelection),
<anchor xml:id="__vim_sentence_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&gt;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_exceptions_1_1_luthetus_text_editor_exception">LuthetusTextEditorException</link>($<emphasis role="stringliteral">&quot;The&#32;{nameof(VimGrammarKind)}:&#32;{_pendingSentenceList.Last().VimGrammarKind}&#32;was&#32;not&#32;recognized.&quot;</emphasis>),
<anchor xml:id="__vim_sentence_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__vim_sentence_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00042"/>00042 
<anchor xml:id="__vim_sentence_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sentenceIsSyntacticallyComplete)
<anchor xml:id="__vim_sentence_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sentenceSnapshot&#32;=&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a5a78cd9486aed7f7c830ca10cc824225">PendingSentenceList</link>;
<anchor xml:id="__vim_sentence_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1a102c1b717e16590c268eb60ff14bf873">MostRecentSyntacticallyCompleteSentence</link>&#32;=&#32;sentenceSnapshot;
<anchor xml:id="__vim_sentence_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00048"/>00048 
<anchor xml:id="__vim_sentence_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1ab480589862fd5f015424691c0f2727ea">TryParseNextToken</link>(
<anchor xml:id="__vim_sentence_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorKeymapVim,
<anchor xml:id="__vim_sentence_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sentenceSnapshot,
<anchor xml:id="__vim_sentence_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="__vim_sentence_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keymapArgs,
<anchor xml:id="__vim_sentence_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasTextSelection,
<anchor xml:id="__vim_sentence_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;textEditorCommand);
<anchor xml:id="__vim_sentence_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00057"/>00057 
<anchor xml:id="__vim_sentence_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorCommand&#32;=&#32;TextEditorCommandDefaultFacts.DoNothingDiscard;
<anchor xml:id="__vim_sentence_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00061"/>00061 
<anchor xml:id="__vim_sentence_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ContinueFromStart(<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args">KeymapArgs</link>&#32;keymapArgs,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection)
<anchor xml:id="__vim_sentence_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxVerbVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;verbToken)&#32;&amp;&amp;&#32;verbToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keymapArgs.<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args_1adb992ade2a69ce86f86985f9226a37e8">CtrlKey</link>)
<anchor xml:id="__vim_sentence_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;if&#32;case&#32;relates&#32;to&#32;&apos;Ctrl&#32;+&#32;e&apos;&#32;which&#32;does&#32;not&#32;get</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;double&#32;tapped&#32;instead&#32;it&#32;only&#32;takes&#32;one&#32;press&#32;of&#32;the&#32;keymap</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(verbToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00072"/>00072 
<anchor xml:id="__vim_sentence_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00075"/>00075 
<anchor xml:id="__vim_sentence_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasTextSelection)
<anchor xml:id="__vim_sentence_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(verbToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00080"/>00080 
<anchor xml:id="__vim_sentence_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00083"/>00083 
<anchor xml:id="__vim_sentence_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(verbToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00087"/>00087 
<anchor xml:id="__vim_sentence_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxTextObjectVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;textObjectToken)&#32;&amp;&amp;&#32;textObjectToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(textObjectToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00093"/>00093 
<anchor xml:id="__vim_sentence_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxRepeatVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;repeatToken)&#32;&amp;&amp;&#32;repeatToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(repeatToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00099"/>00099 
<anchor xml:id="__vim_sentence_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00103"/>00103 
<anchor xml:id="__vim_sentence_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ContinueFromVerb(<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args">KeymapArgs</link>&#32;keymapArgs,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection)
<anchor xml:id="__vim_sentence_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxVerbVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;verbToken)&#32;&amp;&amp;&#32;verbToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_pendingSentenceList.Last().KeymapArgument.Code&#32;==&#32;verbToken.KeymapArgument.Code)
<anchor xml:id="__vim_sentence_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(verbToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00113"/>00113 
<anchor xml:id="__vim_sentence_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keymapArgs.<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args_1adb992ade2a69ce86f86985f9226a37e8">CtrlKey</link>)
<anchor xml:id="__vim_sentence_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;if&#32;case&#32;relates&#32;to&#32;&apos;Ctrl&#32;+&#32;e&apos;&#32;which&#32;does&#32;not&#32;get</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;double&#32;tapped&#32;instead&#32;it&#32;only&#32;takes&#32;one&#32;press&#32;of&#32;the&#32;keymap</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(verbToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00120"/>00120 
<anchor xml:id="__vim_sentence_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00123"/>00123 
<anchor xml:id="__vim_sentence_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;verb&#32;was&#32;overriden&#32;so&#32;restart&#32;sentence</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00126"/>00126 
<anchor xml:id="__vim_sentence_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ContinueFromStart(keymapArgs,&#32;hasTextSelection);
<anchor xml:id="__vim_sentence_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__vim_sentence_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxModifierVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;modifierToken)&#32;&amp;&amp;&#32;modifierToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(modifierToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__vim_sentence_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxTextObjectVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;textObjectToken)&#32;&amp;&amp;&#32;textObjectToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(textObjectToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__vim_sentence_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxRepeatVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;repeatToken)&#32;&amp;&amp;&#32;repeatToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(repeatToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00147"/>00147 
<anchor xml:id="__vim_sentence_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00151"/>00151 
<anchor xml:id="__vim_sentence_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ContinueFromModifier(KeymapArgs&#32;keymapArgs,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection)
<anchor xml:id="__vim_sentence_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxTextObjectVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;textObjectToken)&#32;&amp;&amp;&#32;textObjectToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(textObjectToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00159"/>00159 
<anchor xml:id="__vim_sentence_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00163"/>00163 
<anchor xml:id="__vim_sentence_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ContinueFromTextObject(KeymapArgs&#32;keymapArgs,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection)
<anchor xml:id="__vim_sentence_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Suppress&#32;unused&#32;parameter&#32;warnings&#32;because&#32;these&#32;will&#32;likely&#32;be&#32;used&#32;once&#32;further&#32;Vim&#32;emulation&#32;is&#32;implemented.</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;keymapArgs;
<anchor xml:id="__vim_sentence_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;hasTextSelection;
<anchor xml:id="__vim_sentence_8cs_source_1l00169"/>00169 
<anchor xml:id="__vim_sentence_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;state&#32;should&#32;not&#32;occur&#32;as&#32;a&#32;TextObject&#32;always&#32;ends&#32;a&#32;sentence&#32;if&#32;it&#32;is&#32;there.</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00174"/>00174 
<anchor xml:id="__vim_sentence_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ContinueFromRepeat(KeymapArgs&#32;keymapArgs,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection)
<anchor xml:id="__vim_sentence_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxVerbVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;verbToken)&#32;&amp;&amp;&#32;verbToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(verbToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__vim_sentence_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxTextObjectVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;textObjectToken)&#32;&amp;&amp;&#32;textObjectToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(textObjectToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__vim_sentence_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SyntaxRepeatVim.TryLex(keymapArgs,&#32;hasTextSelection,&#32;out&#32;var&#32;repeatToken)&#32;&amp;&amp;&#32;repeatToken&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Add(repeatToken);
<anchor xml:id="__vim_sentence_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00194"/>00194 
<anchor xml:id="__vim_sentence_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pendingSentenceList.Clear();
<anchor xml:id="__vim_sentence_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00198"/>00198 
<anchor xml:id="__vim_sentence_8cs_source_1l00199"/><link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1ab480589862fd5f015424691c0f2727ea">00199</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_vim_sentence_1ab480589862fd5f015424691c0f2727ea">TryParseNextToken</link>(
<anchor xml:id="__vim_sentence_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_text_editor_keymap_vim">TextEditorKeymapVim</link>&#32;textEditorKeymapVim,
<anchor xml:id="__vim_sentence_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImmutableArray&lt;VimGrammarToken&gt;&#32;sentenceSnapshotList,
<anchor xml:id="__vim_sentence_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indexInSentence,
<anchor xml:id="__vim_sentence_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args">KeymapArgs</link>&#32;keymapArgs,
<anchor xml:id="__vim_sentence_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection,
<anchor xml:id="__vim_sentence_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_commands_1_1_models_1_1_text_editor_command">TextEditorCommand</link>?&#32;command)
<anchor xml:id="__vim_sentence_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(indexInSentence&#32;&gt;=&#32;sentenceSnapshotList.Length)
<anchor xml:id="__vim_sentence_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;command&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00212"/>00212 
<anchor xml:id="__vim_sentence_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentToken&#32;=&#32;sentenceSnapshotList[indexInSentence];
<anchor xml:id="__vim_sentence_8cs_source_1l00214"/>00214 
<anchor xml:id="__vim_sentence_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;success&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__vim_sentence_8cs_source_1l00216"/>00216 
<anchor xml:id="__vim_sentence_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success&#32;=&#32;currentToken.VimGrammarKind&#32;<emphasis role="keywordflow">switch</emphasis>
<anchor xml:id="__vim_sentence_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58adcfc313589935306402ea9ee3c7647f8">VimGrammarKind.Verb</link>&#32;=&gt;&#32;SyntaxVerbVim.TryParse(
<anchor xml:id="__vim_sentence_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorKeymapVim,&#32;sentenceSnapshotList,&#32;indexInSentence,&#32;keymapArgs,&#32;hasTextSelection,&#32;out&#32;command),
<anchor xml:id="__vim_sentence_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58a898c079d2e62a4b1971dfbad9d860838">VimGrammarKind.Modifier</link>&#32;=&gt;&#32;SyntaxModifierVim.TryParse(
<anchor xml:id="__vim_sentence_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorKeymapVim,&#32;sentenceSnapshotList,&#32;indexInSentence,&#32;keymapArgs,&#32;hasTextSelection,&#32;out&#32;command),
<anchor xml:id="__vim_sentence_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58a3e2c5944bed6f2e006627e9af8ef597c">VimGrammarKind.TextObject</link>&#32;=&gt;&#32;SyntaxTextObjectVim.TryParse(
<anchor xml:id="__vim_sentence_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorKeymapVim,&#32;sentenceSnapshotList,&#32;indexInSentence,&#32;keymapArgs,&#32;hasTextSelection,&#32;out&#32;command),
<anchor xml:id="__vim_sentence_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58a7020426cfb0a204051be4b3053d2acc8">VimGrammarKind.Repeat</link>&#32;=&gt;&#32;SyntaxRepeatVim.TryParse(
<anchor xml:id="__vim_sentence_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorKeymapVim,&#32;sentenceSnapshotList,&#32;indexInSentence,&#32;keymapArgs,&#32;hasTextSelection,&#32;out&#32;command),
<anchor xml:id="__vim_sentence_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&gt;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_exceptions_1_1_luthetus_text_editor_exception">LuthetusTextEditorException</link>($<emphasis role="stringliteral">&quot;The&#32;{nameof(VimGrammarKind)}:&#32;{sentenceSnapshotList.Last().VimGrammarKind}&#32;was&#32;not&#32;recognized.&quot;</emphasis>),
<anchor xml:id="__vim_sentence_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__vim_sentence_8cs_source_1l00229"/>00229 
<anchor xml:id="__vim_sentence_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(success&#32;&amp;&amp;&#32;command&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__vim_sentence_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vim_sentence_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textEditorKeymapVim.<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_text_editor_keymap_vim_1a8fce26b51d91c2f554438525fbe4580a">ActiveVimMode</link>&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1ac88af8149d254447dc2dcc2b8d17125a">VimMode</link>.Visual)
<anchor xml:id="__vim_sentence_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;command&#32;=&#32;TextEditorCommandVimFacts.Motions.GetVisualFactory(command,&#32;command.DisplayName);
<anchor xml:id="__vim_sentence_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textEditorKeymapVim.<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1_1_text_editor_keymap_vim_1a8fce26b51d91c2f554438525fbe4580a">ActiveVimMode</link>&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1ac88af8149d254447dc2dcc2b8d17125a">VimMode</link>.VisualLine)
<anchor xml:id="__vim_sentence_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;command&#32;=&#32;TextEditorCommandVimFacts.Motions.GetVisualLineFactory(command,&#32;command.DisplayName);
<anchor xml:id="__vim_sentence_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00237"/>00237 
<anchor xml:id="__vim_sentence_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;success;
<anchor xml:id="__vim_sentence_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vim_sentence_8cs_source_1l00240"/>00240 }
</programlisting></section>
