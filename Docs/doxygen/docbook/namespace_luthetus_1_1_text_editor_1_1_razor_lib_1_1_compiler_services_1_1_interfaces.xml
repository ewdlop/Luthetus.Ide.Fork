<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces" xml:lang="en-US">
<title>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces Namespace Reference</title>
<indexterm><primary>Luthetus.TextEditor.RazorLib.CompilerServices.Interfaces</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_binder">IBinder</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_binder_session">IBinderSession</link></para>

<para>The CSharpBinder is being instantiated, then re-used many times foreach C# resource. This allows the files to know of eachother but, some data should only last for the length of a particular resource being parsed. Opposed to the lifetime of the CSharpBinder instance. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_compiler_service">ICompilerService</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_compiler_service_registry">ICompilerServiceRegistry</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_compiler_service_resource">ICompilerServiceResource</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_evaluator">IEvaluator</link></para>

<para>The ILuthCompilerService is to only perform static analysis of source code. <?linebreak?><?linebreak?> One should never execute the source code which is being analyzed. <?linebreak?><?linebreak?> However, for testing purposes it can be useful to see if one&apos;s logic for parsing expressions evaluates properly. And so, for testing only, the <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_evaluator">IEvaluator</link> exists. <?linebreak?><?linebreak?> Again, the ILuthCompilerService should NEVER execute source code which it is analyzing. Only perform static analysis of source code. </para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_lexer">ILexer</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_parser">IParser</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_parser_model">IParserModel</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_scope">IScope</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_interfaces_1_1_i_text_editor_symbol">ITextEditorSymbol</link></para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
