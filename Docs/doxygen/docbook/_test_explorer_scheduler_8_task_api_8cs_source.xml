<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__test_explorer_scheduler_8_task_api_8cs_source" xml:lang="en-US">
<title>TestExplorerScheduler.TaskApi.cs</title>
<indexterm><primary>Source/Lib/Extensions/Extensions.DotNet/TestExplorers/States/TestExplorerScheduler.TaskApi.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models">Luthetus.Common.RazorLib.TreeViews.Models</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_notifications_1_1_models">Luthetus.Common.RazorLib.Notifications.Models</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_utils">Luthetus.Common.RazorLib.TreeViews.Models.Utils</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models">Luthetus.Common.RazorLib.Reactives.Models</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_compiler_services_1_1_dot_net_solution_1_1_models_1_1_project">Luthetus.CompilerServices.DotNetSolution.Models.Project</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models">Luthetus.Ide.RazorLib.Terminals.Models</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models">Luthetus.Extensions.DotNet.TestExplorers.Models</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_command_lines_1_1_models">Luthetus.Extensions.DotNet.CommandLines.Models</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00010"/>00010 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00011"/>00011 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states">Luthetus.Extensions.DotNet.TestExplorers.States</link>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00012"/>00012 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00013"/>00013 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis><link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler">TestExplorerScheduler</link>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00014"/>00014 {
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00015"/><link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a830ddde8f6626bba3471afee43f8108c">00015</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a830ddde8f6626bba3471afee43f8108c">Task_ConstructTreeView</link>()
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dotNetSolutionState&#32;=&#32;_dotNetSolutionStateWrap.Value;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dotNetSolutionModel&#32;=&#32;dotNetSolutionState.DotNetSolutionModel;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00019"/>00019 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dotNetSolutionModel&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00022"/>00022 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localDotNetProjectList&#32;=&#32;dotNetSolutionModel.DotNetProjectList
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Where(x&#32;=&gt;&#32;x.DotNetProjectKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_compiler_services_1_1_dot_net_solution_1_1_models_1_1_project_1a8b7dffa208e87fed238434aefc6c237e">DotNetProjectKind</link>.CSharpProject);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00025"/>00025 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localProjectTestModelList&#32;=&#32;localDotNetProjectList.Select(x&#32;=&gt;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_project_test_model">ProjectTestModel</link>(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.ProjectIdGuid,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x.AbsolutePath,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;callback&#32;=&gt;&#32;Task.CompletedTask,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;node&#32;=&gt;&#32;_treeViewService.ReRenderNode(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;node)));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00031"/>00031 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localFormattedCommand&#32;=&#32;DotNetCliCommandFormatter.FormatDotNetTestListTests();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00033"/>00033 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localTreeViewProjectTestModelList&#32;=&#32;localProjectTestModelList.Select(x&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type">TreeViewNoType</link>)<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_tree_view_project_test_model">TreeViewProjectTestModel</link>(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_commonComponentRenderers,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.ToArray();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00041"/>00041 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;entry&#32;<emphasis role="keywordflow">in</emphasis>&#32;localTreeViewProjectTestModelList)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;treeViewProjectTestModel&#32;=&#32;(<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_tree_view_project_test_model">TreeViewProjectTestModel</link>)entry;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00045"/>00045 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrWhiteSpace(treeViewProjectTestModel.Item.DirectoryNameForTestDiscovery))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;projectFileText&#32;=&#32;await&#32;_fileSystemProvider.File.ReadAllTextAsync(treeViewProjectTestModel.Item.AbsolutePath.Value);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(projectFileText.Contains(<emphasis role="stringliteral">&quot;xunit&quot;</emphasis>))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList.Any(x&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_tree_view_project_test_model">TreeViewProjectTestModel</link>)x).Item.AbsolutePath.Value&#32;==&#32;treeViewProjectTestModel.Item.AbsolutePath.Value))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList.Add(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>.ChildList.Any(x&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_tree_view_project_test_model">TreeViewProjectTestModel</link>)x).Item.AbsolutePath.Value&#32;==&#32;treeViewProjectTestModel.Item.AbsolutePath.Value))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>.ChildList.Add(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00067"/>00067 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.EnqueueDiscoverTestsFunc&#32;=&#32;callback&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;terminalCommandRequest&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_ide_1_1_razor_lib_1_1_terminals_1_1_models_1_1_terminal_command_request">TerminalCommandRequest</link>(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localFormattedCommand.Value,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.DirectoryNameForTestDiscovery,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.DotNetTestListTestsTerminalCommandRequestKey)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BeginWithFunc&#32;=&#32;async&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.TerminalCommandParsed&#32;=&#32;parsedCommand;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContinueWithFunc&#32;=&#32;async&#32;parsedCommand&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.TerminalCommandParsed&#32;=&#32;parsedCommand;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.TestNameFullyQualifiedList&#32;=&#32;_dotNetCliOutputParser.ParseOutputLineDotNetTestListTests(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.TerminalCommandParsed.OutputCache.ToString());
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00087"/>00087 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;THINKING_ABOUT_TREE_VIEW();</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;splitOutputList&#32;=&#32;(treeViewProjectTestModel.Item.TestNameFullyQualifiedList&#32;??&#32;<emphasis role="keyword">new</emphasis>())
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Select(x&#32;=&gt;&#32;x.Split(<emphasis role="charliteral">&apos;.&apos;</emphasis>));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00092"/>00092 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rootMap&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;StringFragment&gt;();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00094"/>00094 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;splitOutput&#32;<emphasis role="keywordflow">in</emphasis>&#32;splitOutputList)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;targetMap&#32;=&#32;rootMap;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lastSeenStringFragment&#32;=&#32;(<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_string_fragment">StringFragment</link>?)<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00099"/>00099 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;fragment&#32;<emphasis role="keywordflow">in</emphasis>&#32;splitOutput)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!targetMap.ContainsKey(fragment))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetMap.Add(fragment,&#32;<emphasis role="keyword">new</emphasis>(fragment));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00104"/>00104 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastSeenStringFragment&#32;=&#32;targetMap[fragment];
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetMap&#32;=&#32;lastSeenStringFragment.Map;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00108"/>00108 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lastSeenStringFragment&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastSeenStringFragment.IsEndpoint&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00112"/>00112 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.RootStringFragmentMap&#32;=&#32;rootMap;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;callback.Invoke(rootMap).ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;callback.Invoke(<emphasis role="keyword">new</emphasis>()).ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00124"/>00124 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.TerminalCommandRequest&#32;=&#32;terminalCommandRequest;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_terminalStateWrap.Value.TerminalMap[TerminalFacts.EXECUTION_KEY]
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.EnqueueCommandAsync(terminalCommandRequest);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00131"/>00131 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;adhocRoot&#32;=&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_adhoc">TreeViewAdhoc</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_adhoc_1a3dd148b2cb6390af05ed84da0ad21857">ConstructTreeViewAdhoc</link>(<emphasis role="keyword">new</emphasis>&#32;[]
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b0ad0fe3e513a2636475762d458c5f6">ContainsTestsTreeViewGroup</link>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1ad1e893d940cfb2302e64e18cae2a57c3">ThrewAnExceptionTreeViewGroup</link>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adhocRoot.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1a569ce774e5b109ccf8425149b18b3e02">LinkChildren</link>(<emphasis role="keyword">new</emphasis>(),&#32;adhocRoot.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b0ad0fe3e513a2636475762d458c5f6">ContainsTestsTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b0ad0fe3e513a2636475762d458c5f6">ContainsTestsTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1ad1e893d940cfb2302e64e18cae2a57c3">ThrewAnExceptionTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1ad1e893d940cfb2302e64e18cae2a57c3">ThrewAnExceptionTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;firstNode&#32;=&#32;localTreeViewProjectTestModelList.FirstOrDefault();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00148"/>00148 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;activeNodes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type">TreeViewNoType</link>[]&#32;{&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b0ad0fe3e513a2636475762d458c5f6">ContainsTestsTreeViewGroup</link>&#32;};
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00150"/>00150 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_treeViewService.TryGetTreeViewContainer(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;out&#32;_))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.RegisterTreeViewContainer(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1ace4f137317eda265ad6dd976b61de5c6">TreeViewContainer</link>(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adhocRoot,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;activeNodes.ToImmutableList()));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.SetRoot(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;adhocRoot);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00161"/>00161 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.SetActiveNode(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;firstNode,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00168"/>00168 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.WithAction(inState&#32;=&gt;&#32;inState&#32;with
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ProjectTestModelList&#32;=&#32;localProjectTestModelList.ToImmutableList()
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00175"/><link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95c2d52354bc0c73452eec6cbb9dc8fa">00175</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95c2d52354bc0c73452eec6cbb9dc8fa">Task_DiscoverTests</link>()
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_throttleDiscoverTests.RunAsync(async&#32;_&#32;=&gt;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dotNetSolutionState&#32;=&#32;_dotNetSolutionStateWrap.Value;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dotNetSolutionModel&#32;=&#32;dotNetSolutionState.DotNetSolutionModel;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dotNetSolutionModel&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localTestExplorerState&#32;=&#32;_testExplorerStateWrap.Value;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cancellationTokenSource&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CancellationTokenSource();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cancellationToken&#32;=&#32;cancellationTokenSource.Token;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;progressBarModel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_progress_bar_model">ProgressBarModel</link>(0,&#32;<emphasis role="stringliteral">&quot;parsing...&quot;</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnCancelFunc&#32;=&#32;()&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cancellationTokenSource.Cancel();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cancellationTokenSource.Dispose();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00198"/>00198 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotificationHelper.DispatchProgress(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$<emphasis role="stringliteral">&quot;Test&#32;Discovery:&#32;{dotNetSolutionModel.AbsolutePath.NameWithExtension}&quot;</emphasis>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_commonComponentRenderers,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dispatcher,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TimeSpan.FromMilliseconds(-1));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;progressThrottle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle">Throttle</link>(TimeSpan.FromMilliseconds(100));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressThrottle.Run(_&#32;=&gt;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel.SetProgress(0,&#32;<emphasis role="stringliteral">&quot;Discovering&#32;tests...&quot;</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;completionPercentPerProject&#32;=&#32;1.0&#32;/&#32;(double)<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList.Count;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;projectsHandled&#32;=&#32;0;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_treeViewService.TryGetTreeViewContainer(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;out&#32;var&#32;treeViewContainer))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewContainer.RootNode&#32;is&#32;not&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_adhoc">TreeViewAdhoc</link>&#32;treeViewAdhoc)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dotNetProjectListLength&#32;=&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList.Count;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;treeViewProject&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewProject&#32;is&#32;not&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_tree_view_project_test_model">TreeViewProjectTestModel</link>&#32;treeViewProjectTestModel)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentProgress&#32;=&#32;completionPercentPerProject&#32;*&#32;projectsHandled;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressThrottle.Run(_&#32;=&gt;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel.SetProgress(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentProgress,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$<emphasis role="stringliteral">&quot;{projectsHandled&#32;+&#32;1}/{dotNetProjectListLength}:&#32;{treeViewProjectTestModel.Item.AbsolutePath.NameWithExtension}&quot;</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cancellationToken.ThrowIfCancellationRequested();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;treeViewProject.LoadChildListAsync();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;projectsHandled++;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressThrottle.Run(_&#32;=&gt;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel.SetProgress(1,&#32;$<emphasis role="stringliteral">&quot;Finished&#32;test&#32;discovery:&#32;{dotNetSolutionModel.AbsolutePath.NameWithExtension}&quot;</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>.Empty);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel.Dispose();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a8f7a3264b20d02495d1a37cf6c65ade2">Task_SumEachProjectTestCount</link>();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(e&#32;is&#32;OperationCanceledException)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel.IsCancelled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentProgress&#32;=&#32;progressBarModel.GetProgress();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressThrottle.Run(_&#32;=&gt;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Set&#32;message&#32;2&#32;as&#32;the&#32;error&#32;instead&#32;so&#32;we&#32;can&#32;see&#32;the&#32;project...</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;...&#32;that&#32;it&#32;was&#32;discovering&#32;tests&#32;for&#32;when&#32;it&#32;threw&#32;exception?</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel.SetProgress(currentProgress,&#32;e.ToString());
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;progressBarModel.Dispose();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00275"/><link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a8f7a3264b20d02495d1a37cf6c65ade2">00275</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a8f7a3264b20d02495d1a37cf6c65ade2">Task_SumEachProjectTestCount</link>()
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dotNetSolutionState&#32;=&#32;_dotNetSolutionStateWrap.Value;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;dotNetSolutionModel&#32;=&#32;dotNetSolutionState.DotNetSolutionModel;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00279"/>00279 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dotNetSolutionModel&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;totalTestCount&#32;=&#32;0;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;notRanTestHashSet&#32;=&#32;ImmutableHashSet&lt;string&gt;.Empty;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine($<emphasis role="stringliteral">&quot;NoTestsTreeViewGroup.ChildList.Count:&#32;{NoTestsTreeViewGroup.ChildList.Count}&quot;</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_treeViewService.TryGetTreeViewContainer(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;out&#32;var&#32;treeViewContainer))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewContainer.RootNode&#32;is&#32;not&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_adhoc">TreeViewAdhoc</link>&#32;treeViewAdhoc)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;treeViewProject&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewProject&#32;is&#32;not&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_tree_view_project_test_model">TreeViewProjectTestModel</link>&#32;treeViewProjectTestModel)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalTestCount&#32;+=&#32;treeViewProjectTestModel.Item.TestNameFullyQualifiedList?.Count&#32;??&#32;0;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1aaa39101e98290e82e68df6ccb40348ef">MoveNodeToCorrectBranch</link>(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*if&#32;(treeViewProjectTestModel.Item.TestNameFullyQualifiedList&#32;is&#32;not&#32;null)</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00302"/>00302 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00303"/>00303 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(treeViewProjectTestModel.Item.TestNameFullyQualifiedList.Count&#32;&gt;&#32;0)</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00304"/>00304 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00305"/>00305 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContainsTestsTreeViewGroup.ChildList.Add(treeViewProjectTestModel);</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00306"/>00306 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00307"/>00307 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00308"/>00308 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00309"/>00309 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NoTestsTreeViewGroup.ChildList.Add(treeViewProjectTestModel);</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00310"/>00310 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00311"/>00311 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00312"/>00312 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00313"/>00313 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00314"/>00314 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(treeViewProjectTestModel.Item.TerminalCommandParsed&#32;is&#32;not&#32;null&#32;&amp;&amp;</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00315"/>00315 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.Item.TerminalCommandParsed.OutputCache.ToString().Contains(&quot;threw&#32;an&#32;exception&quot;))</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00316"/>00316 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00317"/>00317 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ThrewAnExceptionTreeViewGroup.ChildList.Add(treeViewProjectTestModel);</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00318"/>00318 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00319"/>00319 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00320"/>00320 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00321"/>00321 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotValidProjectForUnitTestTreeViewGroup.ChildList.Add(treeViewProjectTestModel);</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00322"/>00322 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00323"/>00323 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}*/</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewProjectTestModel.Item.TestNameFullyQualifiedList&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;output&#32;<emphasis role="keywordflow">in</emphasis>&#32;treeViewProjectTestModel.Item.TestNameFullyQualifiedList)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notRanTestHashSet&#32;=&#32;notRanTestHashSet.Add(output);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b0ad0fe3e513a2636475762d458c5f6">ContainsTestsTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b0ad0fe3e513a2636475762d458c5f6">ContainsTestsTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1ad1e893d940cfb2302e64e18cae2a57c3">ThrewAnExceptionTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1ad1e893d940cfb2302e64e18cae2a57c3">ThrewAnExceptionTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>.LinkChildren(<emphasis role="keyword">new</emphasis>(),&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;nextTreeViewAdhoc&#32;=&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_adhoc">TreeViewAdhoc</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_adhoc_1a3dd148b2cb6390af05ed84da0ad21857">ConstructTreeViewAdhoc</link>(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b0ad0fe3e513a2636475762d458c5f6">ContainsTestsTreeViewGroup</link>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a95d5030eafcebd03666e4e76bb47b677">NoTestsTreeViewGroup</link>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1ad1e893d940cfb2302e64e18cae2a57c3">ThrewAnExceptionTreeViewGroup</link>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1a4b1b4f8d5758b9820914dc1944d93116">NotValidProjectForUnitTestTreeViewGroup</link>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTreeViewAdhoc.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1a569ce774e5b109ccf8425149b18b3e02">LinkChildren</link>(<emphasis role="keyword">new</emphasis>(),&#32;nextTreeViewAdhoc.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.SetRoot(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;nextTreeViewAdhoc);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.WithAction(inState&#32;=&gt;&#32;inState&#32;with
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TotalTestCount&#32;=&#32;totalTestCount,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NotRanTestHashSet&#32;=&#32;notRanTestHashSet,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SolutionFilePath&#32;=&#32;dotNetSolutionModel.AbsolutePath.Value
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00364"/><link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1aaa39101e98290e82e68df6ccb40348ef">00364</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1_1_test_explorer_scheduler_1aaa39101e98290e82e68df6ccb40348ef">MoveNodeToCorrectBranch</link>(<link linkend="_class_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_models_1_1_tree_view_project_test_model">TreeViewProjectTestModel</link>&#32;treeViewProjectTestModel)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1aef3093ce691044a11c5b9969b4b2c29a">Parent</link>&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_treeViewService.TryGetTreeViewContainer(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;out&#32;var&#32;treeViewContainer))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;containsTestsTreeViewGroup</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containsTestsTreeViewGroupList&#32;=&#32;treeViewContainer.RootNode.ChildList
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Where(x&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;is&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_utils_1_1_tree_view_group">TreeViewGroup</link>&#32;tvg&#32;&amp;&amp;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tvg.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>&#32;==&#32;<emphasis role="stringliteral">&quot;Have&#32;tests&quot;</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(containsTestsTreeViewGroupList.Count()&#32;!=&#32;1)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;containsTestsTreeViewGroup&#32;=&#32;containsTestsTreeViewGroupList.Single();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;noTestsTreeViewGroup</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;noTestsTreeViewGroupList&#32;=&#32;treeViewContainer.RootNode.ChildList
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Where(x&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;is&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_utils_1_1_tree_view_group">TreeViewGroup</link>&#32;tvg&#32;&amp;&amp;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tvg.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>&#32;==&#32;<emphasis role="stringliteral">&quot;Have&#32;tests&quot;</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(noTestsTreeViewGroupList.Count()&#32;!=&#32;1)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;noTestsTreeViewGroup&#32;=&#32;noTestsTreeViewGroupList.Single();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00389"/>00389 
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;threwAnExceptionTreeViewGroup</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;threwAnExceptionTreeViewGroupList&#32;=&#32;treeViewContainer.RootNode.ChildList
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Where(x&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;is&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_utils_1_1_tree_view_group">TreeViewGroup</link>&#32;tvg&#32;&amp;&amp;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tvg.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>&#32;==&#32;<emphasis role="stringliteral">&quot;Projects&#32;that&#32;threw&#32;an&#32;exception&#32;during&#32;discovery&quot;</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(threwAnExceptionTreeViewGroupList.Count()&#32;!=&#32;1)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;threwAnExceptionTreeViewGroup&#32;=&#32;threwAnExceptionTreeViewGroupList.Single();&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;notValidProjectForUnitTestTreeViewGroup</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;notValidProjectForUnitTestTreeViewGroupList&#32;=&#32;treeViewContainer.RootNode.ChildList
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Where(x&#32;=&gt;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;is&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_utils_1_1_tree_view_group">TreeViewGroup</link>&#32;tvg&#32;&amp;&amp;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tvg.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>&#32;==&#32;<emphasis role="stringliteral">&quot;Not&#32;a&#32;test-project&quot;</emphasis>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(notValidProjectForUnitTestTreeViewGroupList.Count()&#32;!=&#32;1)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;notValidProjectForUnitTestTreeViewGroup&#32;=&#32;notValidProjectForUnitTestTreeViewGroupList.Single();
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1aef3093ce691044a11c5b9969b4b2c29a">Parent</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1a8b306a73a4bbf27fc2475e3deec43a89">ChildList</link>.Remove(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1aef3093ce691044a11c5b9969b4b2c29a">Parent</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1a569ce774e5b109ccf8425149b18b3e02">LinkChildren</link>(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1aef3093ce691044a11c5b9969b4b2c29a">Parent</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1a8b306a73a4bbf27fc2475e3deec43a89">ChildList</link>,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1aef3093ce691044a11c5b9969b4b2c29a">Parent</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1a8b306a73a4bbf27fc2475e3deec43a89">ChildList</link>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.ReRenderNode(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_no_type_1aef3093ce691044a11c5b9969b4b2c29a">Parent</link>);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>.TestNameFullyQualifiedList&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>.TestNameFullyQualifiedList.Count&#32;&gt;&#32;0)
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containsTestsTreeViewGroup.ChildList.Add(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containsTestsTreeViewGroup.LinkChildren(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containsTestsTreeViewGroup.ChildList,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;containsTestsTreeViewGroup.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.ReRenderNode(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;containsTestsTreeViewGroup);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noTestsTreeViewGroup.ChildList.Add(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noTestsTreeViewGroup.LinkChildren(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noTestsTreeViewGroup.ChildList,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noTestsTreeViewGroup.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.ReRenderNode(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;noTestsTreeViewGroup);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>.TerminalCommandParsed&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;treeViewProjectTestModel.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1_1_tree_view_with_type-1-g_1a4f46d99a34756894b183f9ce601825bc">Item</link>.TerminalCommandParsed.OutputCache.ToString().Contains(<emphasis role="stringliteral">&quot;threw&#32;an&#32;exception&quot;</emphasis>))
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;threwAnExceptionTreeViewGroup.ChildList.Add(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;threwAnExceptionTreeViewGroup.LinkChildren(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;threwAnExceptionTreeViewGroup.ChildList,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;threwAnExceptionTreeViewGroup.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.ReRenderNode(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;threwAnExceptionTreeViewGroup);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notValidProjectForUnitTestTreeViewGroup.ChildList.Add(treeViewProjectTestModel);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notValidProjectForUnitTestTreeViewGroup.LinkChildren(
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notValidProjectForUnitTestTreeViewGroup.ChildList,
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notValidProjectForUnitTestTreeViewGroup.ChildList);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_treeViewService.ReRenderNode(<link linkend="_namespace_luthetus_1_1_extensions_1_1_dot_net_1_1_test_explorers_1_1_states_1a13a87604012e3c931a408383412994df">TestExplorerState</link>.TreeViewTestExplorerKey,&#32;notValidProjectForUnitTestTreeViewGroup);
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00453"/>00453 &#32;&#32;&#32;&#32;}
<anchor xml:id="__test_explorer_scheduler_8_task_api_8cs_source_1l00454"/>00454 }
</programlisting></section>
