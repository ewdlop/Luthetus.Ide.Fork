<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__panel_group_8cs_source" xml:lang="en-US">
<title>PanelGroup.cs</title>
<indexterm><primary>Source/Lib/Common/Panels/Models/PanelGroup.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__panel_group_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__panel_group_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Microsoft.AspNetCore.Components.Web;
<anchor xml:id="__panel_group_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__panel_group_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_dynamics_1_1_models">Luthetus.Common.RazorLib.Dynamics.Models</link>;
<anchor xml:id="__panel_group_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_dimensions_1_1_models">Luthetus.Common.RazorLib.Dimensions.Models</link>;
<anchor xml:id="__panel_group_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__panel_group_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_panels_1_1_states">Luthetus.Common.RazorLib.Panels.States</link>;
<anchor xml:id="__panel_group_8cs_source_1l00008"/>00008 
<anchor xml:id="__panel_group_8cs_source_1l00009"/>00009 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_panels_1_1_models">Luthetus.Common.RazorLib.Panels.Models</link>;
<anchor xml:id="__panel_group_8cs_source_1l00010"/>00010 
<anchor xml:id="__panel_group_8cs_source_1l00011"/>00011 <emphasis role="keyword">public</emphasis>&#32;record&#32;PanelGroup(
<anchor xml:id="__panel_group_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;PanelGroup&gt;&#32;Key,
<anchor xml:id="__panel_group_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;Panel&gt;&#32;ActiveTabKey,
<anchor xml:id="__panel_group_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ElementDimensions&#32;ElementDimensions,
<anchor xml:id="__panel_group_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImmutableArray&lt;IPanelTab&gt;&#32;TabList)
<anchor xml:id="__panel_group_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;:&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_dynamics_1_1_models_1_1_i_tab_group">ITabGroup</link>
<anchor xml:id="__panel_group_8cs_source_1l00017"/>00017 {
<anchor xml:id="__panel_group_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IDispatcher&#32;Dispatcher&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}&#32;=&#32;<emphasis role="keyword">null</emphasis>!;
<anchor xml:id="__panel_group_8cs_source_1l00023"/>00023 
<anchor xml:id="__panel_group_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GetIsActive(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_dynamics_1_1_models_1_1_i_tab">ITab</link>&#32;tab)
<anchor xml:id="__panel_group_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tab&#32;is&#32;not&#32;IPanelTab&#32;panelTab)
<anchor xml:id="__panel_group_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__panel_group_8cs_source_1l00028"/>00028 
<anchor xml:id="__panel_group_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ActiveTabKey&#32;==&#32;panelTab.Key;
<anchor xml:id="__panel_group_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00031"/>00031 
<anchor xml:id="__panel_group_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;OnClickAsync(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_dynamics_1_1_models_1_1_i_tab">ITab</link>&#32;tab,&#32;MouseEventArgs&#32;mouseEventArgs)
<anchor xml:id="__panel_group_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tab&#32;is&#32;not&#32;IPanelTab&#32;panelTab)
<anchor xml:id="__panel_group_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__panel_group_8cs_source_1l00036"/>00036 
<anchor xml:id="__panel_group_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GetIsActive(tab))
<anchor xml:id="__panel_group_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_panels_1_1_states_1a3e69a06f395780138ff06e862f45ee3c">PanelState</link>.SetActivePanelTabAction(Key,&#32;Key&lt;Panel&gt;.Empty));
<anchor xml:id="__panel_group_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__panel_group_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_panels_1_1_states_1a3e69a06f395780138ff06e862f45ee3c">PanelState</link>.SetActivePanelTabAction(Key,&#32;panelTab.Key));
<anchor xml:id="__panel_group_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__panel_group_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__panel_group_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00044"/>00044 
<anchor xml:id="__panel_group_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetDynamicCss(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_dynamics_1_1_models_1_1_i_tab">ITab</link>&#32;tab)
<anchor xml:id="__panel_group_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
<anchor xml:id="__panel_group_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00049"/>00049 
<anchor xml:id="__panel_group_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;CloseAsync(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_dynamics_1_1_models_1_1_i_tab">ITab</link>&#32;tab)
<anchor xml:id="__panel_group_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tab&#32;is&#32;not&#32;IPanelTab&#32;panelTab)
<anchor xml:id="__panel_group_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__panel_group_8cs_source_1l00054"/>00054 
<anchor xml:id="__panel_group_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dispatcher.Dispatch(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_panels_1_1_states_1a3e69a06f395780138ff06e862f45ee3c">PanelState</link>.DisposePanelTabAction(Key,&#32;panelTab.Key));
<anchor xml:id="__panel_group_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__panel_group_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00058"/>00058 
<anchor xml:id="__panel_group_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&#32;CloseAllAsync()
<anchor xml:id="__panel_group_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localTabList&#32;=&#32;TabList;
<anchor xml:id="__panel_group_8cs_source_1l00062"/>00062 
<anchor xml:id="__panel_group_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;tab&#32;<emphasis role="keywordflow">in</emphasis>&#32;localTabList)
<anchor xml:id="__panel_group_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;CloseAsync(tab).ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__panel_group_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00068"/>00068 
<anchor xml:id="__panel_group_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&#32;CloseOthersAsync(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_dynamics_1_1_models_1_1_i_tab">ITab</link>&#32;safeTab)
<anchor xml:id="__panel_group_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;localTabList&#32;=&#32;TabList;
<anchor xml:id="__panel_group_8cs_source_1l00072"/>00072 
<anchor xml:id="__panel_group_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(safeTab&#32;is&#32;not&#32;IPanelTab&#32;safePanelTab)
<anchor xml:id="__panel_group_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__panel_group_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__panel_group_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Invoke&#32;&apos;OnClickAsync&apos;&#32;to&#32;set&#32;the&#32;active&#32;tab&#32;to&#32;the&#32;&quot;safe&#32;tab&quot;</emphasis>
<anchor xml:id="__panel_group_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;OnClickAsync&#32;does&#32;not&#32;currently&#32;use&#32;its&#32;mouse&#32;event&#32;args&#32;argument.</emphasis>
<anchor xml:id="__panel_group_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;OnClickAsync(safeTab,&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__panel_group_8cs_source_1l00079"/>00079 
<anchor xml:id="__panel_group_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;tab&#32;<emphasis role="keywordflow">in</emphasis>&#32;localTabList)
<anchor xml:id="__panel_group_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__panel_group_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;shouldClose&#32;=&#32;safePanelTab.Key&#32;!=&#32;tab.Key;
<anchor xml:id="__panel_group_8cs_source_1l00083"/>00083 
<anchor xml:id="__panel_group_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shouldClose)
<anchor xml:id="__panel_group_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;CloseAsync(tab).ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__panel_group_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="__panel_group_8cs_source_1l00088"/>00088 }
</programlisting></section>
