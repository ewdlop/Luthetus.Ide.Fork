<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__background_task_tests_8cs_source" xml:lang="en-US">
<title>BackgroundTaskTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/BackgroundTasks/Models/BackgroundTaskTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__background_task_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__background_task_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_tests_8cs_source_1l00003"/>00003 
<anchor xml:id="__background_task_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models">Luthetus.Common.Tests.Basis.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_tests_8cs_source_1l00005"/>00005 
<anchor xml:id="__background_task_tests_8cs_source_1l00009"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_tests">00009</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_tests">BackgroundTaskTests</link>
<anchor xml:id="__background_task_tests_8cs_source_1l00010"/>00010 {
<anchor xml:id="__background_task_tests_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__background_task_tests_8cs_source_1l00019"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_tests_1a3d53b11f5aba8549aa5a43a7c5f894eb">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_tests_1a3d53b11f5aba8549aa5a43a7c5f894eb">Constructor</link>()
<anchor xml:id="__background_task_tests_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_tests_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;taskKey&#32;=&#32;Key&lt;IBackgroundTask&gt;.NewKey();
<anchor xml:id="__background_task_tests_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;taskQueueKey&#32;=&#32;Key&lt;IBackgroundTaskQueue&gt;.NewKey();
<anchor xml:id="__background_task_tests_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;name&#32;=&#32;<emphasis role="stringliteral">&quot;Write&#32;\&quot;Hello&#32;World!\&quot;&#32;to&#32;the&#32;console&quot;</emphasis>;
<anchor xml:id="__background_task_tests_8cs_source_1l00024"/>00024 
<anchor xml:id="__background_task_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTask&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task">BackgroundTask</link>(
<anchor xml:id="__background_task_tests_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;taskKey,
<anchor xml:id="__background_task_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;taskQueueKey,
<anchor xml:id="__background_task_tests_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name,
<anchor xml:id="__background_task_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__background_task_tests_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_tests_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Console.WriteLine(<emphasis role="stringliteral">&quot;Hello&#32;World!&quot;</emphasis>);
<anchor xml:id="__background_task_tests_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__background_task_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__background_task_tests_8cs_source_1l00034"/>00034 
<anchor xml:id="__background_task_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(taskKey,&#32;backgroundTask.BackgroundTaskKey);
<anchor xml:id="__background_task_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(taskQueueKey,&#32;backgroundTask.QueueKey);
<anchor xml:id="__background_task_tests_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(name,&#32;backgroundTask.Name);
<anchor xml:id="__background_task_tests_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_tests_8cs_source_1l00039"/>00039 
<anchor xml:id="__background_task_tests_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__background_task_tests_8cs_source_1l00046"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_tests_1a661e65b0df8e6f7983a40b30660a575c">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_tests_1a661e65b0df8e6f7983a40b30660a575c">InvokeWorkItem</link>()
<anchor xml:id="__background_task_tests_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_tests_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;number&#32;=&#32;0;
<anchor xml:id="__background_task_tests_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(0,&#32;number);
<anchor xml:id="__background_task_tests_8cs_source_1l00050"/>00050 
<anchor xml:id="__background_task_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTaskKey&#32;=&#32;Key&lt;IBackgroundTask&gt;.NewKey();
<anchor xml:id="__background_task_tests_8cs_source_1l00052"/>00052 
<anchor xml:id="__background_task_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTask&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task">BackgroundTask</link>(
<anchor xml:id="__background_task_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundTaskKey,
<anchor xml:id="__background_task_tests_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>(),
<anchor xml:id="__background_task_tests_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Abc&quot;</emphasis>,
<anchor xml:id="__background_task_tests_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;
<anchor xml:id="__background_task_tests_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_tests_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;+=&#32;1;&#32;from&#32;the&#32;task.</emphasis>
<anchor xml:id="__background_task_tests_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number++;
<anchor xml:id="__background_task_tests_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;Task.CompletedTask;
<anchor xml:id="__background_task_tests_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__background_task_tests_8cs_source_1l00063"/>00063 
<anchor xml:id="__background_task_tests_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;backgroundTask.HandleEvent(CancellationToken.None);
<anchor xml:id="__background_task_tests_8cs_source_1l00065"/>00065 
<anchor xml:id="__background_task_tests_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;number);
<anchor xml:id="__background_task_tests_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_tests_8cs_source_1l00068"/>00068 }
</programlisting></section>
