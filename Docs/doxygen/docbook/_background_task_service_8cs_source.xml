<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__background_task_service_8cs_source" xml:lang="en-US">
<title>BackgroundTaskService.cs</title>
<indexterm><primary>Source/Lib/Common/BackgroundTasks/Models/BackgroundTaskService.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__background_task_service_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__background_task_service_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__background_task_service_8cs_source_1l00003"/>00003 
<anchor xml:id="__background_task_service_8cs_source_1l00004"/>00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_service_8cs_source_1l00005"/>00005 
<anchor xml:id="__background_task_service_8cs_source_1l00006"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service">00006</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service">BackgroundTaskService</link>&#32;:&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>
<anchor xml:id="__background_task_service_8cs_source_1l00007"/>00007 {
<anchor xml:id="__background_task_service_8cs_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;Dictionary&lt;Key&lt;IBackgroundTaskQueue&gt;,&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>&gt;&#32;_queueContainerMap&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__background_task_service_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;Dictionary&lt;Key&lt;IBackgroundTask&gt;,&#32;TaskCompletionSource&gt;&#32;_taskCompletionSourceMap&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__background_task_service_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">object</emphasis>&#32;_taskCompletionSourceLock&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__background_task_service_8cs_source_1l00028"/>00028 
<anchor xml:id="__background_task_service_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_enqueuesAreDisabled;
<anchor xml:id="__background_task_service_8cs_source_1l00030"/>00030 
<anchor xml:id="__background_task_service_8cs_source_1l00031"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ad02e95f1c438823df807e782c52e85c6">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ImmutableArray&lt;IBackgroundTaskQueue&gt;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ad02e95f1c438823df807e782c52e85c6">Queues</link>&#32;=&gt;&#32;_queueContainerMap.Values.Select(x&#32;=&gt;&#32;(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_queue">IBackgroundTaskQueue</link>)x).ToImmutableArray();
<anchor xml:id="__background_task_service_8cs_source_1l00032"/>00032 
<anchor xml:id="__background_task_service_8cs_source_1l00033"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a5f493c1ec5346580ba29627dcfbe3446">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a5f493c1ec5346580ba29627dcfbe3446">Enqueue</link>(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link>&#32;backgroundTask)
<anchor xml:id="__background_task_service_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Could&#32;there&#32;be&#32;concurrency&#32;issues&#32;regarding&#32;&apos;_enqueuesAreDisabled&apos;?&#32;(2023-11-19)</emphasis>
<anchor xml:id="__background_task_service_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_enqueuesAreDisabled)
<anchor xml:id="__background_task_service_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__background_task_service_8cs_source_1l00038"/>00038 
<anchor xml:id="__background_task_service_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_queueContainerMap[backgroundTask.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_1aa2f741e09d6826b4dcbe732fe052790d">QueueKey</link>]
<anchor xml:id="__background_task_service_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Enqueue(backgroundTask);
<anchor xml:id="__background_task_service_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00042"/>00042 
<anchor xml:id="__background_task_service_8cs_source_1l00043"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1aa6a1cb52c68a141dcdd8d686e384fcaa">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1aa6a1cb52c68a141dcdd8d686e384fcaa">Enqueue</link>(Key&lt;IBackgroundTask&gt;&#32;taskKey,&#32;Key&lt;IBackgroundTaskQueue&gt;&#32;queueKey,&#32;<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;Func&lt;Task&gt;&#32;runFunc)
<anchor xml:id="__background_task_service_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a5f493c1ec5346580ba29627dcfbe3446">Enqueue</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task">BackgroundTask</link>(taskKey,&#32;queueKey,&#32;name,&#32;runFunc));
<anchor xml:id="__background_task_service_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00048"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1aa1983ca7f021cf0cbf9c25d6f6550d25">00048</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1aa1983ca7f021cf0cbf9c25d6f6550d25">EnqueueAsync</link>(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link>&#32;backgroundTask)
<anchor xml:id="__background_task_service_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Could&#32;there&#32;be&#32;concurrency&#32;issues&#32;regarding&#32;&apos;_enqueuesAreDisabled&apos;?&#32;(2023-11-19)</emphasis>
<anchor xml:id="__background_task_service_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_enqueuesAreDisabled)
<anchor xml:id="__background_task_service_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Task.CompletedTask;
<anchor xml:id="__background_task_service_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TaskCompletionSource&#32;taskCompletionSource&#32;=&#32;<emphasis role="keyword">new</emphasis>();
<anchor xml:id="__background_task_service_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_taskCompletionSourceLock)
<anchor xml:id="__background_task_service_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_taskCompletionSourceMap.ContainsKey(backgroundTask.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_1a44fbf9cbedc72ba1587a5021720c015c">BackgroundTaskKey</link>))
<anchor xml:id="__background_task_service_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;existingTaskCompletionSource&#32;=&#32;_taskCompletionSourceMap[backgroundTask.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_1a44fbf9cbedc72ba1587a5021720c015c">BackgroundTaskKey</link>];
<anchor xml:id="__background_task_service_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!existingTaskCompletionSource.Task.IsCompleted)
<anchor xml:id="__background_task_service_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;existingTaskCompletionSource.SetException(<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException(<emphasis role="stringliteral">&quot;SIMULATED&#32;EXCEPTION&quot;</emphasis>));
<anchor xml:id="__background_task_service_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;re-use&#32;of&#32;the&#32;key&#32;is&#32;not&#32;an&#32;issue,&#32;so&#32;long&#32;as&#32;the&#32;previous&#32;usage&#32;has&#32;completed</emphasis>
<anchor xml:id="__background_task_service_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_taskCompletionSourceMap[backgroundTask.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_1a44fbf9cbedc72ba1587a5021720c015c">BackgroundTaskKey</link>]&#32;=&#32;taskCompletionSource;
<anchor xml:id="__background_task_service_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__background_task_service_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_taskCompletionSourceMap.Add(backgroundTask.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_1a44fbf9cbedc72ba1587a5021720c015c">BackgroundTaskKey</link>,&#32;taskCompletionSource);
<anchor xml:id="__background_task_service_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00075"/>00075 
<anchor xml:id="__background_task_service_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_queueContainerMap[backgroundTask.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_1aa2f741e09d6826b4dcbe732fe052790d">QueueKey</link>]
<anchor xml:id="__background_task_service_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Enqueue(backgroundTask);
<anchor xml:id="__background_task_service_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;taskCompletionSource.Task;
<anchor xml:id="__background_task_service_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00081"/>00081 
<anchor xml:id="__background_task_service_8cs_source_1l00082"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a6080c11be1665e138a6ddbcfe4ca7520">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Task&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a6080c11be1665e138a6ddbcfe4ca7520">EnqueueAsync</link>(Key&lt;IBackgroundTask&gt;&#32;taskKey,&#32;Key&lt;IBackgroundTaskQueue&gt;&#32;queueKey,&#32;<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;Func&lt;Task&gt;&#32;runFunc)
<anchor xml:id="__background_task_service_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1aa1983ca7f021cf0cbf9c25d6f6550d25">EnqueueAsync</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task">BackgroundTask</link>(taskKey,&#32;queueKey,&#32;name,&#32;runFunc));
<anchor xml:id="__background_task_service_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00087"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ad9b22e4f42ddec862974f603a329bad0">00087</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ad9b22e4f42ddec862974f603a329bad0">CompleteTaskCompletionSource</link>(Key&lt;IBackgroundTask&gt;&#32;backgroundTaskKey)
<anchor xml:id="__background_task_service_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_taskCompletionSourceLock)
<anchor xml:id="__background_task_service_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_taskCompletionSourceMap.ContainsKey(backgroundTaskKey))
<anchor xml:id="__background_task_service_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;existingTaskCompletionSource&#32;=&#32;_taskCompletionSourceMap[backgroundTaskKey];
<anchor xml:id="__background_task_service_8cs_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!existingTaskCompletionSource.Task.IsCompleted)
<anchor xml:id="__background_task_service_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;existingTaskCompletionSource.SetResult();
<anchor xml:id="__background_task_service_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_taskCompletionSourceMap.Remove(backgroundTaskKey);
<anchor xml:id="__background_task_service_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00104"/>00104 
<anchor xml:id="__background_task_service_8cs_source_1l00105"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ad2a6426d1c44ae419c43f6205171d2fe">00105</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link>?&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ad2a6426d1c44ae419c43f6205171d2fe">Dequeue</link>(Key&lt;IBackgroundTaskQueue&gt;&#32;queueKey)
<anchor xml:id="__background_task_service_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queue&#32;=&#32;_queueContainerMap[queueKey];
<anchor xml:id="__background_task_service_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;queue.DequeueOrDefault();
<anchor xml:id="__background_task_service_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00110"/>00110 
<anchor xml:id="__background_task_service_8cs_source_1l00111"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a376eb78e33a5d2660398e6773ac5c05f">00111</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&lt;IBackgroundTask?&gt;&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a376eb78e33a5d2660398e6773ac5c05f">DequeueAsync</link>(
<anchor xml:id="__background_task_service_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTaskQueue&gt;&#32;queueKey,
<anchor xml:id="__background_task_service_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CancellationToken&#32;cancellationToken)
<anchor xml:id="__background_task_service_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queue&#32;=&#32;_queueContainerMap[queueKey];
<anchor xml:id="__background_task_service_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;queue.DequeueSemaphoreSlim.WaitAsync();
<anchor xml:id="__background_task_service_8cs_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;queue.DequeueOrDefault();
<anchor xml:id="__background_task_service_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00119"/>00119 
<anchor xml:id="__background_task_service_8cs_source_1l00120"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1aca1409ec1ed92ef47712c39749393e3e">00120</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1aca1409ec1ed92ef47712c39749393e3e">RegisterQueue</link>(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_queue">IBackgroundTaskQueue</link>&#32;queue)
<anchor xml:id="__background_task_service_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_queueContainerMap.Add(queue.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_queue_1ab0a4a6223a9a5633d5b318cb37ee0ff2">Key</link>,&#32;(<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_queue">BackgroundTaskQueue</link>)queue);
<anchor xml:id="__background_task_service_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00124"/>00124 
<anchor xml:id="__background_task_service_8cs_source_1l00125"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a09f5c52e293f3544900d667991f9f7f7">00125</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a09f5c52e293f3544900d667991f9f7f7">SetExecutingBackgroundTask</link>(
<anchor xml:id="__background_task_service_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;IBackgroundTaskQueue&gt;&#32;queueKey,
<anchor xml:id="__background_task_service_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task">IBackgroundTask</link>?&#32;backgroundTask)
<anchor xml:id="__background_task_service_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queue&#32;=&#32;_queueContainerMap[queueKey];
<anchor xml:id="__background_task_service_8cs_source_1l00130"/>00130 
<anchor xml:id="__background_task_service_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue.ExecutingBackgroundTask&#32;=&#32;backgroundTask;
<anchor xml:id="__background_task_service_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_service_8cs_source_1l00134"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a2ebdb6c809ace95ff6e778324175ac7f">00134</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_queue">IBackgroundTaskQueue</link>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1a2ebdb6c809ace95ff6e778324175ac7f">GetQueue</link>(Key&lt;IBackgroundTaskQueue&gt;&#32;queueKey)
<anchor xml:id="__background_task_service_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_queueContainerMap[queueKey];
<anchor xml:id="__background_task_service_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00138"/>00138 
<anchor xml:id="__background_task_service_8cs_source_1l00139"/><link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ac527f844c98b91ba9b70da838033a603">00139</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;async&#32;Task&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_background_task_service_1ac527f844c98b91ba9b70da838033a603">StopAsync</link>(CancellationToken&#32;cancellationToken)
<anchor xml:id="__background_task_service_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_enqueuesAreDisabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__background_task_service_8cs_source_1l00142"/>00142 
<anchor xml:id="__background_task_service_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Polling&#32;solution&#32;for&#32;now,&#32;perhaps&#32;change&#32;to&#32;a&#32;more&#32;optimal&#32;solution?&#32;(2023-11-19)</emphasis>
<anchor xml:id="__background_task_service_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(_queueContainerMap.Values.SelectMany(x&#32;=&gt;&#32;x.<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_queue_1a15a097076aac6a06570b70a8671e9e22">BackgroundTaskList</link>).Any())
<anchor xml:id="__background_task_service_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_service_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;Task.Delay(TimeSpan.FromMilliseconds(100),&#32;cancellationToken).ConfigureAwait(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__background_task_service_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_service_8cs_source_1l00149"/>00149 }
</programlisting></section>
