<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__text_editor_model_extension_methods_8cs_source" xml:lang="en-US">
<title>TextEditorModelExtensionMethods.cs</title>
<indexterm><primary>Source/Lib/TextEditor/TextEditors/Models/TextEditorModelExtensionMethods.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models">Luthetus.TextEditor.RazorLib.Characters.Models</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_facts">Luthetus.TextEditor.RazorLib.CompilerServices.Facts</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models">Luthetus.TextEditor.RazorLib.Cursors.Models</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_exceptions">Luthetus.TextEditor.RazorLib.Exceptions</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00006"/>00006 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models">Luthetus.TextEditor.RazorLib.Lexers.Models</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00007"/>00007 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models">Luthetus.TextEditor.RazorLib.Rows.Models</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00008"/>00008 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals">Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00009"/>00009 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00010"/>00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models">Luthetus.TextEditor.RazorLib.TextEditors.Models</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00011"/>00011 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00012"/>00012 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TextEditorModelExtensionMethods
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00013"/>00013 {
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetLineLength(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;includeLineEndingCharacters&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>.Any())
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00022"/>00022 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineIndex&#32;&gt;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>.Count&#32;-&#32;1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex&#32;=&#32;model.LineEndList.Count&#32;-&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00025"/>00025 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineIndex&#32;&lt;&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex&#32;=&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00028"/>00028 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;line&#32;=&#32;model.GetLineInformation(lineIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineLengthWithLineEndings&#32;=&#32;line.EndPositionIndexExclusive&#32;-&#32;line.StartPositionIndexInclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00031"/>00031 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(includeLineEndingCharacters)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lineLengthWithLineEndings;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00034"/>00034 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lineLengthWithLineEndings&#32;-&#32;line.UpperLineEnd.LineEndKind.AsCharacters().Length;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00037"/>00037 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;RichCharacter[][]&#32;GetLineRichCharacterRange(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startingLineIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineCountAvailable&#32;=&#32;model.LineEndList.Count&#32;-&#32;startingLineIndex;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00050"/>00050 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineCountToReturn&#32;=&#32;count&#32;&lt;&#32;lineCountAvailable
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;count
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;lineCountAvailable;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00054"/>00054 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endingLineIndexExclusive&#32;=&#32;startingLineIndex&#32;+&#32;lineCountToReturn;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;RichCharacter[lineCountToReturn][];
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00057"/>00057 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineCountToReturn&#32;&lt;&#32;0&#32;||&#32;startingLineIndex&#32;&lt;&#32;0&#32;||&#32;endingLineIndexExclusive&#32;&lt;&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lineList;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00060"/>00060 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;addIndex&#32;=&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00062"/>00062 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;startingLineIndex;&#32;i&#32;&lt;&#32;endingLineIndexExclusive;&#32;i++)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Previous&#32;line&apos;s&#32;end-position-exclusive&#32;is&#32;this&#32;row&apos;s&#32;start.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;startOfLineInclusive&#32;=&#32;model.GetLineInformation(i).StartPositionIndexInclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;endOfLineExclusive&#32;=&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[i].EndPositionIndexExclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00068"/>00068 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;LINQ&#32;used&#32;in&#32;a&#32;hot&#32;path&#32;(the&#32;virtualization&#32;invokes&#32;this&#32;method)</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;line&#32;=&#32;model.RichCharacterList
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Skip(startOfLineInclusive)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Take(endOfLineExclusive&#32;-&#32;startOfLineInclusive)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.ToArray();
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00074"/>00074 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineList[addIndex++]&#32;=&#32;line;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00077"/>00077 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lineList;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00080"/>00080 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetTabCountOnSameLineBeforeCursor(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;columnIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;line&#32;=&#32;model.GetLineInformation(lineIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00084"/>00084 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertColumnIndex(line,&#32;columnIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00086"/>00086 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tabs&#32;=&#32;model.TabKeyPositionList
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.SkipWhile(positionIndex&#32;=&gt;&#32;positionIndex&#32;&lt;&#32;line.StartPositionIndexInclusive)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.TakeWhile(positionIndex&#32;=&gt;&#32;positionIndex&#32;&lt;&#32;line.StartPositionIndexInclusive&#32;+&#32;columnIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00090"/>00090 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tabs.Count();
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00093"/>00093 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetAllText(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a4ad582e8c5c47d661a4731eb6f1492a4">AllText</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00101"/>00101 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetPositionIndex(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b">TextEditorCursor</link>&#32;cursor)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetPositionIndex(cursor.LineIndex,&#32;cursor.ColumnIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00106"/>00106 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetPositionIndex(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;TextEditorCursorModifier&#32;cursorModifier)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetPositionIndex(cursorModifier.<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1_1_text_editor_cursor_modifier_1aff8d62bff426176b2b0c4914ec8e5fb6">LineIndex</link>,&#32;cursorModifier.<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1_1_text_editor_cursor_modifier_1a714c1e4d17f70d32ac817c2977869aca">ColumnIndex</link>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00111"/>00111 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetPositionIndex(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;columnIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;line&#32;=&#32;model.GetLineInformation(lineIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00115"/>00115 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertColumnIndex(line,&#32;columnIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00117"/>00117 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;line.StartPositionIndexInclusive&#32;+&#32;columnIndex;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00120"/>00120 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;columnIndex)&#32;GetLineAndColumnIndicesFromPositionIndex(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineInformation&#32;=&#32;model.GetLineInformationFromPositionIndex(positionIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00126"/>00126 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineInformation.Index,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionIndex&#32;-&#32;lineInformation.StartPositionIndexInclusive);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00131"/>00131 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;GetCharacter(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertPositionIndex(positionIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00138"/>00138 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(positionIndex&#32;==&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a5aa04acdc06f54c9a571020753713d78">CharCount</link>)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ParserFacts.END_OF_FILE;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00141"/>00141 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a7c34c6b3ec3ad1053ac3c46af430b627">RichCharacterList</link>[positionIndex].<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1_1_rich_character_1a2526cb2f6cf8844d2e1795fa80147de5">Value</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00144"/>00144 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetString(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;positionIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertPositionIndex(positionIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertCount(count);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00152"/>00152 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;string(model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a7c34c6b3ec3ad1053ac3c46af430b627">RichCharacterList</link>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Skip(positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Take(count)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Select(x&#32;=&gt;&#32;x.Value)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.ToArray());
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00159"/>00159 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetLineTextRange(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertCount(count);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00163"/>00163 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;startPositionIndexInclusive&#32;=&#32;model.GetPositionIndex(lineIndex,&#32;0);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lastLineIndexExclusive&#32;=&#32;lineIndex&#32;+&#32;count;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;endPositionIndexExclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00167"/>00167 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lastLineIndexExclusive&#32;&gt;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a2b238e94a5e679a44f9b902648b246d4">LineCount</link>&#32;-&#32;1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endPositionIndexExclusive&#32;=&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a5aa04acdc06f54c9a571020753713d78">CharCount</link>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endPositionIndexExclusive&#32;=&#32;model.GetPositionIndex(lastLineIndexExclusive,&#32;0);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00176"/>00176 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetString(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;startPositionIndexInclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;endPositionIndexExclusive&#32;-&#32;startPositionIndexInclusive);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00181"/>00181 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>?&#32;GetWordTextSpan(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;previousCharacter&#32;=&#32;model.GetCharacter(positionIndex&#32;-&#32;1);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentCharacter&#32;=&#32;model.GetCharacter(positionIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00191"/>00191 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;previousCharacterKind&#32;=&#32;CharacterKindHelper.CharToCharacterKind(previousCharacter);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentCharacterKind&#32;=&#32;CharacterKindHelper.CharToCharacterKind(currentCharacter);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00194"/>00194 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineInformation&#32;=&#32;model.GetLineInformationFromPositionIndex(positionIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;columnIndex&#32;=&#32;positionIndex&#32;-&#32;lineInformation.StartPositionIndexInclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00197"/>00197 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previousCharacterKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.LetterOrDigit&#32;&amp;&amp;&#32;currentCharacterKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.LetterOrDigit)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordColumnIndexStartInclusive&#32;=&#32;model.GetColumnIndexOfCharacterWithDifferingKind(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineInformation.Index,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00204"/>00204 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordColumnIndexStartInclusive&#32;==&#32;-1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexStartInclusive&#32;=&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00207"/>00207 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordColumnIndexEndExclusive&#32;=&#32;model.GetColumnIndexOfCharacterWithDifferingKind(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineInformation.Index,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00212"/>00212 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordColumnIndexEndExclusive&#32;==&#32;-1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexEndExclusive&#32;=&#32;model.GetLineLength(lineInformation.Index);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00215"/>00215 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexStartInclusive&#32;+&#32;lineInformation.StartPositionIndexInclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexEndExclusive&#32;+&#32;lineInformation.StartPositionIndexInclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a430723bab3c99d649428a43362190b63">ResourceUri</link>,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.GetAllText());
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentCharacterKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.LetterOrDigit)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordColumnIndexEndExclusive&#32;=&#32;model.GetColumnIndexOfCharacterWithDifferingKind(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineInformation.Index,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00229"/>00229 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordColumnIndexEndExclusive&#32;==&#32;-1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexEndExclusive&#32;=&#32;model.GetLineLength(lineInformation.Index);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00232"/>00232 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex&#32;+&#32;lineInformation.StartPositionIndexInclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexEndExclusive&#32;+&#32;lineInformation.StartPositionIndexInclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a430723bab3c99d649428a43362190b63">ResourceUri</link>,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.GetAllText());
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previousCharacterKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.LetterOrDigit)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordColumnIndexStartInclusive&#32;=&#32;model.GetColumnIndexOfCharacterWithDifferingKind(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineInformation.Index,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00246"/>00246 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordColumnIndexStartInclusive&#32;==&#32;-1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexStartInclusive&#32;=&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00249"/>00249 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexStartInclusive&#32;+&#32;lineInformation.StartPositionIndexInclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex&#32;+&#32;lineInformation.StartPositionIndexInclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a430723bab3c99d649428a43362190b63">ResourceUri</link>,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.GetAllText());
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00257"/>00257 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00260"/>00260 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ImmutableArray&lt;TextEditorTextSpan&gt;&#32;FindMatches(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">string</emphasis>&#32;query)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;text&#32;=&#32;model.GetAllText();
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;matchedTextSpans&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;TextEditorTextSpan&gt;();
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00265"/>00265 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;outerI&#32;=&#32;0;&#32;outerI&#32;&lt;&#32;text.Length;&#32;outerI++)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(outerI&#32;+&#32;query.Length&#32;&lt;=&#32;text.Length)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;innerI&#32;=&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;innerI&#32;&lt;&#32;query.Length;&#32;innerI++)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(text[outerI&#32;+&#32;innerI]&#32;!=&#32;query[innerI])
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00276"/>00276 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(innerI&#32;==&#32;query.Length)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Then&#32;the&#32;entire&#32;query&#32;was&#32;matched</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matchedTextSpans.Add(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outerI,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outerI&#32;+&#32;innerI,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">byte</emphasis>)<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1a733b35c261ccafa92c148d4342b12b5c">FindOverlayDecorationKind</link>.LongestCommonSubsequence,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a430723bab3c99d649428a43362190b63">ResourceUri</link>,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text));
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00289"/>00289 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;matchedTextSpans.ToImmutableArray();
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00292"/>00292 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a0a649b77578e8c8d38e8878e8cec526c">LineInformation</link>&#32;GetLineInformation(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00308"/>00308 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertLineIndex(lineIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00310"/>00310 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LineEnd&#32;GetLineEndLower(<emphasis role="keywordtype">int</emphasis>&#32;lineIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Large&#32;index?&#32;Then&#32;set&#32;the&#32;index&#32;to&#32;the&#32;last&#32;index.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex&#32;=&#32;Math.Min(lineIndex,&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>.Count&#32;-&#32;1);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00315"/>00315 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Small&#32;index?&#32;Then&#32;return&#32;StartOfFile.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineIndex&#32;&lt;=&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>(0,&#32;0,&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a83f8dd16ec7d401a6e808ca0e480e803">LineEndKind</link>.StartOfFile);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00319"/>00319 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In-range&#32;index?&#32;Then&#32;return&#32;the&#32;previous&#32;line&apos;s&#32;line&#32;ending.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[lineIndex&#32;-&#32;1];
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00323"/>00323 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LineEnd&#32;GetLineEndUpper(<emphasis role="keywordtype">int</emphasis>&#32;lineIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Large&#32;index?&#32;Then&#32;set&#32;the&#32;index&#32;to&#32;the&#32;last&#32;index.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex&#32;=&#32;Math.Min(lineIndex,&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>.Count&#32;-&#32;1);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00328"/>00328 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Small&#32;index?&#32;Then&#32;return&#32;the&#32;first&#32;LineEnd</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineIndex&#32;&lt;=&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[0];
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00332"/>00332 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In-range&#32;index?&#32;Then&#32;return&#32;the&#32;LineEnd&#32;at&#32;that&#32;index.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[lineIndex];
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineEndLower&#32;=&#32;GetLineEndLower(lineIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineEndUpper&#32;=&#32;GetLineEndUpper(lineIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00339"/>00339 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a0a649b77578e8c8d38e8878e8cec526c">LineInformation</link>(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineEndLower.EndPositionIndexExclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineEndUpper.EndPositionIndexExclusive,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineEndLower,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineEndUpper);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00347"/>00347 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a0a649b77578e8c8d38e8878e8cec526c">LineInformation</link>&#32;GetLineInformationFromPositionIndex(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00349"/>00349 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertPositionIndex(positionIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00351"/>00351 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetLineIndexFromPositionIndex()
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;StartOfFile</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[0].EndPositionIndexExclusive&#32;&gt;&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00357"/>00357 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;EndOfFile</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[^1].EndPositionIndexExclusive&#32;&lt;=&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.LineEndList.Count&#32;-&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00361"/>00361 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In-between</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>.Count;&#32;i++)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineEndTuple&#32;=&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[i];
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00366"/>00366 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineEndTuple.EndPositionIndexExclusive&#32;&gt;&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00370"/>00370 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fallback&#32;return&#32;StartOfFile</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00374"/>00374 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetLineInformation(GetLineIndexFromPositionIndex());
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00376"/>00376 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00377"/>00377 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetColumnIndexOfCharacterWithDifferingKind(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;moveBackwards)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;iterateBy&#32;=&#32;moveBackwards
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;-1
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00392"/>00392 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineStartPositionIndex&#32;=&#32;model.GetLineInformation(lineIndex).StartPositionIndexInclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00394"/>00394 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineIndex&#32;&gt;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>.Count&#32;-&#32;1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00397"/>00397 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lastPositionIndexOnRow&#32;=&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1ad677f12e730a39494a8c71bcf2696843">LineEndList</link>[lineIndex].EndPositionIndexExclusive&#32;-&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;positionIndex&#32;=&#32;model.GetPositionIndex(lineIndex,&#32;columnIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00400"/>00400 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(moveBackwards)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(positionIndex&#32;&lt;=&#32;lineStartPositionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00405"/>00405 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionIndex&#32;-=&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00408"/>00408 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(positionIndex&#32;&lt;&#32;0&#32;||&#32;positionIndex&#32;&gt;=&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a7c34c6b3ec3ad1053ac3c46af430b627">RichCharacterList</link>.Length)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00411"/>00411 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;startCharacterKind&#32;=&#32;CharacterKindHelper.CharToCharacterKind(model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a7c34c6b3ec3ad1053ac3c46af430b627">RichCharacterList</link>[positionIndex].<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1_1_rich_character_1a2526cb2f6cf8844d2e1795fa80147de5">Value</link>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00413"/>00413 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(positionIndex&#32;&gt;=&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a7c34c6b3ec3ad1053ac3c46af430b627">RichCharacterList</link>.Length&#32;||
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionIndex&#32;&gt;&#32;lastPositionIndexOnRow&#32;||
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionIndex&#32;&lt;&#32;lineStartPositionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00422"/>00422 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentCharacterKind&#32;=&#32;CharacterKindHelper.CharToCharacterKind(model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a7c34c6b3ec3ad1053ac3c46af430b627">RichCharacterList</link>[positionIndex].<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1_1_rich_character_1a2526cb2f6cf8844d2e1795fa80147de5">Value</link>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00424"/>00424 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentCharacterKind&#32;!=&#32;startCharacterKind)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00427"/>00427 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionIndex&#32;+=&#32;iterateBy;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00430"/>00430 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(moveBackwards)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;positionIndex&#32;+=&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00433"/>00433 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;positionIndex&#32;-&#32;lineStartPositionIndex;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00435"/>00435 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00436"/>00436 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00437"/>00437 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CanUndoEdit(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00438"/>00438 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.EditBlockIndex&#32;&gt;&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00440"/>00440 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00441"/>00441 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00442"/>00442 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CanRedoEdit(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00443"/>00443 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.EditBlockIndex&#32;&lt;&#32;model.EditBlockList.Count&#32;-&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00445"/>00445 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00446"/>00446 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00447"/>00447 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>&#32;GetCharacterKind(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00448"/>00448 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;model.AssertPositionIndex(positionIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00450"/>00450 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(positionIndex&#32;==&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a5aa04acdc06f54c9a571020753713d78">CharCount</link>)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.Bad;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00453"/>00453 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CharacterKindHelper.CharToCharacterKind(model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a7c34c6b3ec3ad1053ac3c46af430b627">RichCharacterList</link>[positionIndex].<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1_1_rich_character_1a2526cb2f6cf8844d2e1795fa80147de5">Value</link>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00455"/>00455 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00456"/>00456 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00461"/>00461 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>?&#32;ReadPreviousWordOrDefault(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isRecursiveCall&#32;=&#32;<emphasis role="keyword">false</emphasis>)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00466"/>00466 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordPositionIndexEndExclusive&#32;=&#32;model.GetPositionIndex(lineIndex,&#32;columnIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordCharacterKind&#32;=&#32;model.GetCharacterKind(wordPositionIndexEndExclusive&#32;-&#32;1);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00469"/>00469 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordCharacterKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.Punctuation&#32;&amp;&amp;&#32;!isRecursiveCall)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;previous&#32;previous&#32;word&#32;is&#32;a&#32;punctuation&#32;character,&#32;then&#32;perhaps</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;user&#32;hit&#32;{&#32;&apos;Ctrl&apos;&#32;+&#32;&apos;Space&apos;&#32;}&#32;to&#32;trigger&#32;the&#32;autocomplete</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;was&#32;at&#32;a&#32;MemberAccessToken&#32;(or&#32;a&#32;period&#32;&apos;.&apos;)</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;So,&#32;read&#32;the&#32;word&#32;previous&#32;to&#32;the&#32;punctuation.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00477"/>00477 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;anotherAttemptColumnIndex&#32;=&#32;columnIndex&#32;-&#32;1;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00479"/>00479 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(anotherAttemptColumnIndex&#32;&gt;=&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.ReadPreviousWordOrDefault(lineIndex,&#32;anotherAttemptColumnIndex,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00483"/>00483 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordCharacterKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.LetterOrDigit)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordColumnIndexStartInclusive&#32;=&#32;model.GetColumnIndexOfCharacterWithDifferingKind(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00490"/>00490 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordColumnIndexStartInclusive&#32;==&#32;-1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexStartInclusive&#32;=&#32;0;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00493"/>00493 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordLength&#32;=&#32;columnIndex&#32;-&#32;wordColumnIndexStartInclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordPositionIndexStartInclusive&#32;=&#32;wordPositionIndexEndExclusive&#32;-&#32;wordLength;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00496"/>00496 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetString(wordPositionIndexStartInclusive,&#32;wordLength);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00499"/>00499 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00501"/>00501 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00502"/>00502 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00507"/>00507 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>?&#32;ReadNextWordOrDefault(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;columnIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00508"/>00508 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordPositionIndexStartInclusive&#32;=&#32;model.GetPositionIndex(lineIndex,&#32;columnIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordCharacterKind&#32;=&#32;model.GetCharacterKind(wordPositionIndexStartInclusive);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00511"/>00511 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordCharacterKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_characters_1_1_models_1ab29f790d22b607886776cba2b8e78d1e">CharacterKind</link>.LetterOrDigit)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordColumnIndexEndExclusive&#32;=&#32;model.GetColumnIndexOfCharacterWithDifferingKind(
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;columnIndex,
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00518"/>00518 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(wordColumnIndexEndExclusive&#32;==&#32;-1)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wordColumnIndexEndExclusive&#32;=&#32;model.GetLineLength(lineIndex);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00521"/>00521 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;wordLength&#32;=&#32;wordColumnIndexEndExclusive&#32;-&#32;columnIndex;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00523"/>00523 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetString(wordPositionIndexStartInclusive,&#32;wordLength);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00526"/>00526 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00528"/>00528 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00529"/>00529 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00536"/>00536 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetTextOffsettingCursor(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b">TextEditorCursor</link>&#32;textEditorCursor)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00537"/>00537 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;cursorPositionIndex&#32;=&#32;model.GetPositionIndex(textEditorCursor);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineStartPositionIndexInclusive&#32;=&#32;model.GetLineInformation(textEditorCursor.LineIndex).StartPositionIndexInclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00540"/>00540 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetString(lineStartPositionIndexInclusive,&#32;cursorPositionIndex&#32;-&#32;lineStartPositionIndexInclusive);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00542"/>00542 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00543"/>00543 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00544"/>00544 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetLineText(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00545"/>00545 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lineStartPositionIndexInclusive&#32;=&#32;model.GetLineInformation(lineIndex).StartPositionIndexInclusive;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;lengthOfLine&#32;=&#32;model.GetLineLength(lineIndex,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00548"/>00548 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;model.GetString(lineStartPositionIndexInclusive,&#32;lengthOfLine);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00550"/>00550 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00551"/>00551 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00552"/>00552 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AssertColumnIndex(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_rows_1_1_models_1a0a649b77578e8c8d38e8878e8cec526c">LineInformation</link>&#32;line,&#32;<emphasis role="keywordtype">int</emphasis>&#32;columnIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00553"/>00553 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(columnIndex&#32;&lt;&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusTextEditorException($<emphasis role="stringliteral">&quot;&apos;{nameof(columnIndex)}:{columnIndex}&apos;&#32;&lt;&#32;0&quot;</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(columnIndex&#32;&gt;&#32;line.LastValidColumnIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusTextEditorException($<emphasis role="stringliteral">&quot;&apos;{nameof(columnIndex)}:{columnIndex}&apos;&#32;&gt;&#32;{nameof(line)}.{nameof(line.LastValidColumnIndex)}:{line.LastValidColumnIndex}&quot;</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00559"/>00559 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00560"/>00560 &#32;&#32;&#32;&#32;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00561"/>00561 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AssertLineIndex(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00562"/>00562 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineIndex&#32;&lt;&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusTextEditorException($<emphasis role="stringliteral">&quot;&apos;{nameof(lineIndex)}:{lineIndex}&apos;&#32;&lt;&#32;0&quot;</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineIndex&#32;&gt;=&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a2b238e94a5e679a44f9b902648b246d4">LineCount</link>)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusTextEditorException($<emphasis role="stringliteral">&quot;&apos;{nameof(lineIndex)}:{lineIndex}&apos;&#32;&gt;=&#32;{nameof(model)}.{nameof(model.LineCount)}:{model.LineCount}&quot;</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00568"/>00568 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00569"/>00569 
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00570"/>00570 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AssertPositionIndex(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;positionIndex)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00571"/>00571 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(positionIndex&#32;&lt;&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusTextEditorException($<emphasis role="stringliteral">&quot;&apos;{nameof(positionIndex)}:{positionIndex}&apos;&#32;&lt;&#32;0&quot;</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;model.DocumentLength&#32;is&#32;a&#32;valid&#32;position&#32;for&#32;the&#32;cursor&#32;to&#32;be&#32;at.</emphasis>
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(positionIndex&#32;&gt;&#32;model.<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_i_text_editor_model_1a5aa04acdc06f54c9a571020753713d78">CharCount</link>)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusTextEditorException($<emphasis role="stringliteral">&quot;&apos;{nameof(positionIndex)}:{positionIndex}&apos;&#32;&gt;&#32;{nameof(model)}.{nameof(model.CharCount)}:{model.CharCount}&quot;</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00578"/>00578 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00579"/>00579 &#32;&#32;&#32;&#32;
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00580"/>00580 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AssertCount(<emphasis role="keyword">this</emphasis>&#32;ITextEditorModel&#32;model,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00581"/>00581 &#32;&#32;&#32;&#32;{
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;&lt;&#32;0)
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusTextEditorException($<emphasis role="stringliteral">&quot;&apos;{nameof(count)}:{count}&apos;&#32;&lt;&#32;0&quot;</emphasis>);
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00584"/>00584 &#32;&#32;&#32;&#32;}
<anchor xml:id="__text_editor_model_extension_methods_8cs_source_1l00585"/>00585 }
</programlisting></section>
