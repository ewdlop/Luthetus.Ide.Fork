<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__background_task_worker_tests_8cs_source" xml:lang="en-US">
<title>BackgroundTaskWorkerTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/BackgroundTasks/Models/BackgroundTaskWorkerTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__background_task_worker_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.Logging;
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.Logging.Abstractions;
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models">Luthetus.Common.RazorLib.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00006"/>00006 
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00007"/>00007 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models">Luthetus.Common.Tests.Basis.BackgroundTasks.Models</link>;
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00008"/>00008 
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00012"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_worker_tests">00012</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_worker_tests">BackgroundTaskWorkerTests</link>
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00013"/>00013 {
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00021"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_worker_tests_1aa0effcec57d4c2941a947805f25a32f2">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_background_tasks_1_1_models_1_1_background_task_worker_tests_1aa0effcec57d4c2941a947805f25a32f2">Constructor</link>()
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;{
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddSingleton&lt;ILoggerFactory,&#32;NullLoggerFactory&gt;()
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddSingleton&lt;IBackgroundTaskService,&#32;BackgroundTaskServiceSynchronous&gt;();
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00026"/>00026 
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sp&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00028"/>00028 
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;queueKey&#32;=&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker_1a2bbecf18336413ee1caff9d378acc256">GetQueueKey</link>();
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00030"/>00030 
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;backgroundTaskWorker&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_continuous_background_task_worker">ContinuousBackgroundTaskWorker</link>(
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sp.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_background_tasks_1_1_models_1_1_i_background_task_service">IBackgroundTaskService</link>&gt;(),
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sp.GetRequiredService&lt;ILoggerFactory&gt;());
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00034"/>00034 
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(queueKey,&#32;backgroundTaskWorker.QueueKey);
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(backgroundTaskWorker.BackgroundTaskService);
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00037"/>00037 
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;startCancellationTokenSource&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CancellationTokenSource();
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;Task.Run(async&#32;()&#32;=&gt;&#32;&#32;await&#32;backgroundTaskWorker.StartAsync(startCancellationTokenSource.Token));
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;stopCancellationTokenSource&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;CancellationTokenSource();
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;Task.Run(async&#32;()&#32;=&gt;&#32;await&#32;backgroundTaskWorker.StopAsync(stopCancellationTokenSource.Token));
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="__background_task_worker_tests_8cs_source_1l00044"/>00044 }
</programlisting></section>
