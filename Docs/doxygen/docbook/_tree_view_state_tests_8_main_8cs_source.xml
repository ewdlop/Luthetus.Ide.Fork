<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__tree_view_state_tests_8_main_8cs_source" xml:lang="en-US">
<title>TreeViewStateTests.Main.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/TreeViews/States/TreeViewStateTests.Main.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keys_1_1_models">Luthetus.Common.RazorLib.Keys.Models</link>;
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models">Luthetus.Common.RazorLib.TreeViews.Models</link>;
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_states">Luthetus.Common.RazorLib.TreeViews.States</link>;
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00005"/>00005 
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00006"/>00006 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states">Luthetus.Common.Tests.Basis.TreeViews.States</link>;
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00007"/>00007 
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00011"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_main_tests">00011</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_main_tests">TreeViewStateMainTests</link>
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00012"/>00012 {
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00017"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_main_tests_1aa26933ec6efb145ecd1c5e0fe0a8e1a2">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_main_tests_1aa26933ec6efb145ecd1c5e0fe0a8e1a2">Constructor</link>()
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;treeViewState&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_states_1a0b87ac8174706be30913b8d1631a5a9d">TreeViewState</link>();
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(ImmutableList&lt;TreeViewContainer&gt;.Empty,&#32;treeViewState.ContainerList);
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00027"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_main_tests_1af09b57cf83f4a60d88a009c808d472e7">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_main_tests_1af09b57cf83f4a60d88a009c808d472e7">ContainerList</link>()
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;treeViewState&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_states_1a0b87ac8174706be30913b8d1631a5a9d">TreeViewState</link>();
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(ImmutableList&lt;TreeViewContainer&gt;.Empty,&#32;treeViewState.ContainerList);
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00031"/>00031 
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;treeViewContainer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_tree_views_1_1_models_1ace4f137317eda265ad6dd976b61de5c6">TreeViewContainer</link>(
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&lt;TreeViewContainer&gt;.NewKey(),
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImmutableList&lt;TreeViewNoType&gt;.Empty);
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00036"/>00036 
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;outContainerList&#32;=&#32;treeViewState.ContainerList.Add(treeViewContainer);
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotEqual(ImmutableList&lt;TreeViewContainer&gt;.Empty,&#32;outContainerList);
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00039"/>00039 
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;outTreeViewState&#32;=&#32;treeViewState&#32;with
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_tree_views_1_1_states_1_1_tree_view_state_main_tests_1af09b57cf83f4a60d88a009c808d472e7">ContainerList</link>&#32;=&#32;outContainerList
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00044"/>00044 
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(outContainerList,&#32;outTreeViewState.ContainerList);
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tree_view_state_tests_8_main_8cs_source_1l00047"/>00047 }
</programlisting></section>
