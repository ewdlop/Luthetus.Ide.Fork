<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__html_helper_tests_8cs_source" xml:lang="en-US">
<title>HtmlHelperTests.cs</title>
<indexterm><primary>Source/Tests/TextEditor/Basis/Htmls/Models/HtmlHelperTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__html_helper_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_htmls_1_1_models">Luthetus.TextEditor.RazorLib.Htmls.Models</link>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>System.Text;
<anchor xml:id="__html_helper_tests_8cs_source_1l00003"/>00003 
<anchor xml:id="__html_helper_tests_8cs_source_1l00004"/><link linkend="_namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls">00004</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models">Luthetus.TextEditor.Tests.Basis.Htmls.Models</link>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00005"/>00005 
<anchor xml:id="__html_helper_tests_8cs_source_1l00009"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests">00009</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests">HtmlHelperTests</link>
<anchor xml:id="__html_helper_tests_8cs_source_1l00010"/>00010 {
<anchor xml:id="__html_helper_tests_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__html_helper_tests_8cs_source_1l00015"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests_1a05f9380f58540eec37d4efdf6cc34d14">00015</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests_1a05f9380f58540eec37d4efdf6cc34d14">EscapeHtml_Char</link>()
<anchor xml:id="__html_helper_tests_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SpaceString&#32;=&#32;&quot;&amp;nbsp;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&amp;nbsp;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00022"/>00022 
<anchor xml:id="__html_helper_tests_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TabString&#32;=&#32;&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="stringliteral">&apos;&#32;&#32;&#32;&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00028"/>00028 
<anchor xml:id="__html_helper_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NewLineString&#32;=&#32;&quot;&lt;br/&gt;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&apos;\n&apos;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&lt;br/&gt;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00036"/>00036 
<anchor xml:id="__html_helper_tests_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&apos;\r&apos;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;\r&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&lt;br/&gt;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00043"/>00043 
<anchor xml:id="__html_helper_tests_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;AmpersandString&#32;=&#32;&quot;&amp;amp;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;&amp;&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&amp;amp;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00049"/>00049 
<anchor xml:id="__html_helper_tests_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LeftAngleBracketString&#32;=&#32;&quot;&amp;lt;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;&lt;&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&amp;lt;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00055"/>00055 
<anchor xml:id="__html_helper_tests_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RightAngleBracketString&#32;=&#32;&quot;&amp;gt;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;&gt;&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&amp;gt;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00061"/>00061 
<anchor xml:id="__html_helper_tests_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DoubleQuoteString&#32;=&#32;&quot;&amp;quot;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;&quot;&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&amp;quot;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00067"/>00067 
<anchor xml:id="__html_helper_tests_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SingleQuoteString&#32;=&#32;&quot;&amp;#39;&quot;;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;character&#32;=&#32;<emphasis role="charliteral">&apos;\&apos;&apos;</emphasis>;
<anchor xml:id="__html_helper_tests_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="stringliteral">&quot;&amp;#39;&quot;</emphasis>,&#32;character.EscapeHtml());
<anchor xml:id="__html_helper_tests_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00074"/>00074 
<anchor xml:id="__html_helper_tests_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__html_helper_tests_8cs_source_1l00079"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests_1afca208df5262470450355c17354469e8">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests_1afca208df5262470450355c17354469e8">EscapeHtml_StringBuilder</link>()
<anchor xml:id="__html_helper_tests_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;stringBuilderNotEscaped&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
<anchor xml:id="__html_helper_tests_8cs_source_1l00082"/>00082 
<anchor xml:id="__html_helper_tests_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="stringliteral">&apos;&#32;&#32;&#32;&#32;&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="charliteral">&apos;\n&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="charliteral">&apos;&amp;&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="charliteral">&apos;&lt;&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="charliteral">&apos;&gt;&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="charliteral">&apos;&quot;&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderNotEscaped.Append(<emphasis role="charliteral">&apos;\&apos;&apos;</emphasis>);
<anchor xml:id="__html_helper_tests_8cs_source_1l00091"/>00091 
<anchor xml:id="__html_helper_tests_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;order&#32;of&#32;replacements&#32;matter,&#32;so&#32;to&#32;test&#32;that&#32;the&#32;order&#32;is&#32;correct&#32;reverse&#32;the</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;string&#32;and&#32;ensure&#32;it&#32;still&#32;is&#32;escaped&#32;correctly.</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00094"/>00094 
<anchor xml:id="__html_helper_tests_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Not&#32;reversed</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;stringBuilderIsEscaped&#32;=&#32;stringBuilderNotEscaped.EscapeHtml();
<anchor xml:id="__html_helper_tests_8cs_source_1l00098"/>00098 
<anchor xml:id="__html_helper_tests_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(
<anchor xml:id="__html_helper_tests_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;br/&gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;amp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;lt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;quot;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;#39;&quot;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderIsEscaped);
<anchor xml:id="__html_helper_tests_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00110"/>00110 
<anchor xml:id="__html_helper_tests_8cs_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Is&#32;reversed</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;stringBuilderReversedNotEscaped&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder(
<anchor xml:id="__html_helper_tests_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>(stringBuilderNotEscaped.ToString().Reverse().ToArray()));
<anchor xml:id="__html_helper_tests_8cs_source_1l00115"/>00115 
<anchor xml:id="__html_helper_tests_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;stringBuilderIsEscaped&#32;=&#32;stringBuilderReversedNotEscaped.EscapeHtml();
<anchor xml:id="__html_helper_tests_8cs_source_1l00117"/>00117 
<anchor xml:id="__html_helper_tests_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(
<anchor xml:id="__html_helper_tests_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;#39;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;quot;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;lt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;amp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;br/&gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&quot;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringBuilderIsEscaped);
<anchor xml:id="__html_helper_tests_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00130"/>00130 
<anchor xml:id="__html_helper_tests_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__html_helper_tests_8cs_source_1l00135"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests_1a2468c066568aad9f0b12afd926ac0dfc">00135</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_htmls_1_1_models_1_1_html_helper_tests_1a2468c066568aad9f0b12afd926ac0dfc">EscapeHtml_String</link>()
<anchor xml:id="__html_helper_tests_8cs_source_1l00136"/>00136 &#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;notEscaped&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;string(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[]&#32;
<anchor xml:id="__html_helper_tests_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;&#32;&#32;&#32;&apos;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;&amp;&apos;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;&lt;&apos;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;&gt;&apos;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;&quot;&apos;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;\&apos;&apos;</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__html_helper_tests_8cs_source_1l00148"/>00148 
<anchor xml:id="__html_helper_tests_8cs_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;order&#32;of&#32;replacements&#32;matter,&#32;so&#32;to&#32;test&#32;that&#32;the&#32;order&#32;is&#32;correct&#32;reverse&#32;the</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;string&#32;and&#32;ensure&#32;it&#32;still&#32;is&#32;escaped&#32;correctly.</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00151"/>00151 
<anchor xml:id="__html_helper_tests_8cs_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Not&#32;reversed</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;isEscaped&#32;=&#32;notEscaped.EscapeHtml();
<anchor xml:id="__html_helper_tests_8cs_source_1l00155"/>00155 
<anchor xml:id="__html_helper_tests_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(
<anchor xml:id="__html_helper_tests_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;br/&gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;amp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;lt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;quot;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;#39;&quot;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isEscaped);
<anchor xml:id="__html_helper_tests_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00167"/>00167 
<anchor xml:id="__html_helper_tests_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Is&#32;reversed</emphasis>
<anchor xml:id="__html_helper_tests_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__html_helper_tests_8cs_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;reversedNotEscaped&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;string(notEscaped.Reverse().ToArray());
<anchor xml:id="__html_helper_tests_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;isEscaped&#32;=&#32;reversedNotEscaped.EscapeHtml();
<anchor xml:id="__html_helper_tests_8cs_source_1l00172"/>00172 
<anchor xml:id="__html_helper_tests_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(
<anchor xml:id="__html_helper_tests_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;#39;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;quot;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;lt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;amp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&lt;br/&gt;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</emphasis>&#32;+
<anchor xml:id="__html_helper_tests_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&amp;nbsp;&quot;</emphasis>,
<anchor xml:id="__html_helper_tests_8cs_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isEscaped);
<anchor xml:id="__html_helper_tests_8cs_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00184"/>00184 &#32;&#32;&#32;&#32;}
<anchor xml:id="__html_helper_tests_8cs_source_1l00185"/>00185 }
</programlisting></section>
