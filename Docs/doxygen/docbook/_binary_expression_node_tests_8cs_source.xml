<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__binary_expression_node_tests_8cs_source" xml:lang="en-US">
<title>BinaryExpressionNodeTests.cs</title>
<indexterm><primary>Source/Tests/TextEditor/Basis/CompilerServices/Syntax/SyntaxNodes/BinaryExpressionNodeTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__binary_expression_node_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models">Luthetus.TextEditor.RazorLib.Lexers.Models</link>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Tokens</link>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Nodes</link>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_interfaces">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Nodes.Interfaces</link>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00005"/>00005 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00006"/>00006 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_syntax_nodes">Luthetus.TextEditor.Tests.Basis.CompilerServices.Syntax.SyntaxNodes</link>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00007"/>00007 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00011"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_syntax_n9dbe88a593a88e76ec8be97e7f64d19a">00011</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_syntax_n9dbe88a593a88e76ec8be97e7f64d19a">BinaryExpressionNodeTests</link>
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00012"/>00012 {
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00025"/><link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_syntax_n9dbe88a593a88e76ec8be97e7f64d19a_1a58956f2dfac3b1f4469aee2df7039fe8">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_syntax_n9dbe88a593a88e76ec8be97e7f64d19a_1a58956f2dfac3b1f4469aee2df7039fe8">Constructor</link>()
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;{
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftExpressionText&#32;=&#32;<emphasis role="stringliteral">&quot;3&quot;</emphasis>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;binaryOperatorText&#32;=&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rightExpressionText&#32;=&#32;<emphasis role="stringliteral">&quot;7&quot;</emphasis>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;binaryExpressionText&#32;=&#32;$<emphasis role="stringliteral">&quot;{leftExpressionText}&#32;{binaryOperatorText}&#32;{rightExpressionText}&quot;</emphasis>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;sourceText&#32;=&#32;<emphasis role="stringliteral">$@&quot;SomeMethodInvocation({binaryExpressionText})&quot;</emphasis>;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00032"/>00032 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_clause_node">TypeClauseNode</link>&#32;intTypeClauseNode;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;intTypeIdentifier&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens_1_1_keyword_token">KeywordToken</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>.FabricateTextSpan(<emphasis role="stringliteral">&quot;int&quot;</emphasis>),
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib">RazorLib</link>.<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services">CompilerServices</link>.<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax">Syntax</link>.SyntaxKind.IntTokenKeyword);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00038"/>00038 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intTypeClauseNode&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_clause_node">TypeClauseNode</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intTypeIdentifier,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typeof(<emphasis role="keywordtype">int</emphasis>),
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00044"/>00044 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_97d7489c2c3077ac339153787f61d38f">IExpressionNode</link>&#32;leftExpressionNode;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftExpressionNodeInclusiveStartIndex&#32;=&#32;sourceText.IndexOf(leftExpressionText);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00048"/>00048 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftNumericLiteralToken&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens_1_1_numeric_literal_token">NumericLiteralToken</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftExpressionNodeInclusiveStartIndex,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftExpressionNodeInclusiveStartIndex&#32;+&#32;leftExpressionText.Length,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a26a1b63ad28ec7955b30bc6c91571eca">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.txt&quot;</emphasis>),
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceText));
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00055"/>00055 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftExpressionNode&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_literal_expression_node">LiteralExpressionNode</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftNumericLiteralToken,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intTypeClauseNode);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00060"/>00060 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_binary_operator_node">BinaryOperatorNode</link>&#32;binaryOperatorNode;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;plusTokenInclusiveStartIndex&#32;=&#32;sourceText.IndexOf(binaryOperatorText);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00064"/>00064 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;plusToken&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens_1_1_plus_token">PlusToken</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plusTokenInclusiveStartIndex,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plusTokenInclusiveStartIndex&#32;+&#32;binaryOperatorText.Length,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a26a1b63ad28ec7955b30bc6c91571eca">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.txt&quot;</emphasis>),
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceText));
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00071"/>00071 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;binaryOperatorNode&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_binary_operator_node">BinaryOperatorNode</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intTypeClauseNode,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plusToken,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intTypeClauseNode,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intTypeClauseNode);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00078"/>00078 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_97d7489c2c3077ac339153787f61d38f">IExpressionNode</link>&#32;rightExpressionNode;
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rightExpressionNodeInclusiveStartIndex&#32;=&#32;sourceText.IndexOf(rightExpressionText);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00082"/>00082 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rightNumericLiteralToken&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens_1_1_numeric_literal_token">NumericLiteralToken</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f">TextEditorTextSpan</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightExpressionNodeInclusiveStartIndex,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightExpressionNodeInclusiveStartIndex&#32;+&#32;rightExpressionText.Length,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a26a1b63ad28ec7955b30bc6c91571eca">ResourceUri</link>(<emphasis role="stringliteral">&quot;/unitTesting.txt&quot;</emphasis>),
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceText));
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00089"/>00089 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightExpressionNode&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_literal_expression_node">LiteralExpressionNode</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightNumericLiteralToken,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intTypeClauseNode);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00094"/>00094 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;binaryExpressionNode&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_binary_expression_node">BinaryExpressionNode</link>(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftExpressionNode,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;binaryOperatorNode,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightExpressionNode);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00099"/>00099 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(leftExpressionNode,&#32;binaryExpressionNode.LeftExpressionNode);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(binaryOperatorNode,&#32;binaryExpressionNode.<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_binary_operator_node_1aadd7b3c8a11ee758b35f86f9e0f79028">BinaryOperatorNode</link>);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(rightExpressionNode,&#32;binaryExpressionNode.RightExpressionNode);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(binaryOperatorNode.<link linkend="_class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_binary_operator_node_1aaf0c47ee6e54b93f00ef8d47543067be">ResultTypeClauseNode</link>,&#32;binaryExpressionNode.ResultTypeClauseNode);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00104"/>00104 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(3,&#32;binaryExpressionNode.ChildList.Length);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(leftExpressionNode,&#32;binaryExpressionNode.ChildList[0]);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(binaryOperatorNode,&#32;binaryExpressionNode.ChildList[1]);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(rightExpressionNode,&#32;binaryExpressionNode.ChildList[2]);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00109"/>00109 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(binaryExpressionNode.IsFabricated);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00111"/>00111 
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib">RazorLib</link>.<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services">CompilerServices</link>.<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax">Syntax</link>.SyntaxKind.BinaryExpressionNode,
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;binaryExpressionNode.SyntaxKind);
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;}
<anchor xml:id="__binary_expression_node_tests_8cs_source_1l00116"/>00116 }
</programlisting></section>
