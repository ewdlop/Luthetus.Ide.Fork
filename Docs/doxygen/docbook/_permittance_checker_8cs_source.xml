<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__permittance_checker_8cs_source" xml:lang="en-US">
<title>PermittanceChecker.cs</title>
<indexterm><primary>Source/Lib/Common/FileSystems/Models/PermittanceChecker.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__permittance_checker_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_exceptions">Luthetus.Common.RazorLib.Exceptions</link>;
<anchor xml:id="__permittance_checker_8cs_source_1l00002"/>00002 
<anchor xml:id="__permittance_checker_8cs_source_1l00003"/>00003 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models">Luthetus.Common.RazorLib.FileSystems.Models</link>;
<anchor xml:id="__permittance_checker_8cs_source_1l00004"/>00004 
<anchor xml:id="__permittance_checker_8cs_source_1l00005"/>00005 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>PermittanceChecker
<anchor xml:id="__permittance_checker_8cs_source_1l00006"/>00006 {
<anchor xml:id="__permittance_checker_8cs_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ERROR_PREFIX&#32;=&#32;<emphasis role="stringliteral">&quot;FILE_PERMISSION_ERROR:&quot;</emphasis>;
<anchor xml:id="__permittance_checker_8cs_source_1l00008"/>00008 
<anchor xml:id="__permittance_checker_8cs_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AssertDeletionPermitted(
<anchor xml:id="__permittance_checker_8cs_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IEnvironmentProvider&#32;environmentProvider,
<anchor xml:id="__permittance_checker_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;path,
<anchor xml:id="__permittance_checker_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDirectory)
<anchor xml:id="__permittance_checker_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;simplePath&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1a16adff7a94f1f0102f7e1505a87f5902">SimplePath</link>(path,&#32;isDirectory);
<anchor xml:id="__permittance_checker_8cs_source_1l00015"/>00015 
<anchor xml:id="__permittance_checker_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(environmentProvider.ProtectedPathList.Contains(simplePath))
<anchor xml:id="__permittance_checker_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;NotDeletionPermittedExceptionFactory(path,&#32;isDirectory);
<anchor xml:id="__permittance_checker_8cs_source_1l00018"/>00018 
<anchor xml:id="__permittance_checker_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Double&#32;check&#32;obviously&#32;bad&#32;scenarios.</emphasis>
<anchor xml:id="__permittance_checker_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;These&#32;should&#32;already&#32;be&#32;protected&#32;paths,&#32;but&#32;this&#32;is&#32;an&#32;extra&#32;check.</emphasis>
<anchor xml:id="__permittance_checker_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(path&#32;==&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>&#32;||&#32;path&#32;==&#32;<emphasis role="stringliteral">&quot;\\&quot;</emphasis>&#32;||&#32;<emphasis role="keywordtype">string</emphasis>.IsNullOrWhiteSpace(path))
<anchor xml:id="__permittance_checker_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;NotDeletionPermittedExceptionFactory(path,&#32;isDirectory);
<anchor xml:id="__permittance_checker_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__permittance_checker_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(path&#32;==&#32;environmentProvider.DriveExecutingFromNoDirectorySeparator&#32;+&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>&#32;||
<anchor xml:id="__permittance_checker_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;path&#32;==&#32;environmentProvider.DriveExecutingFromNoDirectorySeparator&#32;+&#32;<emphasis role="stringliteral">&quot;\\&quot;</emphasis>)
<anchor xml:id="__permittance_checker_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;NotDeletionPermittedExceptionFactory(path,&#32;isDirectory);
<anchor xml:id="__permittance_checker_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00031"/>00031 
<anchor xml:id="__permittance_checker_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!environmentProvider.DeletionPermittedPathList.Contains(simplePath))
<anchor xml:id="__permittance_checker_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;deletionPermittedPath&#32;<emphasis role="keywordflow">in</emphasis>&#32;environmentProvider.DeletionPermittedPathList)
<anchor xml:id="__permittance_checker_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(deletionPermittedPath.IsDirectory)
<anchor xml:id="__permittance_checker_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;path&#32;is&#32;encompassed&#32;by&#32;a&#32;directory&#32;with&#32;delete&#32;permission.</emphasis>
<anchor xml:id="__permittance_checker_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
<anchor xml:id="__permittance_checker_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;idea&#32;here&#32;being:&#32;if&#32;a&#32;directory&#32;is&#32;allowed&#32;to&#32;be&#32;deleted,</emphasis>
<anchor xml:id="__permittance_checker_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;then&#32;all&#32;files&#32;which&#32;are&#32;not&#32;protected&#32;are&#32;able&#32;to&#32;be&#32;deleted&#32;too.</emphasis>
<anchor xml:id="__permittance_checker_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(path.StartsWith(deletionPermittedPath.AbsolutePath))
<anchor xml:id="__permittance_checker_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__permittance_checker_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00046"/>00046 
<anchor xml:id="__permittance_checker_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;NotDeletionPermittedExceptionFactory(path,&#32;isDirectory);
<anchor xml:id="__permittance_checker_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00050"/>00050 
<anchor xml:id="__permittance_checker_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsRootOrHomeDirectory(
<anchor xml:id="__permittance_checker_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1a16adff7a94f1f0102f7e1505a87f5902">SimplePath</link>&#32;simplePath,
<anchor xml:id="__permittance_checker_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IEnvironmentProvider&#32;environmentProvider)
<anchor xml:id="__permittance_checker_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;absolutePath&#32;=&#32;environmentProvider.AbsolutePathFactory(
<anchor xml:id="__permittance_checker_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simplePath.AbsolutePath,
<anchor xml:id="__permittance_checker_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simplePath.IsDirectory);
<anchor xml:id="__permittance_checker_8cs_source_1l00064"/>00064 
<anchor xml:id="__permittance_checker_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(absolutePath.Value&#32;==&#32;environmentProvider.RootDirectoryAbsolutePath.Value&#32;||
<anchor xml:id="__permittance_checker_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;absolutePath.Value&#32;==&#32;environmentProvider.HomeDirectoryAbsolutePath.Value)
<anchor xml:id="__permittance_checker_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__permittance_checker_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00070"/>00070 
<anchor xml:id="__permittance_checker_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__permittance_checker_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00073"/>00073 
<anchor xml:id="__permittance_checker_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;LuthetusCommonException&#32;NotDeletionPermittedExceptionFactory(
<anchor xml:id="__permittance_checker_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;path,
<anchor xml:id="__permittance_checker_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isDirectory)
<anchor xml:id="__permittance_checker_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;{
<anchor xml:id="__permittance_checker_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;entryTypeName&#32;=&#32;isDirectory
<anchor xml:id="__permittance_checker_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;<emphasis role="stringliteral">&quot;directory&quot;</emphasis>
<anchor xml:id="__permittance_checker_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;file&quot;</emphasis>;
<anchor xml:id="__permittance_checker_8cs_source_1l00081"/>00081 
<anchor xml:id="__permittance_checker_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;LuthetusCommonException(
<anchor xml:id="__permittance_checker_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$<emphasis role="stringliteral">&quot;{ERROR_PREFIX}&#32;The&#32;{entryTypeName}&#32;with&#32;path&#32;&apos;{path}&apos;&#32;was&#32;not&#32;permitted&#32;to&#32;be&#32;deleted.&quot;</emphasis>);
<anchor xml:id="__permittance_checker_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;}
<anchor xml:id="__permittance_checker_8cs_source_1l00085"/>00085 }
</programlisting></section>
