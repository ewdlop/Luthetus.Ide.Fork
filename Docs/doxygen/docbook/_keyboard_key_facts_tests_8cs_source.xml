<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__keyboard_key_facts_tests_8cs_source" xml:lang="en-US">
<title>KeyboardKeyFactsTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/Keyboards/Models/KeyboardKeyFactsTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keyboards_1_1_models">Luthetus.Common.RazorLib.Keyboards.Models</link>;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis>Microsoft.AspNetCore.Components.Web;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis>static&#32;<link linkend="_namespace_luthetus">Luthetus</link>.<link linkend="_namespace_luthetus_1_1_common">Common</link>.<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib">RazorLib</link>.<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keyboards">Keyboards</link>.<link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keyboards_1_1_models">Models</link>.<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_keyboards_1_1_models_1_1_keyboard_key_facts">KeyboardKeyFacts</link>;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00004"/>00004 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00005"/><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards">00005</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models">Luthetus.Common.Tests.Basis.Keyboards.Models</link>;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00006"/>00006 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00010"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests">00010</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests">KeyboardKeyFactsTests</link>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00011"/>00011 {
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00015"/>00015 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00016"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1aaa5da2fb63d6b89d685c92393a9601d7">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1aaa5da2fb63d6b89d685c92393a9601d7">IsMetaKeyA</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(IsMetaKey(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;<emphasis role="stringliteral">&quot;F1&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;<emphasis role="stringliteral">&quot;F1&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00023"/>00023 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(IsMetaKey(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;WhitespaceCodes.TAB_CODE,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Key&#32;and&#32;Code&#32;for&#32;&apos;tab&apos;&#32;are&#32;the&#32;same</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;WhitespaceCodes.TAB_CODE,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00031"/>00031 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00036"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a4dbbdd97b5e7e786ec678c3d2cc6c0be">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a4dbbdd97b5e7e786ec678c3d2cc6c0be">IsMetaKeyB</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(IsMetaKey(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;F1&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;F1&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00041"/>00041 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(IsMetaKey(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WhitespaceCodes.TAB_CODE,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Key&#32;and&#32;Code&#32;for&#32;&apos;tab&apos;&#32;are&#32;the&#32;same</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WhitespaceCodes.TAB_CODE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00047"/>00047 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00052"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a5e3e4eda77931fc36411854c560cac9d">00052</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a5e3e4eda77931fc36411854c560cac9d">IsWhitespaceCharacter</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;whitespaceCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;WhitespaceCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(KeyboardKeyFacts.IsWhitespaceCharacter(whitespaceCharacter));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00058"/>00058 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;punctuationCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;PunctuationCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCharacter(punctuationCharacter));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00063"/>00063 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Letter</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCharacter(<emphasis role="charliteral">&apos;a&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00066"/>00066 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Digit</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCharacter(<emphasis role="charliteral">&apos;5&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00069"/>00069 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00070"/>00070 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00075"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1abf7eafae1a45a0c28b2e89f6b9750e6f">00075</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1abf7eafae1a45a0c28b2e89f6b9750e6f">IsPunctuationCharacter</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;punctuationCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;PunctuationCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(KeyboardKeyFacts.IsPunctuationCharacter(punctuationCharacter));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00081"/>00081 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;whitespaceCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;WhitespaceCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsPunctuationCharacter(whitespaceCharacter));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00086"/>00086 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Letter</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsPunctuationCharacter(<emphasis role="charliteral">&apos;a&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00089"/>00089 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Digit</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsPunctuationCharacter(<emphasis role="charliteral">&apos;5&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00093"/>00093 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00097"/>00097 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00098"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a0923c368ad1c00bec3601e8b9ba3d784">00098</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a0923c368ad1c00bec3601e8b9ba3d784">MatchPunctuationCharacter</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00099"/>00099 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.CLOSE_CURLY_BRACE,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.OPEN_CURLY_BRACE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.OPEN_CURLY_BRACE,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.CLOSE_CURLY_BRACE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.CLOSE_PARENTHESIS,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.OPEN_PARENTHESIS));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.OPEN_PARENTHESIS,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.CLOSE_PARENTHESIS));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.CLOSE_SQUARE_BRACKET,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.OPEN_SQUARE_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.OPEN_SQUARE_BRACKET,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.CLOSE_SQUARE_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.CLOSE_ARROW_BRACKET,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.OPEN_ARROW_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(PunctuationCharacters.OPEN_ARROW_BRACKET,&#32;KeyboardKeyFacts.MatchPunctuationCharacter(PunctuationCharacters.CLOSE_ARROW_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Letter</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(KeyboardKeyFacts.MatchPunctuationCharacter(<emphasis role="charliteral">&apos;a&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00111"/>00111 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Digit</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(KeyboardKeyFacts.MatchPunctuationCharacter(<emphasis role="charliteral">&apos;1&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00114"/>00114 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Punctuation</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(KeyboardKeyFacts.MatchPunctuationCharacter(<emphasis role="charliteral">&apos;/&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00117"/>00117 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Whitespace</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(KeyboardKeyFacts.MatchPunctuationCharacter(WhitespaceCharacters.SPACE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00120"/>00120 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00121"/>00121 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00125"/>00125 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00126"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1ac98abab94b899aa45c0af1a9ebe04c89">00126</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1ac98abab94b899aa45c0af1a9ebe04c89">DirectionToFindMatchMatchingPunctuationCharacter</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00127"/>00127 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.OPEN_CURLY_BRACE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(-1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.CLOSE_CURLY_BRACE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.OPEN_PARENTHESIS));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(-1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.CLOSE_PARENTHESIS));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.OPEN_SQUARE_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(-1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.CLOSE_SQUARE_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.OPEN_ARROW_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(-1,&#32;DirectionToFindMatchingPunctuationCharacter(PunctuationCharacters.CLOSE_ARROW_BRACKET));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00136"/>00136 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Letter</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(DirectionToFindMatchingPunctuationCharacter(<emphasis role="charliteral">&apos;a&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00139"/>00139 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Digit</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(DirectionToFindMatchingPunctuationCharacter(<emphasis role="charliteral">&apos;1&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00142"/>00142 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Punctuation</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(DirectionToFindMatchingPunctuationCharacter(<emphasis role="charliteral">&apos;/&apos;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Whitespace</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(DirectionToFindMatchingPunctuationCharacter(WhitespaceCharacters.SPACE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00149"/>00149 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00153"/>00153 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00154"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a618165b34162cb40687a7698f9dc9377">00154</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a618165b34162cb40687a7698f9dc9377">IsWhitespaceCode</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00155"/>00155 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;whitespaceCode&#32;<emphasis role="keywordflow">in</emphasis>&#32;WhitespaceCodes.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(KeyboardKeyFacts.IsWhitespaceCode(whitespaceCode));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00160"/>00160 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;movementKey&#32;<emphasis role="keywordflow">in</emphasis>&#32;MovementKeys.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCode(movementKey));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00165"/>00165 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;punctuationCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;PunctuationCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCode(punctuationCharacter.ToString()));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00170"/>00170 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;whitespaceCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;WhitespaceCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCode(whitespaceCharacter.ToString()));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00175"/>00175 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Letter</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCode(<emphasis role="stringliteral">&quot;a&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00178"/>00178 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Digit</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsWhitespaceCode(<emphasis role="stringliteral">&quot;5&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00181"/>00181 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00182"/>00182 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00186"/>00186 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00187"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1aa4785d61fa8c863db2d20f87fbb9e9a5">00187</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1aa4785d61fa8c863db2d20f87fbb9e9a5">CheckIsAlternateContextMenuEvent</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00188"/>00188 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Presuming&#32;the&#32;code&#32;remains&#32;as:&#32;{&#32;&quot;F10&quot;&#32;+&#32;ShiftKey&#32;}</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;where&#32;&quot;F10&quot;&#32;is&#32;the&#32;Key&#32;(2023-11-20)</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00191"/>00191 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(KeyboardKeyFacts.CheckIsAlternateContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;F10&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00197"/>00197 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.CheckIsAlternateContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;F10&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00203"/>00203 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.CheckIsAlternateContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;KeyA&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00209"/>00209 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.CheckIsAlternateContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;KeyA&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00215"/>00215 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;ContextMenu&quot;&#32;key&#32;is&#32;not&#32;the&#32;alternative,&#32;therefore&#32;these&#32;are&#32;false</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.CheckIsAlternateContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00223"/>00223 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.CheckIsAlternateContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00230"/>00230 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00231"/>00231 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00235"/>00235 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00236"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1ae52ad6d16b01b5faa326ebbfa7261bea">00236</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1ae52ad6d16b01b5faa326ebbfa7261bea">CheckIsContextMenuEventA</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00237"/>00237 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Default&#32;contextmenu</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(CheckIsContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00245"/>00245 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(CheckIsContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00252"/>00252 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Alternate&#32;contextmenu</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(CheckIsContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;F10&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00260"/>00260 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(CheckIsContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;F10&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00267"/>00267 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOT-contextmenu</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(CheckIsContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;KeyA&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00275"/>00275 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(CheckIsContextMenuEvent(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;KeyA&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00282"/>00282 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00283"/>00283 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00287"/>00287 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00288"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a46c84a33a9f6b04113d69b97e717c1c2">00288</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a46c84a33a9f6b04113d69b97e717c1c2">CheckIsContextMenuEventB</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00289"/>00289 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Default&#32;contextmenu</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(CheckIsContextMenuEvent(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShiftKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AltKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00299"/>00299 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(CheckIsContextMenuEvent(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;<emphasis role="stringliteral">&quot;ContextMenu&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShiftKey&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AltKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00308"/>00308 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Alternate&#32;contextmenu</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(CheckIsContextMenuEvent(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;<emphasis role="stringliteral">&quot;F10&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShiftKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AltKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00318"/>00318 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(CheckIsContextMenuEvent(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;<emphasis role="stringliteral">&quot;F10&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;<emphasis role="keywordtype">string</emphasis>.Empty,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShiftKey&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AltKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00327"/>00327 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;NOT-contextmenu</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(CheckIsContextMenuEvent(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;<emphasis role="stringliteral">&quot;KeyA&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShiftKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AltKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00337"/>00337 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(CheckIsContextMenuEvent(<emphasis role="keyword">new</emphasis>&#32;KeyboardEventArgs
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Key&#32;=&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Code&#32;=&#32;<emphasis role="stringliteral">&quot;KeyA&quot;</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShiftKey&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AltKey&#32;=&#32;<emphasis role="keyword">false</emphasis>,
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00346"/>00346 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00347"/>00347 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00351"/>00351 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00352"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a7f6f259a70cc4fba3e705cb7272c156e">00352</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1a7f6f259a70cc4fba3e705cb7272c156e">IsMovementKey</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00353"/>00353 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;movementKey&#32;<emphasis role="keywordflow">in</emphasis>&#32;MovementKeys.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(KeyboardKeyFacts.IsMovementKey(movementKey));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00358"/>00358 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;whitespaceCode&#32;<emphasis role="keywordflow">in</emphasis>&#32;WhitespaceCodes.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsMovementKey(whitespaceCode));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00363"/>00363 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;punctuationCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;PunctuationCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsMovementKey(punctuationCharacter.ToString()));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00368"/>00368 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;whitespaceCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;WhitespaceCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsMovementKey(whitespaceCharacter.ToString()));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00373"/>00373 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Letter</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsMovementKey(<emphasis role="stringliteral">&quot;a&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00376"/>00376 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Digit</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsMovementKey(<emphasis role="stringliteral">&quot;5&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00379"/>00379 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00380"/>00380 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00384"/>00384 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00385"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1af01b29eecec54bfc2f2fccd718acc934">00385</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1af01b29eecec54bfc2f2fccd718acc934">ConvertWhitespaceCodeToCharacter</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00386"/>00386 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;\t&apos;</emphasis>,&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(WhitespaceCodes.TAB_CODE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;\n&apos;</emphasis>,&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(WhitespaceCodes.ENTER_CODE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Equal(<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>,&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(WhitespaceCodes.SPACE_CODE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00390"/>00390 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Letter</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.ThrowsAny&lt;Exception&gt;(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(<emphasis role="stringliteral">&quot;KeyA&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00394"/>00394 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Digit</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.ThrowsAny&lt;Exception&gt;(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(<emphasis role="stringliteral">&quot;Digit1&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Punctuation</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.ThrowsAny&lt;Exception&gt;(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(<emphasis role="stringliteral">&quot;Slash&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Modifier</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.ThrowsAny&lt;Exception&gt;(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(<emphasis role="stringliteral">&quot;ControlLeft&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;F-Key</emphasis>
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.ThrowsAny&lt;Exception&gt;(
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;()&#32;=&gt;&#32;KeyboardKeyFacts.ConvertWhitespaceCodeToCharacter(<emphasis role="stringliteral">&quot;F1&quot;</emphasis>));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00410"/>00410 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00411"/>00411 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00415"/>00415 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00416"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1ab63ce70204e84113f621784c8bc30e78">00416</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_keyboards_1_1_models_1_1_keyboard_key_facts_tests_1ab63ce70204e84113f621784c8bc30e78">IsLineEndingCharacter</link>()
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00417"/>00417 &#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(KeyboardKeyFacts.IsLineEndingCharacter(WhitespaceCharacters.NEW_LINE));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(KeyboardKeyFacts.IsLineEndingCharacter(WhitespaceCharacters.CARRIAGE_RETURN));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00420"/>00420 
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;punctuationCharacter&#32;<emphasis role="keywordflow">in</emphasis>&#32;PunctuationCharacters.AllList)
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(KeyboardKeyFacts.IsLineEndingCharacter(punctuationCharacter));
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00425"/>00425 &#32;&#32;&#32;&#32;}
<anchor xml:id="__keyboard_key_facts_tests_8cs_source_1l00426"/>00426 }
</programlisting></section>
