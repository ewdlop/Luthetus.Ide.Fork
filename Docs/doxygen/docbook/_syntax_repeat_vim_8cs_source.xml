<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__syntax_repeat_vim_8cs_source" xml:lang="en-US">
<title>SyntaxRepeatVim.cs</title>
<indexterm><primary>Source/Lib/TextEditor/Keymaps/Models/Vims/SyntaxRepeatVim.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__syntax_repeat_vim_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models">Luthetus.Common.RazorLib.Keymaps.Models</link>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_commands_1_1_models">Luthetus.TextEditor.RazorLib.Commands.Models</link>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_edits_1_1_models">Luthetus.TextEditor.RazorLib.Edits.Models</link>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>System.Collections.Immutable;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00005"/>00005 <emphasis role="keyword">using&#32;</emphasis>System.Text;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00006"/>00006 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00007"/>00007 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims">Luthetus.TextEditor.RazorLib.Keymaps.Models.Vims</link>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00008"/>00008 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00009"/>00009 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SyntaxRepeatVim
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00010"/>00010 {
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;TryLex(KeymapArgs&#32;keymapArgument,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection,&#32;out&#32;VimGrammarToken?&#32;vimGrammarToken)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00012"/>00012 &#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Suppress&#32;unused&#32;parameter&#32;warnings&#32;because&#32;these&#32;will&#32;likely&#32;be&#32;used&#32;once&#32;further&#32;Vim&#32;emulation&#32;is&#32;implemented.</emphasis>
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_&#32;=&#32;hasTextSelection;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00015"/>00015 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keymapArgument.<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args_1ad72b935069a467597674e30b3dad650a">Code</link>&#32;is&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vimGrammarToken&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00021"/>00021 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;possibleDigit&#32;=&#32;keymapArgument.<link linkend="_struct_luthetus_1_1_common_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_keymap_args_1ad72b935069a467597674e30b3dad650a">Code</link>.Last();
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00023"/>00023 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">char</emphasis>.IsNumber(possibleDigit)&#32;&amp;&amp;&#32;possibleDigit&#32;!=&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vimGrammarToken&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1a178602376de781f2ad80cfe5128c5287">VimGrammarToken</link>(<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58">VimGrammarKind</link>.Repeat,&#32;keymapArgument);
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00029"/>00029 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vimGrammarToken&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00033"/>00033 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;TryParse(TextEditorKeymapVim&#32;textEditorKeymapVim,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ImmutableArray&lt;VimGrammarToken&gt;&#32;sentenceSnapshotList,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indexInSentence,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;KeymapArgs&#32;keymapArgument,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasTextSelection,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;TextEditorCommand?&#32;textEditorCommand)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;modifiedIndexInSentence&#32;=&#32;indexInSentence;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00042"/>00042 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;numberBuilder&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00044"/>00044 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;indexInSentence;&#32;i&#32;&lt;&#32;sentenceSnapshotList.Length;&#32;i++)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currentToken&#32;=&#32;sentenceSnapshotList[i];
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00048"/>00048 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentToken.VimGrammarKind&#32;==&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_keymaps_1_1_models_1_1_vims_1afac2067198153a7fdd650064f5189f58">VimGrammarKind</link>.Repeat)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numberBuilder.Append(currentToken.KeymapArgument.Code.Last());
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifiedIndexInSentence++;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00055"/>00055 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;intValue&#32;=&#32;<emphasis role="keywordtype">int</emphasis>.Parse(numberBuilder.ToString());
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00057"/>00057 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;success&#32;=&#32;VimSentence.TryParseNextToken(
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorKeymapVim,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sentenceSnapshotList,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifiedIndexInSentence,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keymapArgument,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasTextSelection,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;var&#32;innerTextEditorCommand);
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00065"/>00065 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(success&#32;&amp;&amp;&#32;innerTextEditorCommand&#32;is&#32;not&#32;<emphasis role="keyword">null</emphasis>)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;textEditorCommandDisplayName&#32;=&#32;$<emphasis role="stringliteral">&quot;Vim::Repeat(count:&#32;{intValue},&#32;arg:&#32;{innerTextEditorCommand.DisplayName})&quot;</emphasis>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00069"/>00069 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Repeat&#32;the&#32;inner&#32;TextEditorCommand&#32;using&#32;a&#32;for&#32;loop</emphasis>
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorCommand&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;TextEditorCommand(
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorCommandDisplayName,&#32;textEditorCommandDisplayName,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<link linkend="_namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_edits_1_1_models_1a816662ac8ed4071c13527984370b51ba">TextEditKind</link>.None,&#32;<emphasis role="keyword">null</emphasis>,
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;async&#32;textEditorCommandArgs&#32;=&gt;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;index&#32;=&#32;0;&#32;index&#32;&lt;&#32;intValue;&#32;index++)
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;await&#32;innerTextEditorCommand.CommandFunc.Invoke(textEditorCommandArgs).ConfigureAwait(false);
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textEditorCommand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00085"/>00085 
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;success;
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="__syntax_repeat_vim_8cs_source_1l00088"/>00088 }
</programlisting></section>
