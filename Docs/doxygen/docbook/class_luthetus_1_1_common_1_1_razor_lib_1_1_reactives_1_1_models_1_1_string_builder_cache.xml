<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache" xml:lang="en-US">
<title>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache Class Reference</title>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1ab222bb9b6b975b3e9338fb961abcb7f5">Append</link> (string text)</para>
</listitem>
            <listitem><para>void <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1a29c3829dab772e906dd5bd88a74fb305">AppendTwo</link> (string firstAppendText, string secondAppendText)</para>

<para>The issue this method solves is as follows: </para>
</listitem>
            <listitem><para>int <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1ac64bbf8e83810750c5d5f0b8fb19c51d">GetLength</link> ()</para>
</listitem>
            <listitem><para>override string <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1a1ba114911cf9e30f8fdd6fed3aae684a">ToString</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__string_builder_cache_8cs_source_1l00005">5</link> of file <link linkend="__string_builder_cache_8cs_source">StringBuilderCache.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1ab222bb9b6b975b3e9338fb961abcb7f5"/><section>
    <title>Append()</title>
<indexterm><primary>Append</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</primary><secondary>Append</secondary></indexterm>
<para><computeroutput>void Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache.Append (string text)</computeroutput></para><para>
Definition at line <link linkend="__string_builder_cache_8cs_source_1l00013">13</link> of file <link linkend="__string_builder_cache_8cs_source">StringBuilderCache.cs</link>.</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1a29c3829dab772e906dd5bd88a74fb305"/><section>
    <title>AppendTwo()</title>
<indexterm><primary>AppendTwo</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</primary><secondary>AppendTwo</secondary></indexterm>
<para><computeroutput>void Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache.AppendTwo (string firstAppendText, string secondAppendText)</computeroutput></para><para>

<para>The issue this method solves is as follows: </para>
</para>

<para>If one invokes <link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1ab222bb9b6b975b3e9338fb961abcb7f5">Append</link> with the expression: (someStringVar + &apos;<?linebreak?>&apos;) Then one is saving the concatenation of the destination, BUT, still is creating a concatenation in the middle as &apos;someStringVar&apos; and &apos;<?linebreak?>&apos; would now need to be concatenated before the invocation to Append can occur.</para>

<para>I do not believe it is the case that the compiler will convert Append(someStringVar + &apos;<?linebreak?>&apos;) to Append(someStringVar).Append(&apos;<?linebreak?>&apos;) because this optimization is highly dependent on the size of &apos;someStringVar&apos;.</para>

<para>If &apos;someStringVar&apos; is very short in length, then it can be faster to do the middleman concatenation <link xlink:href="https://stackoverflow.com/a/22527492/14847452">https://stackoverflow.com/a/22527492/14847452</link></para>

<para>In the case of terminal output though, I wonder if one could in a single output put out an extremely long length string.</para>

<para>I&apos;m wondering now, why am I appending the newline character anyway? The output should be occurring on newline, so the output would end in a newline, I think?</para>

<para>I need to look into this further. </para>
<para>
Definition at line <link linkend="__string_builder_cache_8cs_source_1l00049">49</link> of file <link linkend="__string_builder_cache_8cs_source">StringBuilderCache.cs</link>.</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1ac64bbf8e83810750c5d5f0b8fb19c51d"/><section>
    <title>GetLength()</title>
<indexterm><primary>GetLength</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</primary><secondary>GetLength</secondary></indexterm>
<para><computeroutput>int Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache.GetLength ( )</computeroutput></para><para>
Definition at line <link linkend="__string_builder_cache_8cs_source_1l00061">61</link> of file <link linkend="__string_builder_cache_8cs_source">StringBuilderCache.cs</link>.</para>
</section>
<anchor xml:id="_class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_string_builder_cache_1a1ba114911cf9e30f8fdd6fed3aae684a"/><section>
    <title>ToString()</title>
<indexterm><primary>ToString</primary><secondary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</secondary></indexterm>
<indexterm><primary>Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>override string Luthetus.Common.RazorLib.Reactives.Models.StringBuilderCache.ToString ( )</computeroutput></para><para>
Definition at line <link linkend="__string_builder_cache_8cs_source_1l00069">69</link> of file <link linkend="__string_builder_cache_8cs_source">StringBuilderCache.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Source/Lib/Common/Reactives/Models/<link linkend="__string_builder_cache_8cs">StringBuilderCache.cs</link></section>
</section>
