<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__drag_service_tests_8cs_source" xml:lang="en-US">
<title>DragServiceTests.cs</title>
<indexterm><primary>Source/Tests/Common/Basis/Drags/Models/DragServiceTests.cs</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__drag_service_tests_8cs_source_1l00001"/>00001 <emphasis role="keyword">using&#32;</emphasis>Fluxor;
<anchor xml:id="__drag_service_tests_8cs_source_1l00002"/>00002 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_models">Luthetus.Common.RazorLib.Drags.Models</link>;
<anchor xml:id="__drag_service_tests_8cs_source_1l00003"/>00003 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_displays">Luthetus.Common.RazorLib.Drags.Displays</link>;
<anchor xml:id="__drag_service_tests_8cs_source_1l00004"/>00004 <emphasis role="keyword">using&#32;</emphasis>Microsoft.Extensions.DependencyInjection;
<anchor xml:id="__drag_service_tests_8cs_source_1l00005"/>00005 
<anchor xml:id="__drag_service_tests_8cs_source_1l00006"/><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags">00006</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_models">Luthetus.Common.Tests.Basis.Drags.Models</link>;
<anchor xml:id="__drag_service_tests_8cs_source_1l00007"/>00007 
<anchor xml:id="__drag_service_tests_8cs_source_1l00011"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_models_1_1_drag_service_tests">00011</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_models_1_1_drag_service_tests">DragServiceTests</link>
<anchor xml:id="__drag_service_tests_8cs_source_1l00012"/>00012 {
<anchor xml:id="__drag_service_tests_8cs_source_1l00018"/>00018 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__drag_service_tests_8cs_source_1l00019"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_models_1_1_drag_service_tests_1a1543da2ff56ff06d1c1d20a56074951e">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_models_1_1_drag_service_tests_1a1543da2ff56ff06d1c1d20a56074951e">Constructor</link>()
<anchor xml:id="__drag_service_tests_8cs_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="__drag_service_tests_8cs_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeDragServiceTests(out&#32;var&#32;dragService,&#32;out&#32;_);
<anchor xml:id="__drag_service_tests_8cs_source_1l00022"/>00022 
<anchor xml:id="__drag_service_tests_8cs_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(dragService);
<anchor xml:id="__drag_service_tests_8cs_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(dragService.DragStateWrap);
<anchor xml:id="__drag_service_tests_8cs_source_1l00025"/>00025 &#32;&#32;&#32;&#32;}
<anchor xml:id="__drag_service_tests_8cs_source_1l00026"/>00026 
<anchor xml:id="__drag_service_tests_8cs_source_1l00030"/>00030 &#32;&#32;&#32;&#32;[Fact]
<anchor xml:id="__drag_service_tests_8cs_source_1l00031"/><link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_models_1_1_drag_service_tests_1a068df74ccf10367e2a5544604aaccec4">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_drags_1_1_models_1_1_drag_service_tests_1a068df74ccf10367e2a5544604aaccec4">WithAction</link>()
<anchor xml:id="__drag_service_tests_8cs_source_1l00032"/>00032 &#32;&#32;&#32;&#32;{
<anchor xml:id="__drag_service_tests_8cs_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitializeDragServiceTests(out&#32;var&#32;dragService,&#32;out&#32;_);
<anchor xml:id="__drag_service_tests_8cs_source_1l00034"/>00034 
<anchor xml:id="__drag_service_tests_8cs_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.False(dragService.DragStateWrap.Value.ShouldDisplay);
<anchor xml:id="__drag_service_tests_8cs_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Null(dragService.DragStateWrap.Value.MouseEventArgs);
<anchor xml:id="__drag_service_tests_8cs_source_1l00037"/>00037 
<anchor xml:id="__drag_service_tests_8cs_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dragService.WithAction(x&#32;=&gt;&#32;x&#32;with
<anchor xml:id="__drag_service_tests_8cs_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__drag_service_tests_8cs_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShouldDisplay&#32;=&#32;<emphasis role="keyword">true</emphasis>,
<anchor xml:id="__drag_service_tests_8cs_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MouseEventArgs&#32;=&#32;<emphasis role="keyword">new</emphasis>(),
<anchor xml:id="__drag_service_tests_8cs_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__drag_service_tests_8cs_source_1l00043"/>00043 
<anchor xml:id="__drag_service_tests_8cs_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.True(dragService.DragStateWrap.Value.ShouldDisplay);
<anchor xml:id="__drag_service_tests_8cs_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.NotNull(dragService.DragStateWrap.Value.MouseEventArgs);
<anchor xml:id="__drag_service_tests_8cs_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="__drag_service_tests_8cs_source_1l00047"/>00047 
<anchor xml:id="__drag_service_tests_8cs_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitializeDragServiceTests(
<anchor xml:id="__drag_service_tests_8cs_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_models_1_1_i_drag_service">IDragService</link>&#32;dragService,
<anchor xml:id="__drag_service_tests_8cs_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;ServiceProvider&#32;serviceProvider)
<anchor xml:id="__drag_service_tests_8cs_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__drag_service_tests_8cs_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;services&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ServiceCollection()
<anchor xml:id="__drag_service_tests_8cs_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddScoped&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_models_1_1_i_drag_service">IDragService</link>,&#32;<link linkend="_class_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_models_1_1_drag_service">DragService</link>&gt;()
<anchor xml:id="__drag_service_tests_8cs_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.AddFluxor(options&#32;=&gt;&#32;options.ScanAssemblies(typeof(<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_models_1_1_i_drag_service">IDragService</link>).Assembly));
<anchor xml:id="__drag_service_tests_8cs_source_1l00055"/>00055 
<anchor xml:id="__drag_service_tests_8cs_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serviceProvider&#32;=&#32;services.BuildServiceProvider();
<anchor xml:id="__drag_service_tests_8cs_source_1l00057"/>00057 
<anchor xml:id="__drag_service_tests_8cs_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;store&#32;=&#32;serviceProvider.GetRequiredService&lt;IStore&gt;();
<anchor xml:id="__drag_service_tests_8cs_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;store.InitializeAsync().Wait();
<anchor xml:id="__drag_service_tests_8cs_source_1l00060"/>00060 
<anchor xml:id="__drag_service_tests_8cs_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dragService&#32;=&#32;serviceProvider.GetRequiredService&lt;<link linkend="_interface_luthetus_1_1_common_1_1_razor_lib_1_1_drags_1_1_models_1_1_i_drag_service">IDragService</link>&gt;();
<anchor xml:id="__drag_service_tests_8cs_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="__drag_service_tests_8cs_source_1l00063"/>00063 }
</programlisting></section>
