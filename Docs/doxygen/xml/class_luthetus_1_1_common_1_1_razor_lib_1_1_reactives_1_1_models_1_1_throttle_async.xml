<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async" kind="class" language="C#" prot="public">
    <compoundname>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a71bc6cb08cd569f3a842201d25241c66" prot="private" static="no" mutable="no">
        <type>readonly object</type>
        <definition>readonly object Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync._lockWorkItems</definition>
        <argsstring></argsstring>
        <name>_lockWorkItems</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync._lockWorkItems</qualifiedname>
        <initializer>= new()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="22" column="25" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a334c7f9e5c9e767230183e6791e3349a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>TimeSpan</type>
        <definition>TimeSpan Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ThrottleTimeSpan</definition>
        <argsstring></argsstring>
        <name>ThrottleTimeSpan</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ThrottleTimeSpan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="29" column="21" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="29" bodyend="29"/>
        <referencedby refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1af1971dc5e9e94fceb853f4d7cece20d8" compoundref="_throttle_async_8cs" startline="24" endline="27">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ThrottleAsync</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a49e5e55e3cd54d394c0c420f46f870f7" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Stack&lt; Func&lt; CancellationToken, Task &gt; &gt;</type>
        <definition>Stack&lt;Func&lt;CancellationToken, Task&gt; &gt; Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemStack</definition>
        <argsstring></argsstring>
        <name>WorkItemStack</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemStack</qualifiedname>
        <initializer>= new()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="30" column="18" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="30" bodyend="30"/>
        <referencedby refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1aae9fc2226e3005d308b43781b57db870" compoundref="_throttle_async_8cs" startline="34" endline="46">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.RunAsync</referencedby>
        <referencedby refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1ae2442663d99f2ab8a42f8b4a0a77200c" compoundref="_throttle_async_8cs" startline="79" endline="94">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.UntilIsEmpty</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a8a301937581614b77e1cf0e6e02cd6e9" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Task</type>
        <definition>Task Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemTask</definition>
        <argsstring></argsstring>
        <name>WorkItemTask</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemTask</qualifiedname>
        <initializer>= Task.CompletedTask</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="31" column="17" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="31" bodyend="31"/>
        <referencedby refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1aae9fc2226e3005d308b43781b57db870" compoundref="_throttle_async_8cs" startline="34" endline="46">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.RunAsync</referencedby>
        <referencedby refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1ae2442663d99f2ab8a42f8b4a0a77200c" compoundref="_throttle_async_8cs" startline="79" endline="94">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.UntilIsEmpty</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1abccf84bc1b5ac11ebb228368ec1dfa26" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="yes" protectedsettable="no">
        <type>bool</type>
        <definition>bool Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.IsStoppingFurtherPushes</definition>
        <argsstring></argsstring>
        <name>IsStoppingFurtherPushes</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.IsStoppingFurtherPushes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="32" column="17" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="32" bodyend="32"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1af1971dc5e9e94fceb853f4d7cece20d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ThrottleAsync</definition>
        <argsstring>(TimeSpan throttleTimeSpan)</argsstring>
        <name>ThrottleAsync</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ThrottleAsync</qualifiedname>
        <param>
          <type>TimeSpan</type>
          <declname>throttleTimeSpan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="24" column="12" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="24" bodyend="27"/>
        <references refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a334c7f9e5c9e767230183e6791e3349a" compoundref="_throttle_async_8cs" startline="29" endline="29">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ThrottleTimeSpan</references>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1aae9fc2226e3005d308b43781b57db870" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Task</type>
        <definition>Task Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.RunAsync</definition>
        <argsstring>(Func&lt; CancellationToken, Task &gt; workItem)</argsstring>
        <name>RunAsync</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.RunAsync</qualifiedname>
        <param>
          <type>Func&lt; CancellationToken, Task &gt;</type>
          <declname>workItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="34" column="17" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="34" bodyend="46"/>
        <references refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a49e5e55e3cd54d394c0c420f46f870f7" compoundref="_throttle_async_8cs" startline="30" endline="30">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemStack</references>
        <references refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a8a301937581614b77e1cf0e6e02cd6e9" compoundref="_throttle_async_8cs" startline="31" endline="31">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemTask</references>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1ae2442663d99f2ab8a42f8b4a0a77200c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task</type>
        <definition>async Task Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.UntilIsEmpty</definition>
        <argsstring>(TimeSpan? pollingTimeSpan=null, CancellationToken cancellationToken=default)</argsstring>
        <name>UntilIsEmpty</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.UntilIsEmpty</qualifiedname>
        <param>
          <type>TimeSpan?</type>
          <declname>pollingTimeSpan</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
          <defval>default</defval>
        </param>
        <briefdescription>
<para>This method awaits the last task prior to returning.<linebreak/>
<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para>This method does NOT prevent pushes while flushing. To do so, invoke StopFurtherPushes() prior to invoking this method.<linebreak/>
<linebreak/>
</para>
<para>The implementation of this method is a polling solution (as of this comment (2024-05-09)). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="79" column="23" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="79" bodyend="94"/>
        <references refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a49e5e55e3cd54d394c0c420f46f870f7" compoundref="_throttle_async_8cs" startline="30" endline="30">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemStack</references>
        <references refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a8a301937581614b77e1cf0e6e02cd6e9" compoundref="_throttle_async_8cs" startline="31" endline="31">Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.WorkItemTask</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a510a4c46c9cb33e29a5749a40c74107b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task</type>
        <definition>async Task Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ExecuteAsync</definition>
        <argsstring>(Task previousTask)</argsstring>
        <name>ExecuteAsync</name>
        <qualifiedname>Luthetus.Common.RazorLib.Reactives.Models.ThrottleAsync.ExecuteAsync</qualifiedname>
        <param>
          <type>Task</type>
          <declname>previousTask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="48" column="24" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="48" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async" kindref="compound">ThrottleAsync</ref> does not achieve the desired result. It blocks itself, and therefore is useless? I like the idea I had with a blocking background task. But it doesn&apos;t really extend here much, at least given how its currently written? </para>
    </briefdescription>
    <detaileddescription>
<para>Okay, I see, <ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async" kindref="compound">ThrottleAsync</ref> works SOLELY from the idea that you are using a fire and forget Task.Run and want to throttle the logic within the Task.Run at a top level. But you cannot use it inside a foreach loop because you are awaiting yourself.</para>
<para>In short <ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async" kindref="compound">ThrottleAsync</ref> is actually useful... because it keeps two invocations of code running concurrently. Because one has to wait for the other to finish.</para>
<para>And that many Task.Run will cancel out to the most recent one. But it still seems quite asinine? </para>
    </detaileddescription>
    <location file="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" line="20" column="7" bodyfile="Source/Lib/Common/Reactives/Models/ThrottleAsync.cs" bodystart="21" bodyend="95"/>
    <listofallmembers>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a71bc6cb08cd569f3a842201d25241c66" prot="private" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>_lockWorkItems</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a510a4c46c9cb33e29a5749a40c74107b" prot="private" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>ExecuteAsync</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1abccf84bc1b5ac11ebb228368ec1dfa26" prot="public" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>IsStoppingFurtherPushes</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1aae9fc2226e3005d308b43781b57db870" prot="public" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>RunAsync</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1af1971dc5e9e94fceb853f4d7cece20d8" prot="public" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>ThrottleAsync</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a334c7f9e5c9e767230183e6791e3349a" prot="public" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>ThrottleTimeSpan</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1ae2442663d99f2ab8a42f8b4a0a77200c" prot="public" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>UntilIsEmpty</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a49e5e55e3cd54d394c0c420f46f870f7" prot="public" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>WorkItemStack</name></member>
      <member refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_reactives_1_1_models_1_1_throttle_async_1a8a301937581614b77e1cf0e6e02cd6e9" prot="public" virt="non-virtual"><scope>Luthetus::Common::RazorLib::Reactives::Models::ThrottleAsync</scope><name>WorkItemTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
