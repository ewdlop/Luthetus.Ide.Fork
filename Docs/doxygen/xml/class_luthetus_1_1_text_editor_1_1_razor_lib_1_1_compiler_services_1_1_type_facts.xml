<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_type_facts" kind="class" language="C#" prot="public">
    <compoundname>Luthetus::TextEditor::RazorLib::CompilerServices::TypeFacts</compoundname>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_type_facts_1ad399f8ee4fcbe4b2831d219ab29e71e6" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_definition_node" kindref="compound">TypeDefinitionNode</ref></type>
        <definition>readonly TypeDefinitionNode Luthetus.TextEditor.RazorLib.CompilerServices.TypeFacts.Empty</definition>
        <argsstring></argsstring>
        <name>Empty</name>
        <qualifiedname>Luthetus.TextEditor.RazorLib.CompilerServices.TypeFacts.Empty</qualifiedname>
        <initializer>= new(
        AccessModifierKind.Public,
        false,
        StorageModifierKind.Class,
        new <ref refid="struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens_1_1_identifier_token" kindref="compound">IdentifierToken</ref>(new <ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f" kindref="member">TextEditorTextSpan</ref>(0, &quot;empty&quot;.Length, (byte)GenericDecorationKind.None, ResourceUri.Empty, &quot;empty&quot;)),
        typeof(void),
        null,
        null,
        null,
        openBraceToken: default,
        null)</initializer>
        <briefdescription>
<para>If a ISyntaxNode has a <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_clause_node" kindref="compound">TypeClauseNode</ref>, but is constructed during parsing process, prior to having found the <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_clause_node" kindref="compound">TypeClauseNode</ref>, then this will be used as the <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_clause_node" kindref="compound">TypeClauseNode</ref> for the time being until the actual is parsed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/TextEditor/CompilerServices/TypeFacts.cs" line="17" column="43" bodyfile="Source/Lib/TextEditor/CompilerServices/TypeFacts.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_type_facts_1a9d05cdd250032167919bfae4447b250c" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_definition_node" kindref="compound">TypeDefinitionNode</ref></type>
        <definition>readonly TypeDefinitionNode Luthetus.TextEditor.RazorLib.CompilerServices.TypeFacts.Pseudo</definition>
        <argsstring></argsstring>
        <name>Pseudo</name>
        <qualifiedname>Luthetus.TextEditor.RazorLib.CompilerServices.TypeFacts.Pseudo</qualifiedname>
        <initializer>= new(
        AccessModifierKind.Public,
        false,
        StorageModifierKind.Class,
        new <ref refid="struct_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_tokens_1_1_identifier_token" kindref="compound">IdentifierToken</ref>(new <ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f" kindref="member">TextEditorTextSpan</ref>(0, &quot;empty&quot;.Length, (byte)GenericDecorationKind.None, ResourceUri.Empty, &quot;empty&quot;)),
        typeof(void),
        null,
        null,
        null,
        openBraceToken: default,
        null)</initializer>
        <briefdescription>
<para>When parsing an expression, there may be a <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_function_invocation_node" kindref="compound">FunctionInvocationNode</ref> with a <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_generic_parameters_listing_node" kindref="compound">GenericParametersListingNode</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The expression code works however by passing around an &apos;IExpression expressionPrimary&apos; and an &apos;IExpression expressionSeconday&apos;.</para>
<para>This means we cannot add common logic for parsing a <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_generic_parameters_listing_node" kindref="compound">GenericParametersListingNode</ref> unless the expression parsing code were modified, or maybe a call to a separate function to parse <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_generic_parameters_listing_node" kindref="compound">GenericParametersListingNode</ref> could be done.</para>
<para>But, for now an experiment with making <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_generic_parameters_listing_node" kindref="compound">GenericParametersListingNode</ref> into a IExpressionNode is being tried out.</para>
<para>Any IExpressionNode that is part of a complete expression, will have the IExpressionNode.ResultTypeClauseNode of Pseudo in order to indicate that the node is part of a expression, but not itself an expression.</para>
<para>Use &apos;<ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_clause_node" kindref="compound">TypeClauseNode</ref> GenericParameterEntryNode.ResultTypeClauseNode =&gt; TypeClauseNodeFacts.Pseudo;&apos; so that some confusion can be avoided since one has to cast it explicitly as an IExpressionNode in order to access the property. (i.e.: <ref refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_generic_parameter_entry_node_1a20094058920ce8ab318276d21c6ab1b1" kindref="member">GenericParameterEntryNode.TypeClauseNode</ref> is not equal to GenericParameterEntryNode.ResultTypeClauseNode). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/TextEditor/CompilerServices/TypeFacts.cs" line="52" column="47" bodyfile="Source/Lib/TextEditor/CompilerServices/TypeFacts.cs" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Luthetus.TextEditor.RazorLib.CompilerServices.TypeFacts</label>
        <childnode refid="2" relation="usage">
          <edgelabel>Empty</edgelabel>
          <edgelabel>Pseudo</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.ISyntax</label>
        <link refid="interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_i_syntax"/>
      </node>
      <node id="4">
        <label>Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.ISyntaxNode</label>
        <link refid="interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_i_syntax_node"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Nodes.Interfaces.ICodeBlockOwner</label>
        <link refid="interface_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_fbb89b74d57a0670c22846a0a2d85ed6"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Nodes.TypeDefinitionNode</label>
        <link refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_nodes_1_1_type_definition_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Source/Lib/TextEditor/CompilerServices/TypeFacts.cs" line="9" column="15" bodyfile="Source/Lib/TextEditor/CompilerServices/TypeFacts.cs" bodystart="10" bodyend="63"/>
    <listofallmembers>
      <member refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_type_facts_1ad399f8ee4fcbe4b2831d219ab29e71e6" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::RazorLib::CompilerServices::TypeFacts</scope><name>Empty</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_type_facts_1a9d05cdd250032167919bfae4447b250c" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::RazorLib::CompilerServices::TypeFacts</scope><name>Pseudo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
