<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="_type_symbol_tests_8cs" kind="file" language="C#">
    <compoundname>TypeSymbolTests.cs</compoundname>
    <innerclass refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_symbols_1_1_type_symbol_tests" prot="public">Luthetus::TextEditor::Tests::Basis::CompilerServices::Syntax::Symbols::TypeSymbolTests</innerclass>
    <innernamespace refid="namespace_luthetus">Luthetus</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_text_editor">Luthetus::TextEditor</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_text_editor_1_1_tests">Luthetus::TextEditor::Tests</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis">Luthetus::TextEditor::Tests::Basis</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services">Luthetus::TextEditor::Tests::Basis::CompilerServices</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax">Luthetus::TextEditor::Tests::Basis::CompilerServices::Syntax</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_symbols">Luthetus::TextEditor::Tests::Basis::CompilerServices::Syntax::Symbols</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1_1_symbols" kindref="compound">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax.Symbols</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax" kindref="compound">Luthetus.TextEditor.RazorLib.CompilerServices.Syntax</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models" kindref="compound">Luthetus.TextEditor.RazorLib.Lexers.Models</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_symbols" kindref="compound">Luthetus.TextEditor.Tests.Basis.CompilerServices.Syntax.Symbols</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_symbols_1_1_type_symbol_tests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_symbols_1_1_type_symbol_tests" kindref="compound">TypeSymbolTests</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="19" refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_symbols_1_1_type_symbol_tests_1a056d83d74471336019a9e17915221b3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_basis_1_1_compiler_services_1_1_syntax_1_1_symbols_1_1_type_symbol_tests_1a056d83d74471336019a9e17915221b3d" kindref="member">Constructor</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>textSpan<sp/>=<sp/><ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_lexers_1_1_models_1a1ffd1a7706dfd364560b76d47467812f" kindref="member">TextEditorTextSpan</ref>.FabricateTextSpan(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>typeSymbol<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921baf2a8262cf8b0b60c6184fe3c0fc0f574" kindref="member">TypeSymbol</ref>(textSpan);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(textSpan,<sp/>typeSymbol.TextSpan);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(<ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_compiler_services_1_1_syntax_1ae4bcfe414c318a050bbef43ec92f921b" kindref="member">SyntaxKind</ref>.TypeSymbol,<sp/>typeSymbol.SyntaxKind);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Equal(typeSymbol.SyntaxKind.ToString(),<sp/>typeSymbol.SymbolKindString);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Source/Tests/TextEditor/Basis/CompilerServices/Syntax/Symbols/TypeSymbolTests.cs"/>
  </compounddef>
</doxygen>
