<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="dir_473c710b8197f1a54b43cbbbb95289e2" kind="dir">
    <compoundname>Source/Tests/CompilerServices/CSharpProject/Basis</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>One might decide to have a unit test for every public API.</para>
<para>That is the idea of this folder. A one to one unit test per public API at minimum.</para>
<para>Whether every public API will be done or not is being decided upon. But, perhaps that wording illustrates the purpose of this folder.</para>
<para><hruler/>
</para>
<para>Ideas:</para>
<para><itemizedlist>
<listitem><para>Automate test heatmap... If a C# compiler service could identify all publically scoped API, it could verify if after the basis was ran whether all public API was used.</para>
</listitem><listitem><para>Visualize the &quot;basis&quot;... so one could look at a given release of <ref refid="namespace_luthetus_1_1_ide" kindref="compound">Luthetus.Ide</ref> and then bring up the &quot;UnitTests-Basis-Visualization&quot; for that given release.<itemizedlist>
<listitem><para>Draw a graph of all public API references.</para>
</listitem><listitem><para>Color the connection green if no exception occurred.</para>
</listitem><listitem><para>Color the connection red if an exception occurred.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Automate test generation...<itemizedlist>
<listitem><para>Try any meaningful arguments, automatically as their own test cast. Ex: a method which accepts an &apos;int&apos;. One could decide that meaningful arguments are [ Int.Min, -2, -1, 0, 1, 2 Int.Max ]</para>
</listitem><listitem><para>Concerns: could automated test cases result in bad outcomes? I.e. somehow the test case does bank.Withdraw(Int.Max). As per the concern, none of this automation exists at the moment. </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="Source/Tests/CompilerServices/CSharpProject/Basis/"/>
  </compounddef>
</doxygen>
