<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1_1_view_model_unsafe_state" kind="class" language="C#" prot="public">
    <compoundname>Luthetus::TextEditor::RazorLib::TextEditors::Models::Internals::ViewModelUnsafeState</compoundname>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1_1_view_model_unsafe_state_1abad5d2ba427632e6fd1cab63629c3d2d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals.ViewModelUnsafeState.ShouldSetFocusAfterNextRender</definition>
        <argsstring></argsstring>
        <name>ShouldSetFocusAfterNextRender</name>
        <qualifiedname>Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals.ViewModelUnsafeState.ShouldSetFocusAfterNextRender</qualifiedname>
        <briefdescription>
<para>If one opens a file with the &apos;Enter&apos; key, they might want focus to then be set on that newly opened file. However, perhaps one wants the &apos;Space&apos; key to also open the file, but not set focus to it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" line="26" column="17" bodyfile="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="property" id="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1_1_view_model_unsafe_state_1a8b1ce5a16b99ff4c1af0447090517628" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals.ViewModelUnsafeState.ShouldRevealCursor</definition>
        <argsstring></argsstring>
        <name>ShouldRevealCursor</name>
        <qualifiedname>Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals.ViewModelUnsafeState.ShouldRevealCursor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" line="27" column="17" bodyfile="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="property" id="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1_1_view_model_unsafe_state_1af885b93b53cbc546099ce20296f74eee" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals.ViewModelUnsafeState.CursorIsIntersecting</definition>
        <argsstring></argsstring>
        <name>CursorIsIntersecting</name>
        <qualifiedname>Luthetus.TextEditor.RazorLib.TextEditors.Models.Internals.ViewModelUnsafeState.CursorIsIntersecting</qualifiedname>
        <briefdescription>
<para>Relates to whether the cursor is within the viewable area of the Text Editor on the UI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" line="31" column="17" bodyfile="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" bodystart="31" bodyend="31"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This class is a hack and was made on (2024-03-09).<linebreak/>
<linebreak/>
. </para>
    </briefdescription>
    <detaileddescription>
<para>The reason for this class: This same hack existed prior, but as value type properties that were on the <ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aa2a2da032900659e3cf98e4b28fc476d" kindref="member">TextEditorViewModel</ref>.<linebreak/>
<linebreak/>
</para>
<para>The <ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aa2a2da032900659e3cf98e4b28fc476d" kindref="member">TextEditorViewModel</ref> is an immutable type.<linebreak/>
<linebreak/>
</para>
<para>Originally the value type properties were added to <ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aa2a2da032900659e3cf98e4b28fc476d" kindref="member">TextEditorViewModel</ref> as a hack to permit the UI to mark the cursor as being &apos;within view&apos;, but not trigger a re-render.<linebreak/>
<linebreak/>
</para>
<para>But, since <ref refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1aa2a2da032900659e3cf98e4b28fc476d" kindref="member">TextEditorViewModel</ref> is immutable, this hack was unreliable. At times, the value type that was changed, was from an out of date view model. And as result had no effect.<linebreak/>
<linebreak/>
</para>
<para>By object-boxing the value types, the hack is more reliable.<linebreak/>
<linebreak/>
 </para>
    </detaileddescription>
    <location file="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" line="19" column="7" bodyfile="Source/Lib/TextEditor/TextEditors/Models/Internals/ViewModelUnsafeState.cs" bodystart="20" bodyend="32"/>
    <listofallmembers>
      <member refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1_1_view_model_unsafe_state_1af885b93b53cbc546099ce20296f74eee" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::RazorLib::TextEditors::Models::Internals::ViewModelUnsafeState</scope><name>CursorIsIntersecting</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1_1_view_model_unsafe_state_1a8b1ce5a16b99ff4c1af0447090517628" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::RazorLib::TextEditors::Models::Internals::ViewModelUnsafeState</scope><name>ShouldRevealCursor</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1_1_internals_1_1_view_model_unsafe_state_1abad5d2ba427632e6fd1cab63629c3d2d" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::RazorLib::TextEditors::Models::Internals::ViewModelUnsafeState</scope><name>ShouldSetFocusAfterNextRender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
