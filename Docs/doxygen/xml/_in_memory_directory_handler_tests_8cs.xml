<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="_in_memory_directory_handler_tests_8cs" kind="file" language="C#">
    <compoundname>InMemoryDirectoryHandlerTests.cs</compoundname>
    <innerclass refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests" prot="public">Luthetus::Common::Tests::Basis::FileSystems::Models::InMemoryDirectoryHandlerTests</innerclass>
    <innernamespace refid="namespace_luthetus">Luthetus</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_common">Luthetus::Common</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_common_1_1_tests">Luthetus::Common::Tests</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_common_1_1_tests_1_1_basis">Luthetus::Common::Tests::Basis</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems">Luthetus::Common::Tests::Basis::FileSystems</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models">Luthetus::Common::Tests::Basis::FileSystems::Models</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider">Luthetus::Common::RazorLib::FileSystems::Models::InMemoryFileSystemProvider</innernamespace>
    <innernamespace refid="namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_file_systems_tests_helper">Luthetus::Common::Tests::Basis::FileSystems::FileSystemsTestsHelper</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models" kindref="compound">Luthetus.Common.RazorLib.FileSystems.Models</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Microsoft.Extensions.DependencyInjection;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">static<sp/><ref refid="namespace_luthetus" kindref="compound">Luthetus</ref>.<ref refid="namespace_luthetus_1_1_common" kindref="compound">Common</ref>.<ref refid="namespace_luthetus_1_1_common_1_1_razor_lib" kindref="compound">RazorLib</ref>.<ref refid="namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems" kindref="compound">FileSystems</ref>.<ref refid="namespace_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models" kindref="compound">Models</ref>.<ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">static<sp/><ref refid="namespace_luthetus" kindref="compound">Luthetus</ref>.<ref refid="namespace_luthetus_1_1_common" kindref="compound">Common</ref>.<ref refid="namespace_luthetus_1_1_common_1_1_tests" kindref="compound">Tests</ref>.<ref refid="namespace_luthetus_1_1_common_1_1_tests_1_1_basis" kindref="compound">Basis</ref>.<ref refid="namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems" kindref="compound">FileSystems</ref>.<ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_file_systems_tests_helper" kindref="compound">FileSystemsTestsHelper</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models" kindref="compound">Luthetus.Common.Tests.Basis.FileSystems.Models</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests" kindref="compound">InMemoryDirectoryHandlerTests</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="14" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1ab032f6b79fe3a002bd92eff661c72440" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1ab032f6b79fe3a002bd92eff661c72440" kindref="member">Constructor</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>InMemoryDirectoryHandler(</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InMemoryFileSystemProvider<sp/>inMemoryFileSystemProvider,<sp/>IEnvironmentProvider<sp/>environmentProvider)</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>assertion<sp/>presumes<sp/>that<sp/>FileSystemsTestsHelper.InitializeFileSystemsTests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>returning<sp/>as<sp/>an<sp/>out<sp/>variable,<sp/>an<sp/>instance<sp/>of<sp/>InMemoryDirectoryHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.IsType&lt;InMemoryDirectoryHandler&gt;(fileSystemProvider.Directory);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="32" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a5a041e951c171dde97c8c4d77f02ab24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a5a041e951c171dde97c8c4d77f02ab24" kindref="member">ExistsAsync</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>Task&lt;bool&gt;<sp/>ExistsAsync(</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>absolutePathString,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.NonExistingDirectory));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>false<sp/>because,<sp/>&apos;WellKnownPaths.Files.AdditionTxt&apos;<sp/>is<sp/>a<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Files.AdditionTxt));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Files.NonExistingFile));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="53" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a6df02f637a48cfc94254c64494dee9c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a6df02f637a48cfc94254c64494dee9c4" kindref="member">CreateDirectoryAsync</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>async<sp/>Task<sp/>CreateDirectoryAsync(</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>absolutePathString,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dirExists<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.NonExistingDirectory);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>fileExists<sp/>=<sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Directories.NonExistingDirectory);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(dirExists<sp/>&amp;&amp;<sp/>fileExists);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.CreateDirectoryAsync(WellKnownPaths.Directories.NonExistingDirectory);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirExists<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.NonExistingDirectory);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileExists<sp/>=<sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Directories.NonExistingDirectory);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(dirExists<sp/>&amp;&amp;<sp/>!fileExists);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="79" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a35e865d56b5c7dd1a28fa86f5bfe13ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a35e865d56b5c7dd1a28fa86f5bfe13ce" kindref="member">DeleteAsync</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>async<sp/>Task<sp/>DeleteAsync(</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>absolutePathString,<sp/>bool<sp/>recursive,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dirExists<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Homework);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(dirExists);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>a<sp/>few<sp/>files<sp/>written<sp/>out<sp/>to<sp/>the<sp/>in-memory<sp/>filesystem<sp/>when<sp/>&apos;InitializeFileSystemsTests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>invoked.<sp/>In<sp/>this<sp/>code<sp/>block<sp/>a<sp/>check<sp/>for<sp/>the<sp/>existence<sp/>of<sp/>the<sp/>child<sp/>files<sp/>will<sp/>be<sp/>done.<sp/>(2023-11-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.AdditionTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SubtractionTxt));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Biology)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.NervousSystemTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SkeletalSystemTxt));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.DeleteAsync(WellKnownPaths.Directories.Homework,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirExists<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Homework);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(dirExists);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>a<sp/>few<sp/>files<sp/>written<sp/>out<sp/>to<sp/>the<sp/>in-memory<sp/>filesystem<sp/>when<sp/>&apos;InitializeFileSystemsTests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>invoked.<sp/>In<sp/>this<sp/>code<sp/>block<sp/>a<sp/>check<sp/>for<sp/>the<sp/>existence<sp/>of<sp/>the<sp/>child<sp/>files<sp/>will<sp/>be<sp/>done.<sp/>(2023-11-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.AdditionTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SubtractionTxt));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Biology)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.NervousSystemTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SkeletalSystemTxt));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="137" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a32acc0e93fa8ecb85185a57959a62195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a32acc0e93fa8ecb85185a57959a62195" kindref="member">CopyAsync</ref>()</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>async<sp/>Task<sp/>CopyAsync(</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>sourceAbsoluteFileString,<sp/>string<sp/>destinationAbsolutePathString,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Homework));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>a<sp/>few<sp/>files<sp/>written<sp/>out<sp/>to<sp/>the<sp/>in-memory<sp/>filesystem<sp/>when<sp/>&apos;InitializeFileSystemsTests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>invoked.<sp/>In<sp/>this<sp/>code<sp/>block<sp/>a<sp/>check<sp/>for<sp/>the<sp/>existence<sp/>of<sp/>the<sp/>child<sp/>files<sp/>will<sp/>be<sp/>done.<sp/>(2023-11-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>source<sp/>files<sp/>do<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.AdditionTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SubtractionTxt));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Biology)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.NervousSystemTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SkeletalSystemTxt));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>destination<sp/>files<sp/>do<sp/>NOT<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/addition.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/subtraction.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/nervousSystem.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/skeletalSystem.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>an<sp/>empty<sp/>dir<sp/>or<sp/>sub-dir<sp/>which<sp/>is<sp/>empty<sp/>copy<sp/>invoke<sp/>might<sp/>not<sp/>work<sp/>--<sp/>check<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.CopyAsync(WellKnownPaths.Directories.Homework,<sp/></highlight><highlight class="stringliteral">&quot;/ShoppingLists/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>a<sp/>few<sp/>files<sp/>written<sp/>out<sp/>to<sp/>the<sp/>in-memory<sp/>filesystem<sp/>when<sp/>&apos;InitializeFileSystemsTests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>invoked.<sp/>In<sp/>this<sp/>code<sp/>block<sp/>a<sp/>check<sp/>for<sp/>the<sp/>existence<sp/>of<sp/>the<sp/>child<sp/>files<sp/>will<sp/>be<sp/>done.<sp/>(2023-11-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>source<sp/>still<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.AdditionTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SubtractionTxt));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Biology)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.NervousSystemTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SkeletalSystemTxt));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>destinations<sp/>now<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/addition.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/subtraction.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/nervousSystem.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/skeletalSystem.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="220" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a5d937710f49a4310c87227bc5a6013a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a5d937710f49a4310c87227bc5a6013a6" kindref="member">MoveAsync</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>async<sp/>Task<sp/>MoveAsync(</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>sourceAbsolutePathString,<sp/>string<sp/>destinationAbsolutePathString,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Homework));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>a<sp/>few<sp/>files<sp/>written<sp/>out<sp/>to<sp/>the<sp/>in-memory<sp/>filesystem<sp/>when<sp/>&apos;InitializeFileSystemsTests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>invoked.<sp/>In<sp/>this<sp/>code<sp/>block<sp/>a<sp/>check<sp/>for<sp/>the<sp/>existence<sp/>of<sp/>the<sp/>child<sp/>files<sp/>will<sp/>be<sp/>done.<sp/>(2023-11-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>source<sp/>files<sp/>do<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.AdditionTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SubtractionTxt));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Biology)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.NervousSystemTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SkeletalSystemTxt));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>destination<sp/>files<sp/>do<sp/>NOT<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/addition.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/subtraction.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/nervousSystem.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/skeletalSystem.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>an<sp/>empty<sp/>dir<sp/>or<sp/>sub-dir<sp/>which<sp/>is<sp/>empty<sp/>copy<sp/>invoke<sp/>might<sp/>not<sp/>work<sp/>--<sp/>check<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.MoveAsync(WellKnownPaths.Directories.Homework,<sp/></highlight><highlight class="stringliteral">&quot;/ShoppingLists/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>a<sp/>few<sp/>files<sp/>written<sp/>out<sp/>to<sp/>the<sp/>in-memory<sp/>filesystem<sp/>when<sp/>&apos;InitializeFileSystemsTests&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>invoked.<sp/>In<sp/>this<sp/>code<sp/>block<sp/>a<sp/>check<sp/>for<sp/>the<sp/>existence<sp/>of<sp/>the<sp/>child<sp/>files<sp/>will<sp/>be<sp/>done.<sp/>(2023-11-12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>source<sp/>NO<sp/>longer<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.AdditionTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SubtractionTxt));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Biology)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.NervousSystemTxt)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(WellKnownPaths.Files.SkeletalSystemTxt));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>destinations<sp/>now<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/addition.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Math/subtraction.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.Directory.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/nervousSystem.txt&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>fileSystemProvider.File.ExistsAsync(</highlight><highlight class="stringliteral">&quot;/ShoppingLists/Homework/Biology/skeletalSystem.txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="303" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a504796b431b159a2b0ba361d2524fa4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a504796b431b159a2b0ba361d2524fa4c" kindref="member">GetDirectoriesAsync</ref>()</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>Task&lt;string[]&gt;<sp/>GetDirectoriesAsync(</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>absolutePathString,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Homework));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childDirectoryPaths<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.GetDirectoriesAsync(WellKnownPaths.Directories.Homework);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Math);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Biology);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.AdditionTxt);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SubtractionTxt);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.NervousSystemTxt);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SkeletalSystemTxt);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Root));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childDirectoryPaths<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.GetDirectoriesAsync(WellKnownPaths.Directories.Root);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Homework);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Math);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Biology);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.AdditionTxt);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SubtractionTxt);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.NervousSystemTxt);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childDirectoryPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SkeletalSystemTxt);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="347" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a94dd29b5ba9f8462c86c4d5466f388a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a94dd29b5ba9f8462c86c4d5466f388a2" kindref="member">GetFilesAsync</ref>()</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>Task&lt;string[]&gt;<sp/>GetFilesAsync(</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>absolutePathString,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childFilePaths<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.GetFilesAsync(WellKnownPaths.Directories.Math);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childFilePaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.AdditionTxt);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childFilePaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SubtractionTxt);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childFilePaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.NervousSystemTxt);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childFilePaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SkeletalSystemTxt);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Root));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childFilePaths<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.GetFilesAsync(WellKnownPaths.Directories.Root);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Empty(childFilePaths);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>[Fact]</highlight></codeline>
<codeline lineno="385" refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a4847856281fde27800d004d2b1b6c72a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_luthetus_1_1_common_1_1_tests_1_1_basis_1_1_file_systems_1_1_models_1_1_in_memory_directory_handler_tests_1a4847856281fde27800d004d2b1b6c72a" kindref="member">EnumerateFileSystemEntriesAsync</ref>()</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>public<sp/>async<sp/>Task&lt;IEnumerable&lt;string&gt;&gt;<sp/>EnumerateFileSystemEntriesAsync(</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>absolutePathString,<sp/>CancellationToken<sp/>cancellationToken<sp/>=<sp/>default)</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitializeFileSystemsTests(</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_environment_provider" kindref="compound">InMemoryEnvironmentProvider</ref><sp/>environmentProvider,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="class_luthetus_1_1_common_1_1_razor_lib_1_1_file_systems_1_1_models_1_1_in_memory_file_system_provider" kindref="compound">InMemoryFileSystemProvider</ref><sp/>fileSystemProvider,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>ServiceProvider<sp/>serviceProvider);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Homework));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childPaths<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.EnumerateFileSystemEntriesAsync(WellKnownPaths.Directories.Homework);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Math);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Biology);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.AdditionTxt);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SubtractionTxt);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.NervousSystemTxt);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SkeletalSystemTxt);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Root));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childPaths<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.EnumerateFileSystemEntriesAsync(WellKnownPaths.Directories.Root);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Homework);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Math);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Directories.Biology);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.AdditionTxt);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SubtractionTxt);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.NervousSystemTxt);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SkeletalSystemTxt);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(await<sp/>fileSystemProvider.Directory.ExistsAsync(WellKnownPaths.Directories.Math));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childPaths<sp/>=<sp/>await<sp/>fileSystemProvider.Directory.EnumerateFileSystemEntriesAsync(WellKnownPaths.Directories.Math);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.AdditionTxt);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Contains(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SubtractionTxt);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.NervousSystemTxt);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.DoesNotContain(childPaths,<sp/>x<sp/>=&gt;<sp/>x<sp/>==<sp/>WellKnownPaths.Files.SkeletalSystemTxt);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Source/Tests/Common/Basis/FileSystems/Models/InMemoryDirectoryHandlerTests.cs"/>
  </compounddef>
</doxygen>
