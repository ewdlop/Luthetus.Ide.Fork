<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds" kind="class" language="C#" prot="public">
    <compoundname>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</compoundname>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a69cc4982f6094d982833dc3f85f6dea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.AltPlusDown_THEN_MoveLineDown</definition>
        <argsstring>()</argsstring>
        <name>AltPlusDown_THEN_MoveLineDown</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.AltPlusDown_THEN_MoveLineDown</qualifiedname>
        <briefdescription>
<para>[] Alt + Down =&gt; move line down [] see the other version of this </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="16" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="16" bodyend="43"/>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690" compoundref="_text_editor_view_model_8cs" startline="97" endline="97">Luthetus.TextEditor.RazorLib.TextEditors.Models.ResourceUri</references>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1abbf5dd6f1253055f630606d3e05324fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.AltPlusUp_THEN_MoveLineUp</definition>
        <argsstring>()</argsstring>
        <name>AltPlusUp_THEN_MoveLineUp</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.AltPlusUp_THEN_MoveLineUp</qualifiedname>
        <briefdescription>
<para>[] Alt + Up =&gt; move line up [] 2 ways about this? [] Way One [] Determine the start position index of the current line. [] Cut the line above [] Paste the contents at the determined start position index. [] Way Two [] Determine the start position index of the previous line. [] Cut the current line [] Paste the contents at the determined start position index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="58" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="58" bodyend="139"/>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690" compoundref="_text_editor_view_model_8cs" startline="97" endline="97">Luthetus.TextEditor.RazorLib.TextEditors.Models.ResourceUri</references>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b" compoundref="_text_editor_cursor_8cs" startline="5" endline="35">Luthetus.TextEditor.RazorLib.Cursors.Models.TextEditorCursor</references>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a1f25c59eb41a1afb21d55d0402aebe1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.CtrlPlusAltPlusArrowLeftOrArrowRight_THEN_MoveCamelCase</definition>
        <argsstring>()</argsstring>
        <name>CtrlPlusAltPlusArrowLeftOrArrowRight_THEN_MoveCamelCase</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.CtrlPlusAltPlusArrowLeftOrArrowRight_THEN_MoveCamelCase</qualifiedname>
        <briefdescription>
<para>[] Ctrl + Alt + (ArrowLeft | ArrowRight) =&gt; move camel case [] while (LetterOrDigit) if IsCapitalized break; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="146" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="146" bodyend="213"/>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690" compoundref="_text_editor_view_model_8cs" startline="97" endline="97">Luthetus.TextEditor.RazorLib.TextEditors.Models.ResourceUri</references>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b" compoundref="_text_editor_cursor_8cs" startline="5" endline="35">Luthetus.TextEditor.RazorLib.Cursors.Models.TextEditorCursor</references>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a4bf3c1a3657b869a2411d257cd439aa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.Home_THEN_MoreFunctionality</definition>
        <argsstring>()</argsstring>
        <name>Home_THEN_MoreFunctionality</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.Home_THEN_MoreFunctionality</qualifiedname>
        <briefdescription>
<para>[] Home keystroke [] Should &quot;stop early&quot; at the end of the indentation. [] Go to column 0 [] While (indentation) ++column [] Then repressing the keystroke at the end of the indentation goes to the actual start of the line [] Track current column [] Do the &quot;stop early&quot; logic [] Compare if previous column and new current column are the same [] if the same then go to column 0 [] otherwise stay where you are. [] If at start of line then home takes to end of indentation. [] Do the &quot;stop early&quot; logic [] If within starting indentation then go to the end of the starting indentation. [] Do the &quot;stop early&quot; logic </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="232" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="232" bodyend="313"/>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690" compoundref="_text_editor_view_model_8cs" startline="97" endline="97">Luthetus.TextEditor.RazorLib.TextEditors.Models.ResourceUri</references>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b" compoundref="_text_editor_cursor_8cs" startline="5" endline="35">Luthetus.TextEditor.RazorLib.Cursors.Models.TextEditorCursor</references>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a8789d30e43c004fda39c1e5739fb6194" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.CtrlPlusEnter_THEN_SupportMatchIndentation</definition>
        <argsstring>()</argsstring>
        <name>CtrlPlusEnter_THEN_SupportMatchIndentation</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.CtrlPlusEnter_THEN_SupportMatchIndentation</qualifiedname>
        <briefdescription>
<para>[] Match indentation on newline [] insert line above command [] The code to get the indentation is already done in the &apos;HandleOnKeyDown(...)&apos; method, note: I totally spelled the method name wrong. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="322" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1abe6302651eef9274fc6730c0ed74ea3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.ShiftPlusEnter_THEN_SupportMatchIndentation</definition>
        <argsstring>()</argsstring>
        <name>ShiftPlusEnter_THEN_SupportMatchIndentation</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.ShiftPlusEnter_THEN_SupportMatchIndentation</qualifiedname>
        <briefdescription>
<para>[] Match indentation on newline [] insert line below command [] The code to get the indentation is already done in the &apos;HandleOnKeyDown(...)&apos; method, note: I totally spelled the method name wrong. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="334" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1af5a6cb04b80e38a68e2080f4a28a7856" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.NoSelectionPlusShiftPlusTabPlusCursorAtIndentation_THEN_IndentLess</definition>
        <argsstring>()</argsstring>
        <name>NoSelectionPlusShiftPlusTabPlusCursorAtIndentation_THEN_IndentLess</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.NoSelectionPlusShiftPlusTabPlusCursorAtIndentation_THEN_IndentLess</qualifiedname>
        <briefdescription>
<para>[] No selection + { Shift + Tab } + Cursor positioned at or in the starting indentation should =&gt; IndentLess [] Go to column 0 [] While (indentation) ++column [] if pass by the cursor, then can break early with success [] if sees !indentation then break with failure </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="347" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="347" bodyend="434"/>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_text_editors_1_1_models_1a435ccef09e2ba83022e8cf378fc0f690" compoundref="_text_editor_view_model_8cs" startline="97" endline="97">Luthetus.TextEditor.RazorLib.TextEditors.Models.ResourceUri</references>
        <references refid="namespace_luthetus_1_1_text_editor_1_1_razor_lib_1_1_cursors_1_1_models_1a8373e854ca1ddf152a3b5372ea18c20b" compoundref="_text_editor_cursor_8cs" startline="5" endline="35">Luthetus.TextEditor.RazorLib.Cursors.Models.TextEditorCursor</references>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1add8d56cb194b95c88416ae63e1449081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.F7_THEN_RelatedFilesQuickpick</definition>
        <argsstring>()</argsstring>
        <name>F7_THEN_RelatedFilesQuickpick</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.F7_THEN_RelatedFilesQuickpick</qualifiedname>
        <briefdescription>
<para>[] F7 =&gt; Related Files quickpick [] Read directory which contains the current file [] If there are any direct descendent files of that directory then check the name against a predicate if it &quot;matches&quot; with the active file and add to list if it does [] Show the list to the user [] Open the file they pick [] Or let them cancel with &apos;Escape&apos; key </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="446" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1ae5343f7a0962944f91c769f9fd838f3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.CtrlPlusTab_THEN_FileOrContextOrToolQuickpick</definition>
        <argsstring>()</argsstring>
        <name>CtrlPlusTab_THEN_FileOrContextOrToolQuickpick</name>
        <qualifiedname>Luthetus.TextEditor.Tests.Adhoc.NewKeybinds.CtrlPlusTab_THEN_FileOrContextOrToolQuickpick</qualifiedname>
        <briefdescription>
<para>[] Ctrl + Tab =&gt; Quick Pick file or context/tool [] I can probably make this task first draft far simpler by not closing the menu on-ctrl-key-up [] Visual Studio has where you hold ctrl, but it sounds like a pain to do and it makes me want to procrastinate. [] If I just have Ctrl + Tab open the menu then either enter to select and submit form or escape to close menu then it would be a lot easier. [] I say this because I imagine I need something stateful in order to have on-ctrl-key-up logic work. I have to maintain the state of this and subscribe to the event in a sort of way. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="461" column="13" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="461" bodyend="464"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" line="9" column="7" bodyfile="Source/Tests/TextEditor/Adhoc/NewKeybinds.cs" bodystart="10" bodyend="465"/>
    <listofallmembers>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a69cc4982f6094d982833dc3f85f6dea1" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>AltPlusDown_THEN_MoveLineDown</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1abbf5dd6f1253055f630606d3e05324fd" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>AltPlusUp_THEN_MoveLineUp</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a1f25c59eb41a1afb21d55d0402aebe1d" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>CtrlPlusAltPlusArrowLeftOrArrowRight_THEN_MoveCamelCase</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a8789d30e43c004fda39c1e5739fb6194" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>CtrlPlusEnter_THEN_SupportMatchIndentation</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1ae5343f7a0962944f91c769f9fd838f3f" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>CtrlPlusTab_THEN_FileOrContextOrToolQuickpick</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1add8d56cb194b95c88416ae63e1449081" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>F7_THEN_RelatedFilesQuickpick</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1a4bf3c1a3657b869a2411d257cd439aa9" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>Home_THEN_MoreFunctionality</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1af5a6cb04b80e38a68e2080f4a28a7856" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>NoSelectionPlusShiftPlusTabPlusCursorAtIndentation_THEN_IndentLess</name></member>
      <member refid="class_luthetus_1_1_text_editor_1_1_tests_1_1_adhoc_1_1_new_keybinds_1abe6302651eef9274fc6730c0ed74ea3d" prot="public" virt="non-virtual"><scope>Luthetus::TextEditor::Tests::Adhoc::NewKeybinds</scope><name>ShiftPlusEnter_THEN_SupportMatchIndentation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
