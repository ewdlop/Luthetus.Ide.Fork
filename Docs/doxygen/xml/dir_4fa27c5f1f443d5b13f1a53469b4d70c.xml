<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="dir_4fa27c5f1f443d5b13f1a53469b4d70c" kind="dir">
    <compoundname>Source/Lib/Ide/Ide.RazorLib/Workspaces</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The workspaces is needed.</para>
<para>It will be like VsCode, where one can have many folders grouped in a tree view.</para>
<para>I need to move out all the .NET code.</para>
<para>I&apos;m not sure how to go about it.</para>
<para>Does this new project which contains the .NET code reference the IDE? Or does the IDE reference the new project?</para>
<para>I think the long term answer is that the new project is going to reference the IDE.</para>
<para>But, the first step is probably moving the code 1 to 1 over to the new project, then having the IDE reference this new project FOR NOW.</para>
<para>I suppose this is an inversion of control scenario.</para>
<para>But taking the step to move it into a separate project should hit me with ideas on some kind of interface that I can expose from the IDE, such that the new project can give components to the IDE but the IDE doesn&apos;t know who the project is?</para>
<para>Is it perhaps just a List&lt;Panel&gt;? Ooooo is this a good idea in my head?????</para>
<para>What if all these &quot;new projects&quot; made a menu option in the IDE header&apos;s &quot;View&quot; dropdown, which has a submenu, which contains all the components that were made available by &quot;installing&quot; that project.</para>
<para>And I say &quot;installing&quot;, but I don&apos;t actually have a clue what I&apos;m doing right now. I have seen &quot;MEF&quot; (maybe this means microsoft extension framework), I only saw it once in passing because of a Visual Studio extension maybe it was a roslyn analyzer????</para>
<para>I should probably look into what &quot;MEF&quot; is.</para>
<para>Juuuuuuuuuussssst mooooooove theeeeeeee coooooodeeeeeeee already</para>
<para>But wait! before I do that I need to write this down. The keymap is not good because anyone can choose to use &quot;stopPropagation&quot; and then the event won&apos;t bubble up to the global context record.</para>
<para>HOOoooooOOOOwwwwweeeeevveeeeeerrr if I use javascript to make my own onkeydown event, I can bypass anyone&apos;s component code.</para>
<para>I do recall though, sometimes I want to allow the component code to have first go at the keymap.</para>
<para>In Visual Studio Code I wanted to use Neovim in the integrated terminal, but also be able to use a keymap to set focus to the VSCode workspace panel. Uhhh I think this is what I was doing.</para>
<para>Something about me not being able to go to VSCode because I&apos;m in the terminal or maybe it was vice versa idk</para>
<para>I said the order that the events should happen in a .json file and then it worked?</para>
<para>Wow, I somehow perfectly ripped out all the .NET code from the IDE and moved it in one sitting. The app runs without issue and the onnly difference is there&apos;s no solution explorer or test explorer (probably other UI that I&apos;m not listing here but you get the point).</para>
<para>I can open .cs files and the syntax highlighting and all is there.</para>
<para>just as I wanted. I wanted to separate the compiler services and the UI that can compliment them.</para>
<para>tired and my head hurts :3 </para>
    </detaileddescription>
    <location file="Source/Lib/Ide/Ide.RazorLib/Workspaces/"/>
  </compounddef>
</doxygen>
