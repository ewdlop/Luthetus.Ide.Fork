<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_models" kind="namespace" language="C#">
    <compoundname>Luthetus::Ide::RazorLib::Shareds::Models</compoundname>
    <innerclass refid="class_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_models_1_1_background_task_dialog_model" prot="public">Luthetus::Ide::RazorLib::Shareds::Models::BackgroundTaskDialogModel</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_models_1a942f858948951da1e02ba10080f514ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>record</type>
        <definition>record Luthetus.Ide.RazorLib.Shareds.Models.FooterJustifyEndComponent</definition>
        <argsstring>(Key&lt; FooterJustifyEndComponent &gt; Key, Type ComponentType, Dictionary&lt; string, object?&gt;? ComponentParameterMap)</argsstring>
        <name>FooterJustifyEndComponent</name>
        <qualifiedname>Luthetus.Ide.RazorLib.Shareds.Models.FooterJustifyEndComponent</qualifiedname>
        <param>
          <type>Key&lt; FooterJustifyEndComponent &gt;</type>
          <declname>Key</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>ComponentType</declname>
        </param>
        <param>
          <type>Dictionary&lt; string, object?&gt;?</type>
          <declname>ComponentParameterMap</declname>
        </param>
        <briefdescription>
<para>A RenderFragment would be more optimized than rendering a DynamicComponent. </para>
        </briefdescription>
        <detaileddescription>
<para>However, there are various issues relating to UI events and focus when using a RenderFragment (focus refers to HTML focus being lost on re-render if the focus is on an HTML element within the RenderFragment).</para>
<para>If a RenderFragment renders a component, and the inner component is what has focus, will re-rendering the RenderFragment cause the HTML focus to be lost? This is presumed to be true, but how is that [Parameter] RenderFragment ChildContent isn&apos;t an issue if this is the case?</para>
<para>There shouldn&apos;t be that many icons rendered via this class. So, we can just use the DynamicComponent way without concern, but the question should be answered as to if a RenderFragment would cause issues here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Lib/Ide/Ide.RazorLib/Shareds/Models/FooterJustifyEndComponent.cs" line="21" column="15" declfile="Source/Lib/Ide/Ide.RazorLib/Shareds/Models/FooterJustifyEndComponent.cs" declline="21" declcolumn="15"/>
        <referencedby refid="namespace_luthetus_1_1_ide_1_1_razor_lib_1_1_shareds_1_1_states_1a4d9544215abe800c694fb8bb8b944d31" compoundref="_ide_main_layout_state_8cs" startline="8" endline="36">Luthetus.Ide.RazorLib.Shareds.States.IdeMainLayoutState</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Source/Lib/Ide/Ide.RazorLib/Shareds/Models/BackgroundTaskDialogModel.cs" line="3" column="1"/>
  </compounddef>
</doxygen>
