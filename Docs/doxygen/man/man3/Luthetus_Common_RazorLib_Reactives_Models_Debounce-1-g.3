.TH "Luthetus.Common.RazorLib.Reactives.Models.Debounce< TArgs >" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.Common.RazorLib.Reactives.Models.Debounce< TArgs > \- The "starter code" for this was copy and pasted from ThrottleOptimized\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDebounce\fP (TimeSpan debounceTimeSpan, \fBCancellationToken\fP cancellationToken, Func< TArgs, \fBCancellationToken\fP, Task > workItem)"
.br
.RI "The workItem is invoked with the cancellationToken that is given to this constructor\&. As well, the cancellationToken is used to stop the debounce checking that is done in a while loop\&. "
.ti -1c
.RI "void \fBRun\fP (TArgs args)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "Task \fB_workItemTask\fP = Task\&.CompletedTask"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "TimeSpan \fBDebounceTimeSpan\fP\fR [get]\fP"
.br
.ti -1c
.RI "CancellationToken \fBCancellationToken\fP\fR [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The "starter code" for this was copy and pasted from ThrottleOptimized\&. 

This type is meant to fire when the requests cease for some duration of time\&. i\&.e\&.: if one continually fires a request, the _workItem will never run\&.

.PP
Additionally: a second requirement exists where the previously started workItem must be IsCompleted before another workItem can be started\&. i\&.e\&.: if the requests cease for some duration of time, then the previously workItem is awaited\&. Only then will a new workItem start\&. 
.PP
Definition at line \fB14\fP of file \fBDebounce\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "Luthetus\&.Common\&.RazorLib\&.Reactives\&.Models\&.Debounce< TArgs >\&.Debounce (TimeSpan debounceTimeSpan, \fBCancellationToken\fP cancellationToken, Func< TArgs, \fBCancellationToken\fP, Task > workItem)"

.PP
The workItem is invoked with the cancellationToken that is given to this constructor\&. As well, the cancellationToken is used to stop the debounce checking that is done in a while loop\&. 
.PP
Definition at line \fB116\fP of file \fBDebounce\&.cs\fP\&.
.SS "void Luthetus\&.Common\&.RazorLib\&.Reactives\&.Models\&.Debounce< TArgs >\&.Run (TArgs args)"

.PP
Definition at line \fB155\fP of file \fBDebounce\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "Task Luthetus\&.Common\&.RazorLib\&.Reactives\&.Models\&.Debounce< TArgs >\&._workItemTask = Task\&.CompletedTask"

.PP
Definition at line \fB150\fP of file \fBDebounce\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "CancellationToken Luthetus\&.Common\&.RazorLib\&.Reactives\&.Models\&.Debounce< TArgs >\&.CancellationToken\fR [get]\fP"

.PP
Definition at line \fB153\fP of file \fBDebounce\&.cs\fP\&.
.SS "TimeSpan Luthetus\&.Common\&.RazorLib\&.Reactives\&.Models\&.Debounce< TArgs >\&.DebounceTimeSpan\fR [get]\fP"

.PP
Definition at line \fB152\fP of file \fBDebounce\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
