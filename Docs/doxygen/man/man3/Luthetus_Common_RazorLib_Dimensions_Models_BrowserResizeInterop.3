.TH "Luthetus.Common.RazorLib.Dimensions.Models.BrowserResizeInterop" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.Common.RazorLib.Dimensions.Models.BrowserResizeInterop \- TODO: The way this class will interact with Blazor ServerSide is a current concern (as this class is being written)\&. So, make sure to test out ServerSide, refresh the page, etc\&.\&.\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBrowserResizeInterop\fP (IDispatcher dispatcher)"
.br
.ti -1c
.RI "void \fBOnBrowserResize\fP ()"
.br
.RI "A static method isn't used here because it needs to be scoped to the individual user session in order to access the IDispatcher\&. "
.ti -1c
.RI "void \fBSubscribeWindowSizeChanged\fP (\fBLuthetusCommonJavaScriptInteropApi\fP luthetusCommonJavaScriptInteropApi)"
.br
.RI "The idea here is that one can subscribe/dispose as much as they'd like if they want to stop listening to the resize event\&. "
.ti -1c
.RI "void \fBDisposeWindowSizeChanged\fP (\fBLuthetusCommonJavaScriptInteropApi\fP luthetusCommonJavaScriptInteropApi)"
.br
.in -1c
.SH "Detailed Description"
.PP 
TODO: The way this class will interact with Blazor ServerSide is a current concern (as this class is being written)\&. So, make sure to test out ServerSide, refresh the page, etc\&.\&.\&. 

Subscribes to JavaScript 'resize' event\&.

.PP
https://github.com/chrissainty/BlazorBrowserResize/blob/master/BrowserResize/BrowserResize/BrowserResizeService.cs 
.PP
Definition at line \fB15\fP of file \fBBrowserResizeInterop\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Luthetus\&.Common\&.RazorLib\&.Dimensions\&.Models\&.BrowserResizeInterop\&.BrowserResizeInterop (IDispatcher dispatcher)"

.PP
Definition at line \fB20\fP of file \fBBrowserResizeInterop\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Luthetus\&.Common\&.RazorLib\&.Dimensions\&.Models\&.BrowserResizeInterop\&.DisposeWindowSizeChanged (\fBLuthetusCommonJavaScriptInteropApi\fP luthetusCommonJavaScriptInteropApi)"

.PP
Definition at line \fB59\fP of file \fBBrowserResizeInterop\&.cs\fP\&.
.SS "void Luthetus\&.Common\&.RazorLib\&.Dimensions\&.Models\&.BrowserResizeInterop\&.OnBrowserResize ()"

.PP
A static method isn't used here because it needs to be scoped to the individual user session in order to access the IDispatcher\&. 
.PP
Definition at line \fB32\fP of file \fBBrowserResizeInterop\&.cs\fP\&.
.SS "void Luthetus\&.Common\&.RazorLib\&.Dimensions\&.Models\&.BrowserResizeInterop\&.SubscribeWindowSizeChanged (\fBLuthetusCommonJavaScriptInteropApi\fP luthetusCommonJavaScriptInteropApi)"

.PP
The idea here is that one can subscribe/dispose as much as they'd like if they want to stop listening to the resize event\&. But I'm probably never going to do use this extra logic I wrote with the re-using of the DotNetObjectReference when I re-subscribe and such (because I'll only dispose when the app is closed)\&. #YAGNI 
.PP
Definition at line \fB44\fP of file \fBBrowserResizeInterop\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
