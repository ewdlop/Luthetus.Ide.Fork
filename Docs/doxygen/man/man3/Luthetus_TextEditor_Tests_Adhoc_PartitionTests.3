.TH "Luthetus.TextEditor.Tests.Adhoc.PartitionTests" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.TextEditor.Tests.Adhoc.PartitionTests \- When a deletion of text spans multiple partitions it seems to sometimes break the line endings\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBTestContext\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "async Task \fBTwoPartitionEdit_Delete\fP ()"
.br
.RI "Its thought that line ending only text is best to be using for these tests\&. Since in specific, here we are testing why the line ending tracking is breaking\&. "
.ti -1c
.RI "async Task \fBTwoPartitionEdit_Backspace\fP ()"
.br
.RI "Its thought that line ending only text is best to be using for these tests\&. Since in specific, here we are testing why the line ending tracking is breaking\&. "
.ti -1c
.RI "async Task \fBTwoPartitionEdit_Insert\fP ()"
.br
.ti -1c
.RI "async Task \fBThreePartitionEdit_Delete\fP ()"
.br
.ti -1c
.RI "async Task \fBLarge_Throughput_Test\fP ()"
.br
.RI "This test isn't the most useful thing for determining errors\&. But it is quite interesting to see the different partition sizes and when it fails\&. "
.ti -1c
.RI "async Task \fBAnother_Large_Throughput_Test_Delete\fP ()"
.br
.ti -1c
.RI "async Task \fBAnother_Large_Throughput_Test_Backspace\fP ()"
.br
.ti -1c
.RI "async Task \fBAnother_Large_Throughput_Test_Insert\fP ()"
.br
.ti -1c
.RI "\fBTestContext\fP \fBTestInitialize\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "const string \fBSAMPLE_CASE_THAT_HAS_LINE_ENDINGS_BREAK_BUG\fP"
.br
.RI "To recreate the bug: Short description: delete the body of the class definition by seleting it, and hitting enter\&. Long description: "
.in -1c
.SH "Detailed Description"
.PP 
When a deletion of text spans multiple partitions it seems to sometimes break the line endings\&. 
.PP
Definition at line \fB3\fP of file \fBPartitionTests\&.Data\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.Another_Large_Throughput_Test_Backspace ()"

.PP
Definition at line \fB826\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.Another_Large_Throughput_Test_Delete ()"

.PP
Definition at line \fB660\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.Another_Large_Throughput_Test_Insert ()"

.PP
Definition at line \fB992\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.Large_Throughput_Test ()"

.PP
This test isn't the most useful thing for determining errors\&. But it is quite interesting to see the different partition sizes and when it fails\&. Then drill into a more specific unit test once an issue is found here is the way I'd look at this unit test if its ever even used\&. 
.PP
Definition at line \fB533\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "\fBTestContext\fP Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.TestInitialize ()"

.PP
Definition at line \fB1177\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.ThreePartitionEdit_Delete ()"

.PP
Definition at line \fB319\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.TwoPartitionEdit_Backspace ()"

.PP
Its thought that line ending only text is best to be using for these tests\&. Since in specific, here we are testing why the line ending tracking is breaking\&. 
.PP
Definition at line \fB132\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.TwoPartitionEdit_Delete ()"

.PP
Its thought that line ending only text is best to be using for these tests\&. Since in specific, here we are testing why the line ending tracking is breaking\&. 
.PP
Definition at line \fB34\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.TwoPartitionEdit_Insert ()"

.PP
Definition at line \fB226\fP of file \fBPartitionTests\&.Main\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "const string Luthetus\&.TextEditor\&.Tests\&.Adhoc\&.PartitionTests\&.SAMPLE_CASE_THAT_HAS_LINE_ENDINGS_BREAK_BUG\fR [static]\fP"

.PP
To recreate the bug: Short description: delete the body of the class definition by seleting it, and hitting enter\&. Long description: 
.IP "\(bu" 2
Locate the open curly brace, of the class definition\&.
.IP "\(bu" 2
Place cursor at the EndExclusiveIndex of the curly brace character (immediately after it, and the cursor is still touching the curly brace, but after it\&.
.IP "\(bu" 2
Select the text from the previously described position to the end curly brace of the class definition\&.
.IP "\(bu" 2
Note: for the end curly brace you are placing the cursor immediately BEFORE it\&. This will then select all the text within the class definition's body if a deletion occurred\&.
.IP "\(bu" 2
"Press" the 'Enter' key\&. This should delete all of the text in the class definition's body, and then insert a new line\&.
.IP "\(bu" 2
But, the result is wrong, a lot of text is deleted yes, but there's seemingly "random" gibberish where the text used to be\&. The hundreds of lines of text that was deleted is reduced down to about 4 lines, but again, its just gibberish\&. 
.PP

.PP
Definition at line \fB23\fP of file \fBPartitionTests\&.Data\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
