.TH "Luthetus.TextEditor.RazorLib.Options.Models.TextEditorOptionsApi" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.TextEditor.RazorLib.Options.Models.TextEditorOptionsApi
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTextEditorOptionsApi\fP (\fBITextEditorService\fP textEditorService, \fBLuthetusTextEditorConfig\fP textEditorConfig, \fBIStorageService\fP storageService, \fBCommonBackgroundTaskApi\fP commonBackgroundTaskApi, IDispatcher dispatcher)"
.br
.ti -1c
.RI "\fBTextEditorOptions\fP \fBGetOptions\fP ()"
.br
.RI "One should store the result of invoking this method in a variable, then reference that variable\&. If one continually invokes this, there is no guarantee that the data had not changed since the previous invocation\&. "
.ti -1c
.RI "void \fBShowSettingsDialog\fP (bool? isResizableOverride=null, string? cssClassString=null)"
.br
.ti -1c
.RI "void \fBShowFindAllDialog\fP (bool? isResizableOverride=null, string? cssClassString=null)"
.br
.ti -1c
.RI "void \fBSetTheme\fP (\fBThemeRecord\fP theme, bool updateStorage=true)"
.br
.RI "This is setting the \fBTextEditor\fP's theme specifically\&. This is not to be confused with the AppOptions Themes which get applied at an application level\&. 
.br

.br
 This allows for a "DarkTheme-Application" that has a "LightTheme-TextEditor"\&. "
.ti -1c
.RI "void \fBSetShowWhitespace\fP (bool showWhitespace, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetUseMonospaceOptimizations\fP (bool useMonospaceOptimizations, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetShowNewlines\fP (bool showNewlines, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetKeymap\fP (\fBKeymap\fP keymap, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetHeight\fP (int? heightInPixels, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetFontSize\fP (int fontSizeInPixels, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetFontFamily\fP (string? fontFamily, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetCursorWidth\fP (double cursorWidthInPixels, bool updateStorage=true)"
.br
.ti -1c
.RI "void \fBSetRenderStateKey\fP (Key< \fBRenderState\fP > renderStateKey)"
.br
.ti -1c
.RI "void \fBWriteToStorage\fP ()"
.br
.ti -1c
.RI "async Task \fBSetFromLocalStorageAsync\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB21\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.TextEditorOptionsApi (\fBITextEditorService\fP textEditorService, \fBLuthetusTextEditorConfig\fP textEditorConfig, \fBIStorageService\fP storageService, \fBCommonBackgroundTaskApi\fP commonBackgroundTaskApi, IDispatcher dispatcher)"

.PP
Definition at line \fB29\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBTextEditorOptions\fP Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.GetOptions ()"

.PP
One should store the result of invoking this method in a variable, then reference that variable\&. If one continually invokes this, there is no guarantee that the data had not changed since the previous invocation\&. 
.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB45\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetCursorWidth (double cursorWidthInPixels, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB155\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetFontFamily (string? fontFamily, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB147\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetFontSize (int fontSizeInPixels, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB139\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "async Task Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetFromLocalStorageAsync ()"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB175\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetHeight (int? heightInPixels, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB131\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetKeymap (\fBKeymap\fP keymap, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB114\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetRenderStateKey (Key< \fBRenderState\fP > renderStateKey)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB163\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetShowNewlines (bool showNewlines, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB106\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetShowWhitespace (bool showWhitespace, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB90\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetTheme (\fBThemeRecord\fP theme, bool updateStorage = \fRtrue\fP)"

.PP
This is setting the \fBTextEditor\fP's theme specifically\&. This is not to be confused with the AppOptions Themes which get applied at an application level\&. 
.br

.br
 This allows for a "DarkTheme-Application" that has a "LightTheme-TextEditor"\&. 
.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB82\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.SetUseMonospaceOptimizations (bool useMonospaceOptimizations, bool updateStorage = \fRtrue\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB98\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.ShowFindAllDialog (bool? isResizableOverride = \fRnull\fP, string? cssClassString = \fRnull\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB66\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.ShowSettingsDialog (bool? isResizableOverride = \fRnull\fP, string? cssClassString = \fRnull\fP)"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB50\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.TextEditorOptionsApi\&.WriteToStorage ()"

.PP
Implements \fBLuthetus\&.TextEditor\&.RazorLib\&.Options\&.Models\&.ITextEditorOptionsApi\fP\&.
.PP
Definition at line \fB168\fP of file \fBTextEditorOptionsApi\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
