.TH "md__docs_2_text_editor_2features" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__docs_2_text_editor_2features \- ## Features of \fRBlazor\&.Text\&.Editor\fP 
.PP

.IP "\(bu" 2
\fRInsertion\fP of text
.IP "\(bu" 2
\fRDeletion\fP of text
.IP "\(bu" 2
\fRSelection\fP of text
.IP "\(bu" 2
\fRCursor\fP which shows the position within the text at which a user's action will occur\&.
.IP "\(bu" 2
\fRKeyboard Movement\fP
.IP "  \(bu" 4
\fRArrowLeft\fP: Move cursor one column to the left, or wrap to the previous line if one exists\&.
.IP "    \(bu" 6
\fRControl Modifier\fP: Move cursor to the left until the text for the current word finishes, or wrap to the previous line if one exists\&.
.PP

.IP "  \(bu" 4
\fRArrowDown\fP: Move cursor one row down\&.
.IP "    \(bu" 6
\fRControl Modifier\fP: Scroll vertically down by the height of a row
.PP

.IP "  \(bu" 4
\fRArrowUp\fP: Move cursor one row up\&.
.IP "    \(bu" 6
\fRControl Modifier\fP: Scroll vertically up by the height of a row
.PP

.IP "  \(bu" 4
\fRArrowRight\fP: Move cursor one column to the right, or wrap to the next line if one exists\&.
.IP "    \(bu" 6
\fRControl Modifier\fP: Move cursor to the right until the text for the current word finishes, or wrap to the previous line if one exists\&.\&.
.PP

.IP "  \(bu" 4
\fRHome\fP: Move cursor to the first column of the current row\&.
.IP "    \(bu" 6
\fRControl Modifier\fP: Move cursor to the first row\&. Afterwards, perform the \fRHome\fP keybind without the \fRControl Modifier\fP\&.
.PP

.IP "  \(bu" 4
\fREnd\fP: Move cursor to the last column of the current row\&.
.IP "    \(bu" 6
\fRControl Modifier\fP: Move cursor to the last row\&. Afterwards, perform the \fREnd\fP keybind without the \fRControl Modifier\fP\&.
.PP

.PP

.IP "\(bu" 2
\fRShift Key\fP Modified Keyboard Movement
.IP "  \(bu" 4
If text is not already selected an anchor position will be made as the starting position of the cursor\&. Then the ending position will be where the cursor ends up after the movement\&. Should text already be selected then only the ending position modification occurs\&.
.PP

.IP "\(bu" 2
\fRMouse Movement\fP
.IP "  \(bu" 4
\fROnMouseDown\fP move \fRCursor\fP
.IP "  \(bu" 4
\fROnMouseMove\fP move \fRCursor\fP
.PP

.IP "\(bu" 2
\fRMouse Selection of Text\fP
.IP "  \(bu" 4
\fRNo use of Shift Modifier\fP: If text is not already selected, then OnMouseDown will make an anchor at the position of the cursor after it gets moved due to the OnMouseDown event\&. One can then move the mouse and place an ending position\&. The anchor and ending positions act as goal posts in regards to mentally imagining how they work\&. The text between them gets selected\&.
.IP "  \(bu" 4
\fRWith use of Shift Modifier\fP: If text is not already selected, then OnMouseDown will make an anchor at the position of the cursor PRIOR to the OnMouseDown event\&. Additionally an ending position will be made at the position that the OnMouseDown event occurred\&. One can then move the mouse and place an ending position\&. The anchor and ending positions act as goal posts in regards to mentally imagining how they work\&. The text between them gets selected\&.
.IP "  \(bu" 4
\fRDouble Click Expand Selection\fP: double click on a word to select the entirety of that word\&.
.PP

.IP "\(bu" 2
\fRKeyboard Scroll Position Modification Keymaps\fP
.IP "  \(bu" 4
\fRPageUp\fP: Scroll vertically up by the height of the text editor\&.
.IP "  \(bu" 4
\fRPageDown\fP: Scroll vertically down by the height of the text editor\&.
.IP "  \(bu" 4
{ \fRControl Modifier\fP + \fRArrowUp\fP }: Scroll vertically up by the height of a row\&.
.IP "  \(bu" 4
{ \fRControl Modifier\fP + \fRArrowDown\fP }: Scroll vertically down by the height of a row\&.
.PP

.IP "\(bu" 2
\fRVirtualization\fP of rendered user interface
.IP "  \(bu" 4
\fRVertical\fP virtualization
.IP "  \(bu" 4
\fRHorizontal\fP virtualization \fRwhen using a monospace font\fP\&.
.PP

.IP "\(bu" 2
\fRVim Emulator\fP
.IP "  \(bu" 4
\fRModes\fP:
.IP "    \(bu" 6
\fRNormal\fP Mode
.IP "    \(bu" 6
\fRVisual\fP Mode
.IP "    \(bu" 6
\fRVisual Line\fP Mode
.IP "    \(bu" 6
\fRCommand\fP Mode
.PP

.IP "  \(bu" 4
\fRRepeat\fP
.IP "    \(bu" 6
1
.IP "    \(bu" 6
2
.IP "    \(bu" 6
3
.IP "    \(bu" 6
4
.IP "    \(bu" 6
5
.IP "    \(bu" 6
6
.IP "    \(bu" 6
7
.IP "    \(bu" 6
8
.IP "    \(bu" 6
9
.IP "    \(bu" 6
As well one can use more than one digit to go greater than 9\&.
.PP

.IP "  \(bu" 4
\fRText Object\fP
.IP "    \(bu" 6
\fRw\fP => \fRWord\fP
.IP "    \(bu" 6
\fRe\fP => \fREnd\fP
.IP "    \(bu" 6
\fRb\fP => \fRBack\fP
.IP "    \(bu" 6
\fRh\fP => \fRArrowLeft\fP
.IP "    \(bu" 6
\fRj\fP => \fRArrowDown\fP
.IP "    \(bu" 6
\fRk\fP => \fRArrowUp\fP
.IP "    \(bu" 6
\fRl\fP => \fRArrowRight\fP
.IP "    \(bu" 6
\fR$\fP => \fREnd\fP
.IP "    \(bu" 6
\fR0\fP => \fRHome\fP
.PP

.IP "  \(bu" 4
\fRVerb\fP
.IP "    \(bu" 6
\fRd\fP => \fRDelete\fP
.IP "    \(bu" 6
\fRc\fP => \fRChange\fP
.IP "    \(bu" 6
{ \fRControl Modifier\fP + \fRe\fP } => \fRScrollLineDown\fP
.IP "    \(bu" 6
{ \fRControl Modifier\fP + \fRy\fP } => \fRScrollLineUp\fP
.PP

.PP

.IP "\(bu" 2
\fRSyntax Highlighting\fP
.IP "  \(bu" 4
\fR\fBILexer\&.cs\fP\fP the implementation walks the text and returns a list of what decoration byte should be applied when rendered for a given span of text\&.
.IP "  \(bu" 4
\fR\fBIDecorationMapper\&.cs\fP\fP takes in a decoration byte and returns a css class\&. 
.PP

.PP

