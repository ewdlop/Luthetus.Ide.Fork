.TH "Source/Lib/TextEditor/Commands/Models/Defaults/TextEditorRefactorFunctions.cs" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Source/Lib/TextEditor/Commands/Models/Defaults/TextEditorRefactorFunctions.cs
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBLuthetus\&.TextEditor\&.RazorLib\&.Commands\&.Models\&.Defaults\&.TextEditorRefactorFunctions\fP"
.br
.RI "TODO: Decide on what folder this class belongs in\&.\&.\&. \&.\&.\&.I'm working on the Quick Actions / Refactor context menu (2024-08-16) and the issue is that, the context menu is populated with menu options from within the \fBITextEditorEditContext\fP\&. | But by the time the user picks a context menu option, the text editor may have been edited, thus invalidating any stored Func<Task> that is given for a menu option's onclick\&. | So, each menu option needs to make a separate Post to the \fBITextEditorService\fP upon onclick\&. | But, all of the variables that were created to construct the menu options, during the old post, are still within scope when typing out code for the menu option's onclick if written inline as a lambda function\&. | So, most importantly this class exists to avoid accidental usage of old text editor state due to the variables being in scope\&. | But this also probably is nice for readability, and re-usability of the refactor itself\&. | I don't want a separate function within \fBTextEditorCommandDefaultFunctions\fP because it is a nice separation of concern to keep compiler service refactors in a separate file\&. "
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBLuthetus\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\&.Commands\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\&.Commands\&.Models\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\&.Commands\&.Models\&.Defaults\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
