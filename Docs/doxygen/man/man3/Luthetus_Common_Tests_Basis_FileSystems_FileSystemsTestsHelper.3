.TH "Luthetus.Common.Tests.Basis.FileSystems.FileSystemsTestsHelper" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.Common.Tests.Basis.FileSystems.FileSystemsTestsHelper
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBWellKnownPaths\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBInitializeFileSystemsTests\fP (out \fBInMemoryEnvironmentProvider\fP inMemoryEnvironmentProvider, out \fBInMemoryFileSystemProvider\fP inMemoryFileSystemProvider, out ServiceProvider serviceProvider)"
.br
.RI "The files shown in the 'tree' below will be written to the in-memory filesystem\&. ---------------------------------------------
.br
 Root
.br
 ∙└───Homework
.br
 ∙∙∙∙∙∙├───Math
.br
 ∙∙∙∙∙∙│∙∙∙∙├───addition\&.txt
.br
 ∙∙∙∙∙∙│∙∙∙∙└───subtraction\&.txt
.br
 ∙∙∙∙∙∙│
.br
 ∙∙∙∙∙∙└───Biology
.br
 ∙∙∙∙∙∙∙∙∙∙∙├───nervousSystem\&.txt
.br
 ∙∙∙∙∙∙∙∙∙∙∙└───skeletalSystem\&.txt
.br
\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB11\fP of file \fBFileSystemsTestsHelper\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Luthetus\&.Common\&.Tests\&.Basis\&.FileSystems\&.FileSystemsTestsHelper\&.InitializeFileSystemsTests (out \fBInMemoryEnvironmentProvider\fP inMemoryEnvironmentProvider, out \fBInMemoryFileSystemProvider\fP inMemoryFileSystemProvider, out ServiceProvider serviceProvider)\fR [static]\fP"

.PP
The files shown in the 'tree' below will be written to the in-memory filesystem\&. ---------------------------------------------
.br
 Root
.br
 ∙└───Homework
.br
 ∙∙∙∙∙∙├───Math
.br
 ∙∙∙∙∙∙│∙∙∙∙├───addition\&.txt
.br
 ∙∙∙∙∙∙│∙∙∙∙└───subtraction\&.txt
.br
 ∙∙∙∙∙∙│
.br
 ∙∙∙∙∙∙└───Biology
.br
 ∙∙∙∙∙∙∙∙∙∙∙├───nervousSystem\&.txt
.br
 ∙∙∙∙∙∙∙∙∙∙∙└───skeletalSystem\&.txt
.br
\&. 
.PP
\fBParameters\fP
.RS 4
\fIinMemoryEnvironmentProvider\fP Register \fBIEnvironmentProvider\fP service to be \fBInMemoryEnvironmentProvider\fP, but keep the out variable with the concrete type\&. This provides clarity that the unit test won't create side effects in one's true filesystem, while still allowing the use of the dependency injected interface\&. 
.br
\fIinMemoryFileSystemProvider\fP Register \fBIFileSystemProvider\fP service to be \fBInMemoryFileSystemProvider\fP, but keep the out variable with the concrete type\&. This provides clarity that the unit test won't create side effects in one's true filesystem, while still allowing the use of the dependency injected interface\&. 
.RE
.PP

.PP
Definition at line \fB38\fP of file \fBFileSystemsTestsHelper\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
