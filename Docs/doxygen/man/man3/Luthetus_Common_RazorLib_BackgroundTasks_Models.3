.TH "Luthetus.Common.RazorLib.BackgroundTasks.Models" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.Common.RazorLib.BackgroundTasks.Models
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBBackgroundTask\fP"
.br
.ti -1c
.RI "class \fBBackgroundTaskQueue\fP"
.br
.RI "This type is thread safe\&.
.br

.br
\&. "
.ti -1c
.RI "class \fBBackgroundTaskService\fP"
.br
.ti -1c
.RI "class \fBBackgroundTaskServiceSynchronous\fP"
.br
.ti -1c
.RI "class \fBBackgroundTaskWorker\fP"
.br
.ti -1c
.RI "class \fBBlockingBackgroundTaskWorker\fP"
.br
.RI "The \fBBlockingBackgroundTaskWorker\fP should be assumed to never be immediately available, that one always will wait in a queue for a user-noticeable amount of time\&. "
.ti -1c
.RI "class \fBCommonBackgroundTaskApi\fP"
.br
.ti -1c
.RI "class \fBContinuousBackgroundTaskWorker\fP"
.br
.RI "The \fBContinuousBackgroundTaskWorker\fP should "always" be available\&. That is to say, if one needs to execute a task for an indefinitely long amount of, then one should use \fBBlockingBackgroundTaskWorker\fP instead\&. "
.ti -1c
.RI "interface \fBIBackgroundTask\fP"
.br
.ti -1c
.RI "interface \fBIBackgroundTaskQueue\fP"
.br
.ti -1c
.RI "interface \fBIBackgroundTaskService\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
