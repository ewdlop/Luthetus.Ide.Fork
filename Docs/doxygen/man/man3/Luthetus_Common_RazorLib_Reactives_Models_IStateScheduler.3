.TH "Luthetus.Common.RazorLib.Reactives.Models.IStateScheduler" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.Common.RazorLib.Reactives.Models.IStateScheduler \- Background and asynchronous state modification needs to be scheduled to the IDispatcher\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBLuthetus\&.Common\&.RazorLib\&.Reactives\&.Models\&.StateScheduler\fP, and \fBLuthetus\&.Extensions\&.DotNet\&.TestExplorers\&.States\&.TestExplorerScheduler\fP\&.
.SH "Detailed Description"
.PP 
Background and asynchronous state modification needs to be scheduled to the IDispatcher\&. 

Once state is given to the IDispatcher then it is synchronously, and thread safely, written over the existing state\&.

.PP
Then, the next background and asynchronous state modification reads the new state, and does its calculation, hands it off the the IDispatcher, repeat\&.

.PP
NOTE: I think 'Scheduler' is the wrong word to use here\&. I need to continue thinking this through\&. and then revisit the name\&. 
.PP
Definition at line \fB16\fP of file \fBIStateScheduler\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
