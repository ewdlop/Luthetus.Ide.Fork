.TH "Luthetus.TextEditor.Tests.Basis.TextEditors.Models.TextEditorModelModifierTests" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.TextEditor.Tests.Basis.TextEditors.Models.TextEditorModelModifierTests \- \fBTextEditorModelModifier\fP  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLuthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditorTestBase\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_NegativeOne_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_Zero_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_DocumentLength_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_NegativeOne_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_Zero_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_DocumentLength_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_EmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_Causes_DecreaseCounters_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_Causes_MaintainCounters_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_NegativeOne_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_Zero_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_DocumentLength_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_Causes_DecreaseCounters_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_Causes_MaintainCounters_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_NegativeOne_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_Zero_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_DocumentLength_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_NotEmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_Causes_DecreaseCounters_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_Causes_MaintainCounters_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_NegativeOne_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_Zero_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_DocumentLength_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_OnePlusDocumentLength_DeleteEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_Causes_DecreaseCounters_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_Causes_MaintainCounters_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_NegativeOne_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_Zero_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_DocumentLength_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBDelete_From_CursorSelection_At_PositionIndex_EqualTo_OnePlusDocumentLength_BackspaceEnum\fP ()"
.br
.ti -1c
.RI "void \fBInsert_Into_EmptyEditor_At_PositionIndex_Zero\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at positionIndex equal to 0 (2024-04-14)
.br
 Purpose: Index 0 is the first valid positionIndex, thus it bears significance as a boundary\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_EmptyEditor_At_PositionIndex_DocumentLength\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at positionIndex equal to DocumentLength (2024-04-14)
.br
 Purpose: Index of 'DocumentLength' is the last valid positionIndex, thus it bears significance as a boundary\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_EmptyEditor_At_PositionIndex_Negative_One\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at positionIndex equal to -1 (2024-04-14)
.br
 Purpose: Index -1 is a value which is less than than the lower-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_EmptyEditor_At_Position_One_Plus_DocumentLength\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at a positionIndex equal to '1 + DocumentLength' (2024-04-14)
.br
 Purpose: Index '1 + DocumentLength' is a value which is greater than than the upper-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_EmptyEditor_Null_String\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, a null string (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'null' case\&. "
.ti -1c
.RI "void \fBInsert_Into_EmptyEditor_Empty_String\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, a value of 'string\&.Empty' (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'empty' case\&. "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_At_PositionIndex_Zero\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex equal to 0 (2024-04-14)
.br
 Purpose: Index 0 is the first valid positionIndex, thus it bears significance as a boundary\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_At_PositionIndex_DocumentLength\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex equal to DocumentLength (2024-04-14)
.br
 Purpose: Index of 'DocumentLength' is the last valid positionIndex, thus it bears significance as a boundary\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, bool, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex between 0 and DocumentLength; exclusive bounds (2024-04-14)
.br
 Purpose: With 0 being the first valid position, and DocumentLength being the last valid position; testing a value between the valid positionIndex boundaries bears significance as a unique case\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_At_PositionIndex_Negative_One\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex equal to -1 (2024-04-14)
.br
 Purpose: Index -1 is a value which is less than than the lower-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_At_Position_One_Plus_DocumentLength\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at a positionIndex equal to '1 + DocumentLength' (2024-04-14)
.br
 Purpose: Index '1 + DocumentLength' is a value which is greater than than the upper-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_Null_String\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, a null string (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'null' case\&. "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_Empty_String\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, a value of 'string\&.Empty' (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'empty' case\&. "
.ti -1c
.RI "void \fBInsert_Into_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_With_Selection\fP ()"
.br
.RI "TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, bool, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex between 0 and DocumentLength; exclusive bounds while the cursor has an active selection(2024-04-14)
.br
 Purpose: insertion while the cursor has an active selection means that the selected text must be deleted prior to insertion, thus making this a unique case\&.
.br
 "
.ti -1c
.RI "void \fBConstructor\fP ()"
.br
.RI "TextEditorModelModifier(TextEditorModel) 
.br
----
.br
 TextEditorModelModifier\&.ToModel() TextEditorModelModifier\&.CharList TextEditorModelModifier\&.DecorationByteList TextEditorModelModifier\&.EditBlockList TextEditorModelModifier\&.LineEndList TextEditorModelModifier\&.LineEndKindCountList TextEditorModelModifier\&.PresentationModelList TextEditorModelModifier\&.TabKeyPositionList TextEditorModelModifier\&.OnlyLineEndKind TextEditorModelModifier\&.LineEndKindPreference TextEditorModelModifier\&.ResourceUri TextEditorModelModifier\&.ResourceLastWriteTime TextEditorModelModifier\&.FileExtension TextEditorModelModifier\&.DecorationMapper TextEditorModelModifier\&.CompilerService TextEditorModelModifier\&.TextEditorSaveFileHelper TextEditorModelModifier\&.EditBlockIndex TextEditorModelModifier\&.MostCharactersOnASingleLineTuple TextEditorModelModifier\&.RenderStateKey "
.ti -1c
.RI "void \fBEnter_Enter_Backspace_LineFeed\fP ()"
.br
.ti -1c
.RI "void \fBEnter_Enter_Backspace_CarriageReturn\fP ()"
.br
.RI "(2024-04-22) "
.ti -1c
.RI "void \fBEnter_Enter_Backspace_CarriageReturnLineFeed\fP ()"
.br
.RI "(2024-04-22) "
.ti -1c
.RI "void \fBClearContent\fP ()"
.br
.ti -1c
.RI "void \fBClearOnlyRowEndingKind\fP ()"
.br
.RI "TextEditorModelModifier\&.ClearOnlyRowEndingKind() "
.ti -1c
.RI "void \fBModifyUsingRowEndingKind\fP ()"
.br
.RI "TextEditorModelModifier\&.SetLineEndKindPreference(LineEndKind) "
.ti -1c
.RI "void \fBModifyResourceData\fP ()"
.br
.RI "TextEditorModelModifier\&.SetResourceData(ResourceUri, DateTime) "
.ti -1c
.RI "void \fBModifyDecorationMapper\fP ()"
.br
.RI "TextEditorModelModifier\&.SetDecorationMapper(IDecorationMapper) "
.ti -1c
.RI "void \fBModifyCompilerService\fP ()"
.br
.RI "TextEditorModelModifier\&.SetCompilerService(ILuthCompilerService) "
.ti -1c
.RI "void \fBModifyTextEditorSaveFileHelper\fP ()"
.br
.RI "TextEditorModelModifier\&.SetTextEditorSaveFileHelper(SaveFileHelper) "
.ti -1c
.RI "void \fBSetContent_DecreaseCounters\fP ()"
.br
.RI "TextEditorModelModifier\&.SetContent(string)
.br
 Case: Decrease counters (2024-04-14)
.br
 
.br
 Setting the content can result in a decrease in the amount of line endings in a text editor, as just one example\&. Erroneous example: one has a text editor with the text value of:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 so, a text editor with 4 line endings\&.
.br
 
.br
 Now one invokes: 'SetContent(string\&.Empty)'
.br
 
.br
 but, erroneously, the text editor still thinks there are 4 line endings in the text\&. Correction for the example: one has 4 line endings, then invokes 'SetContent(string\&.Empty)', and the text editor now thinks there is 1 line ending in the text\&. Note: all text editor models have at least 1 line ending, which is known as the 'EndOfFile'\&. "
.ti -1c
.RI "void \fBSetContent_MaintainCounters\fP ()"
.br
.RI "TextEditorModelModifier\&.SetContent(string)
.br
 Case: Maintain counters (2024-04-14)
.br
 
.br
 Setting the content can result in NO-change in the amount of line endings in a text editor\&. Erroneous example: one has a text editor with the text value of:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 then invokes SetContent(string) with the following string:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙ )
.br
 Here, the text editor started with 4 line endings, and it is expected to in the end have 4 line endings\&. The overall count of the line endings has not changed, but the positioning of each \fBLineEnd\fP has\&. The erroneous behavior here could be, not updating the LineEndPositionList\&. Thereby leaving the '
.br
' character as having a 'StartPositionIndex' of '0', All the while, the '
.br
' character is in actually at a 'StartPositionIndex' of '7'\&. Note: all text editor models have at least 1 line ending, which is known as the 'EndOfFile'\&. "
.ti -1c
.RI "void \fBSetContent_IncreaseCounters\fP ()"
.br
.RI "TextEditorModelModifier\&.SetContent(string)
.br
 Case: Increase counters (2024-04-14)
.br
 
.br
 Setting the content can result in an increase in the amount of line endings in a text editor\&. Erroneous example: one has a text editor with the text value of:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 then invokes SetContent(string) with the following string:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 Here, the text editor started with 4 line endings, and it is expected to in the end have 7 line endings\&. The erroneous behavior here could be, not updating the 'LineEndKindCountsList'\&. That is, initially the text editor has 1 'LineFeed' character\&. It is expected that in the end the text editor will have 2 'LineFeed' characters\&. "
.ti -1c
.RI "void \fBModifyResetStateButNotEditHistory\fP ()"
.br
.RI "TextEditorModelModifier\&.ClearAllStatesButKeepEditHistory() "
.ti -1c
.RI "void \fBHandleKeyboardEvent\fP ()"
.br
.RI "TextEditorModelModifier\&.HandleKeyboardEvent(KeyboardEventArgs, CursorModifierBagTextEditor, CancellationToken) "
.ti -1c
.RI "void \fBPerformRegisterPresentationModelAction\fP ()"
.br
.RI "TextEditorModelModifier\&.PerformRegisterPresentationModelAction(TextEditorPresentationModel) "
.ti -1c
.RI "void \fBPerformCalculatePresentationModelAction\fP ()"
.br
.RI "TextEditorModelModifier\&.StartPendingCalculatePresentationModel(Key<TextEditorPresentationModel>, TextEditorPresentationModel) "
.ti -1c
.RI "void \fBClearEditBlocks\fP ()"
.br
.RI "TextEditorModelModifier\&.ClearEditBlocks() "
.ti -1c
.RI "void \fBUndoEdit\fP ()"
.br
.RI "TextEditorModelModifier\&.UndoEdit() "
.ti -1c
.RI "void \fBRedoEdit\fP ()"
.br
.RI "TextEditorModelModifier\&.RedoEdit() "
.ti -1c
.RI "void \fB__Add\fP ()"
.br
.RI "TextEditorModelModifier\&.__Add(RichCharacter) "
.ti -1c
.RI "void \fBPartitionList_Add_SHOULD_INSERT_INTO_PARTITION_WITH_AVAILABLE_SPACE\fP ()"
.br
.ti -1c
.RI "void \fBPartitionList_Add_SHOULD_CREATE_MORE_SPACE_IF_NEEDED_V2\fP ()"
.br
.ti -1c
.RI "void \fBBACKSPACE_REMOVES_CHARACTER_FROM_PREVIOUS_PARTITION\fP ()"
.br
.ti -1c
.RI "void \fBDELETE_REMOVES_CHARACTER_FROM_NEXT_PARTITION\fP ()"
.br
.RI "TODO: This test method name 'DELETE_REMOVES_CHARACTER_FROM_NEXT_PARTITION()' does not make sense\&.\&.\&. If one has their cursor such that 'delete' will remove the first character of the next partition\&. Then, they have their cursor between two partitions, (or at position index 0)\&. Therefore, the cursor is within the partition that they are removing from\&. "
.ti -1c
.RI "void \fBSELECTING_FIRST_CHARACTER_OF_PARTITION_THEN_BACKSPACE_REMOVES_FIRST_CHARACTER\fP ()"
.br
.ti -1c
.RI "void \fBSELECTING_LAST_CHARACTER_OF_PARTITION_THEN_DELETE_REMOVES_LAST_CHARACTER\fP ()"
.br
.ti -1c
.RI "void \fBSELECTION_THAT_SPANS_MORE_THAN_ONE_PARTITION_IS_REMOVED_PROPERLY_WITH_BACKSPACE\fP ()"
.br
.ti -1c
.RI "void \fBSELECTION_THAT_SPANS_MORE_THAN_ONE_PARTITION_IS_REMOVED_PROPERLY_WITH_DELETE\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBLuthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditorTestBase\fP
.in +1c
.ti -1c
.RI "\fBBackgroundTaskService\fP \fBContinuousBackgroundTaskWorker\fP IDispatcher \fBITextEditorService\fP \fBtextEditorService\fP \fBInitializeBackgroundTasks\fP ()"
.br
.ti -1c
.RI "\fBTextEditorModel\fP \fBTextEditorModelModifier\fP modelModifier \fBEmptyEditor_TestData_And_PerformPreAssertions\fP (\fBResourceUri\fP \fBresourceUri\fP, DateTime resourceLastWriteTime, string fileExtension, string content, \fBIDecorationMapper\fP? decorationMapper, \fBICompilerService\fP? compilerService, int partitionSize)"
.br
.ti -1c
.RI "\fBTextEditorModel\fP \fBTextEditorModelModifier\fP modelModifier \fBNotEmptyEditor_TestData_And_PerformPreAssertions\fP (\fBResourceUri\fP \fBresourceUri\fP, DateTime resourceLastWriteTime, string fileExtension, string content, \fBIDecorationMapper\fP? decorationMapper, \fBICompilerService\fP? compilerService, int partitionSize)"
.br
.in -1c

Protected Attributes inherited from \fBLuthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditorTestBase\fP
.in +1c
.ti -1c
.RI "\fBBackgroundTaskService\fP \fBbackgroundTaskService\fP"
.br
.ti -1c
.RI "\fBBackgroundTaskService\fP \fBContinuousBackgroundTaskWorker\fP \fBbackgroundTaskWorker\fP"
.br
.ti -1c
.RI "\fBBackgroundTaskService\fP \fBContinuousBackgroundTaskWorker\fP IDispatcher \fBdispatcher\fP"
.br
.ti -1c
.RI "\fBTextEditorModel\fP \fBinModel\fP"
.br
.RI "Text Editor UI result (with show-newlines and show-whitespace; arrow is tab, and dot is space)
.br
 ===================== 
.br
 1 
.br
 
.br
 2 b9\\r 
.br
 3 9B\\r
.br
 
.br
 4 --->$;∙EOF 
.br
\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBTextEditorModelModifier\fP 
.PP
Definition at line \fB14\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.__Add ()"

.PP
TextEditorModelModifier\&.__Add(RichCharacter) 
.PP
Definition at line \fB1120\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.BACKSPACE_REMOVES_CHARACTER_FROM_PREVIOUS_PARTITION ()"

.PP
Definition at line \fB1260\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ClearContent ()"

.SS "TextEditorModelModifier\&.ClearContent()"
This test was deemed valuable on (2024-04-13) 
.PP
Definition at line \fB328\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ClearEditBlocks ()"

.PP
TextEditorModelModifier\&.ClearEditBlocks() 
.PP
Definition at line \fB1093\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ClearOnlyRowEndingKind ()"

.PP
TextEditorModelModifier\&.ClearOnlyRowEndingKind() 
.PP
Definition at line \fB492\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Constructor ()"

.PP
TextEditorModelModifier(TextEditorModel) 
.br
----
.br
 TextEditorModelModifier\&.ToModel() TextEditorModelModifier\&.CharList TextEditorModelModifier\&.DecorationByteList TextEditorModelModifier\&.EditBlockList TextEditorModelModifier\&.LineEndList TextEditorModelModifier\&.LineEndKindCountList TextEditorModelModifier\&.PresentationModelList TextEditorModelModifier\&.TabKeyPositionList TextEditorModelModifier\&.OnlyLineEndKind TextEditorModelModifier\&.LineEndKindPreference TextEditorModelModifier\&.ResourceUri TextEditorModelModifier\&.ResourceLastWriteTime TextEditorModelModifier\&.FileExtension TextEditorModelModifier\&.DecorationMapper TextEditorModelModifier\&.CompilerService TextEditorModelModifier\&.TextEditorSaveFileHelper TextEditorModelModifier\&.EditBlockIndex TextEditorModelModifier\&.MostCharactersOnASingleLineTuple TextEditorModelModifier\&.RenderStateKey 
.PP
Definition at line \fB44\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_BackspaceEnum ()"

.PP
Definition at line \fB3128\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_DeleteEnum ()"

.PP
Definition at line \fB2364\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_BackspaceEnum ()"

.PP
Definition at line \fB3246\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_DeleteEnum ()"

.PP
Definition at line \fB2482\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_DocumentLength_BackspaceEnum ()"

.PP
Definition at line \fB3364\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_DocumentLength_DeleteEnum ()"

.PP
Definition at line \fB2600\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_NegativeOne_BackspaceEnum ()"

.PP
Definition at line \fB2973\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_NegativeOne_DeleteEnum ()"

.PP
Definition at line \fB2209\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_OnePlusDocumentLength_BackspaceEnum ()"

.PP
Definition at line \fB3467\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_OnePlusDocumentLength_DeleteEnum ()"

.PP
Definition at line \fB2703\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_Zero_BackspaceEnum ()"

.PP
Definition at line \fB3030\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_At_PositionIndex_EqualTo_Zero_DeleteEnum ()"

.PP
Definition at line \fB2266\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_Causes_DecreaseCounters_BackspaceEnum ()"

.PP
Definition at line \fB2762\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_Causes_DecreaseCounters_DeleteEnum ()"

.PP
Definition at line \fB2000\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_Causes_MaintainCounters_BackspaceEnum ()"

.PP
Definition at line \fB2855\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_CursorSelection_Causes_MaintainCounters_DeleteEnum ()"

.PP
Definition at line \fB2091\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_DocumentLength_BackspaceEnum ()"

.PP
Definition at line \fB395\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_DocumentLength_DeleteEnum ()"

.PP
Definition at line \fB142\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_NegativeOne_BackspaceEnum ()"

.PP
Definition at line \fB270\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_NegativeOne_DeleteEnum ()"

.PP
Definition at line \fB18\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_BackspaceEnum ()"

.PP
Definition at line \fB476\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_DeleteEnum ()"

.PP
Definition at line \fB223\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_Zero_BackspaceEnum ()"

.PP
Definition at line \fB315\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_EmptyEditor_At_PositionIndex_EqualTo_Zero_DeleteEnum ()"

.PP
Definition at line \fB63\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_BackspaceEnum ()"

.PP
Definition at line \fB1614\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_DeleteEnum ()"

.PP
Definition at line \fB873\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_BackspaceEnum ()"

.PP
Definition at line \fB1728\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_ExpandWord_DeleteEnum ()"

.PP
Definition at line \fB987\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_DocumentLength_BackspaceEnum ()"

.PP
Definition at line \fB1842\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_DocumentLength_DeleteEnum ()"

.PP
Definition at line \fB1104\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_NegativeOne_BackspaceEnum ()"

.PP
Definition at line \fB1463\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_NegativeOne_DeleteEnum ()"

.PP
Definition at line \fB726\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_BackspaceEnum ()"

.PP
Definition at line \fB1943\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_OnePlusDocumentLength_DeleteEnum ()"

.PP
Definition at line \fB1205\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_Zero_BackspaceEnum ()"

.PP
Definition at line \fB1516\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_At_PositionIndex_EqualTo_Zero_DeleteEnum ()"

.PP
Definition at line \fB779\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_Causes_DecreaseCounters_BackspaceEnum ()"

.PP
Definition at line \fB1260\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_Causes_DecreaseCounters_DeleteEnum ()"

.PP
Definition at line \fB525\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_Causes_MaintainCounters_BackspaceEnum ()"

.PP
Definition at line \fB1349\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Delete_From_NotEmptyEditor_Causes_MaintainCounters_DeleteEnum ()"

.PP
Definition at line \fB612\fP of file \fBTextEditorModelModifierTests\&.Delete\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.DELETE_REMOVES_CHARACTER_FROM_NEXT_PARTITION ()"

.PP
TODO: This test method name 'DELETE_REMOVES_CHARACTER_FROM_NEXT_PARTITION()' does not make sense\&.\&.\&. If one has their cursor such that 'delete' will remove the first character of the next partition\&. Then, they have their cursor between two partitions, (or at position index 0)\&. Therefore, the cursor is within the partition that they are removing from\&. 
.PP
Definition at line \fB1348\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Enter_Enter_Backspace_CarriageReturn ()"

.PP
(2024-04-22) 
.PP
Definition at line \fB172\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Enter_Enter_Backspace_CarriageReturnLineFeed ()"

.PP
(2024-04-22) 
.PP
Definition at line \fB249\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Enter_Enter_Backspace_LineFeed ()"

.SS "(2024-04-22)"
TODO: organize this test\&.

.PP
Description: Create an empty file, press 'enter' key twice, then 'backspace'\&.

.PP
Initial idea of issue: A LineFeed is inserted correctly, then the second is inserted incorrectly, and 'backspace' throws an exception when trying to delete the corrupted line feed

.PP
Midway explanation of issue: the 'backspace' is deleting the EndOfFile line end somehow\&.

.PP
Post-fix explanation of issue: the problem was caused when deleting metadata\&. When doing a 'backspace' there was code that determined which line end to remove from the '_lineEndList'\&. This code incorrectly determined the index to remove because it checked lineEnd\&.StartPositionIndexInclusive || (-1) + lineEnd\&.StartPositionIndexInclusive and thus things broke\&. Using 'lineEnd\&.StartPositionIndexInclusive' only, fixed the issue\&.

.PP
Post-fix concerns: recreate multiple of this test with '\\r' only, '\\r
.br
' only, and all possible mixes of the 3\&. The 'or' logic in the predicate was likely there for a reason\&. Likely something regarding '\\r
.br
' will not work now\&. And one must determine the ultimate fix\&. 
.PP
Definition at line \fB95\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.HandleKeyboardEvent ()"

.PP
TextEditorModelModifier\&.HandleKeyboardEvent(KeyboardEventArgs, CursorModifierBagTextEditor, CancellationToken) 
.PP
Definition at line \fB1029\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_EmptyEditor_At_Position_One_Plus_DocumentLength ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at a positionIndex equal to '1 + DocumentLength' (2024-04-14)
.br
 Purpose: Index '1 + DocumentLength' is a value which is greater than than the upper-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 
.PP
Definition at line \fB340\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_EmptyEditor_At_PositionIndex_DocumentLength ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at positionIndex equal to DocumentLength (2024-04-14)
.br
 Purpose: Index of 'DocumentLength' is the last valid positionIndex, thus it bears significance as a boundary\&.
.br
 
.PP
Definition at line \fB155\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_EmptyEditor_At_PositionIndex_Negative_One ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at positionIndex equal to -1 (2024-04-14)
.br
 Purpose: Index -1 is a value which is less than than the lower-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 
.PP
Definition at line \fB290\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_EmptyEditor_At_PositionIndex_Zero ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, at positionIndex equal to 0 (2024-04-14)
.br
 Purpose: Index 0 is the first valid positionIndex, thus it bears significance as a boundary\&.
.br
 
.PP
Definition at line \fB22\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_EmptyEditor_Empty_String ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, a value of 'string\&.Empty' (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'empty' case\&. 
.PP
Definition at line \fB454\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_EmptyEditor_Null_String ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into an empty editor, a null string (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'null' case\&. 
.PP
Definition at line \fB401\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_At_Position_One_Plus_DocumentLength ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at a positionIndex equal to '1 + DocumentLength' (2024-04-14)
.br
 Purpose: Index '1 + DocumentLength' is a value which is greater than than the upper-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 
.PP
Definition at line \fB1107\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, bool, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex between 0 and DocumentLength; exclusive bounds (2024-04-14)
.br
 Purpose: With 0 being the first valid position, and DocumentLength being the last valid position; testing a value between the valid positionIndex boundaries bears significance as a unique case\&.
.br
 
.PP
Definition at line \fB917\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_At_PositionIndex_Between_0_And_DocumentLength_Exclusive_With_Selection ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, bool, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex between 0 and DocumentLength; exclusive bounds while the cursor has an active selection(2024-04-14)
.br
 Purpose: insertion while the cursor has an active selection means that the selected text must be deleted prior to insertion, thus making this a unique case\&.
.br
 
.PP
Definition at line \fB1378\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_At_PositionIndex_DocumentLength ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex equal to DocumentLength (2024-04-14)
.br
 Purpose: Index of 'DocumentLength' is the last valid positionIndex, thus it bears significance as a boundary\&.
.br
 
.PP
Definition at line \fB745\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_At_PositionIndex_Negative_One ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex equal to -1 (2024-04-14)
.br
 Purpose: Index -1 is a value which is less than than the lower-bound for valid positionIndices, thus it bears significance as a unique case\&.
.br
 
.PP
Definition at line \fB1043\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_At_PositionIndex_Zero ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, at positionIndex equal to 0 (2024-04-14)
.br
 Purpose: Index 0 is the first valid positionIndex, thus it bears significance as a boundary\&.
.br
 
.PP
Definition at line \fB576\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_Empty_String ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, a value of 'string\&.Empty' (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'empty' case\&. 
.PP
Definition at line \fB1243\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.Insert_Into_NotEmptyEditor_Null_String ()"

.PP
TextEditorModelModifier\&.Insert(string, CursorModifierBagTextEditor, CancellationToken)
.br
 Case: Insert into a not empty editor, a null string (2024-04-14)
.br
 Purpose: The string argument of Insert(\&.\&.\&.) has 3 states as far as the text editor is concerned\&.
.br
 -It is null
.br
 -It is empty
.br
 -It not null, and it is not empty
.br
 -NOTE: the string being whitespace is a valid possibility, it falls under "not null, and not empty" just as if it were a LetterOrDigit
.br
 This bears significance as the 'null' case\&. 
.PP
Definition at line \fB1179\fP of file \fBTextEditorModelModifierTests\&.Insert\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ModifyCompilerService ()"

.PP
TextEditorModelModifier\&.SetCompilerService(ILuthCompilerService) 
.PP
Definition at line \fB556\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ModifyDecorationMapper ()"

.PP
TextEditorModelModifier\&.SetDecorationMapper(IDecorationMapper) 
.PP
Definition at line \fB547\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ModifyResetStateButNotEditHistory ()"

.PP
TextEditorModelModifier\&.ClearAllStatesButKeepEditHistory() 
.PP
Definition at line \fB1020\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ModifyResourceData ()"

.PP
TextEditorModelModifier\&.SetResourceData(ResourceUri, DateTime) 
.PP
Definition at line \fB524\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ModifyTextEditorSaveFileHelper ()"

.PP
TextEditorModelModifier\&.SetTextEditorSaveFileHelper(SaveFileHelper) 
.PP
Definition at line \fB565\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.ModifyUsingRowEndingKind ()"

.PP
TextEditorModelModifier\&.SetLineEndKindPreference(LineEndKind) 
.PP
Definition at line \fB508\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.PartitionList_Add_SHOULD_CREATE_MORE_SPACE_IF_NEEDED_V2 ()"

.PP
Definition at line \fB1183\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.PartitionList_Add_SHOULD_INSERT_INTO_PARTITION_WITH_AVAILABLE_SPACE ()"

.PP
Definition at line \fB1126\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.PerformCalculatePresentationModelAction ()"

.PP
TextEditorModelModifier\&.StartPendingCalculatePresentationModel(Key<TextEditorPresentationModel>, TextEditorPresentationModel) 
.PP
Definition at line \fB1084\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.PerformRegisterPresentationModelAction ()"

.PP
TextEditorModelModifier\&.PerformRegisterPresentationModelAction(TextEditorPresentationModel) 
.PP
Definition at line \fB1075\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.RedoEdit ()"

.PP
TextEditorModelModifier\&.RedoEdit() 
.PP
Definition at line \fB1111\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.SELECTING_FIRST_CHARACTER_OF_PARTITION_THEN_BACKSPACE_REMOVES_FIRST_CHARACTER ()"

.PP
Definition at line \fB1430\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.SELECTING_LAST_CHARACTER_OF_PARTITION_THEN_DELETE_REMOVES_LAST_CHARACTER ()"

.PP
Definition at line \fB1436\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.SELECTION_THAT_SPANS_MORE_THAN_ONE_PARTITION_IS_REMOVED_PROPERLY_WITH_BACKSPACE ()"

.PP
Definition at line \fB1442\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.SELECTION_THAT_SPANS_MORE_THAN_ONE_PARTITION_IS_REMOVED_PROPERLY_WITH_DELETE ()"

.PP
Definition at line \fB1448\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.SetContent_DecreaseCounters ()"

.PP
TextEditorModelModifier\&.SetContent(string)
.br
 Case: Decrease counters (2024-04-14)
.br
 
.br
 Setting the content can result in a decrease in the amount of line endings in a text editor, as just one example\&. Erroneous example: one has a text editor with the text value of:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 so, a text editor with 4 line endings\&.
.br
 
.br
 Now one invokes: 'SetContent(string\&.Empty)'
.br
 
.br
 but, erroneously, the text editor still thinks there are 4 line endings in the text\&. Correction for the example: one has 4 line endings, then invokes 'SetContent(string\&.Empty)', and the text editor now thinks there is 1 line ending in the text\&. Note: all text editor models have at least 1 line ending, which is known as the 'EndOfFile'\&. 
.PP
Definition at line \fB597\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.SetContent_IncreaseCounters ()"

.PP
TextEditorModelModifier\&.SetContent(string)
.br
 Case: Increase counters (2024-04-14)
.br
 
.br
 Setting the content can result in an increase in the amount of line endings in a text editor\&. Erroneous example: one has a text editor with the text value of:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 then invokes SetContent(string) with the following string:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 Here, the text editor started with 4 line endings, and it is expected to in the end have 7 line endings\&. The erroneous behavior here could be, not updating the 'LineEndKindCountsList'\&. That is, initially the text editor has 1 'LineFeed' character\&. It is expected that in the end the text editor will have 2 'LineFeed' characters\&. 
.PP
Definition at line \fB871\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.SetContent_MaintainCounters ()"

.PP
TextEditorModelModifier\&.SetContent(string)
.br
 Case: Maintain counters (2024-04-14)
.br
 
.br
 Setting the content can result in NO-change in the amount of line endings in a text editor\&. Erroneous example: one has a text editor with the text value of:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙ )
.br
 then invokes SetContent(string) with the following string:
.br
 ∙∙∙ (
.br
 ∙∙∙∙∙∙∙ "\\t" ∙ + // Tab
.br
 ∙∙∙∙∙∙∙ ";" ∙∙ + // Punctuation
.br
 ∙∙∙∙∙∙∙ "\\r\\n" + // CarriageReturnLineFeed
.br
 ∙∙∙∙∙∙∙ " " ∙∙∙∙ // Space
.br
 ∙∙∙∙∙∙∙ "\\n" ∙ + // LineFeed
.br
 ∙∙∙∙∙∙∙ "\\r" ∙ + // CarriageReturn
.br
 ∙∙∙∙∙∙∙ "9B" ∙ + // LetterOrDigit-Uppercase
.br
 ∙∙∙∙∙∙∙ "$" ∙∙ + // SpecialCharacter
.br
 ∙∙∙∙∙∙∙ "b9" ∙ + // LetterOrDigit-Lowercase
.br
 ∙∙∙ )
.br
 Here, the text editor started with 4 line endings, and it is expected to in the end have 4 line endings\&. The overall count of the line endings has not changed, but the positioning of each \fBLineEnd\fP has\&. The erroneous behavior here could be, not updating the LineEndPositionList\&. Thereby leaving the '
.br
' character as having a 'StartPositionIndex' of '0', All the while, the '
.br
' character is in actually at a 'StartPositionIndex' of '7'\&. Note: all text editor models have at least 1 line ending, which is known as the 'EndOfFile'\&. 
.PP
Definition at line \fB718\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.
.SS "void Luthetus\&.TextEditor\&.Tests\&.Basis\&.TextEditors\&.Models\&.TextEditorModelModifierTests\&.UndoEdit ()"

.PP
TextEditorModelModifier\&.UndoEdit() 
.PP
Definition at line \fB1102\fP of file \fBTextEditorModelModifierTests\&.Main\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
