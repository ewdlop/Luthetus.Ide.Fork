.TH "Source/Lib/TextEditor/TextEditors/Models/ITextEditorEditContext.cs" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Source/Lib/TextEditor/TextEditors/Models/ITextEditorEditContext.cs
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "interface \fBLuthetus\&.TextEditor\&.RazorLib\&.TextEditors\&.Models\&.ITextEditorEditContext\fP"
.br
.RI "If one invokes, "_ = editContext\&.GetViewModelModifier(viewModelKey);"\&.
.br
 Then a side effect occurs where the view model with the provided viewModelKey, will be marked as a having been modified\&.
.br
 After a Post is finished, the text editor service iterates over all 'modified' view models and re-renders them\&.
.br
 This behavior is a bit hacky since it requires some amount of 'hidden knowledge'\&.
.br
 To get a view model without marking it as modified, use the optional parameter, 'isReadonly' and set it to 'true'\&.
.br
 The main reason for making this comment, is that I sometimes assign the result of 'GetViewModelModifier' to discard\&.
.br
 When I do this it feels especially hacky, so I want to leave a paper trail of what I mean by that statement\&.
.br
\&. "
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBLuthetus\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\&.TextEditors\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\&.TextEditors\&.Models\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
