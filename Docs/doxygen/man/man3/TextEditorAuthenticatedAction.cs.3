.TH "Source/Lib/TextEditor/TextEditors/States/TextEditorAuthenticatedAction.cs" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Source/Lib/TextEditor/TextEditors/States/TextEditorAuthenticatedAction.cs
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBLuthetus\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\&.TextEditors\fP"
.br
.ti -1c
.RI "namespace \fBLuthetus\&.TextEditor\&.RazorLib\&.TextEditors\&.States\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "record \fBLuthetus\&.TextEditor\&.RazorLib\&.TextEditors\&.States\&.TextEditorAuthenticatedAction\fP"
.br
.RI "Any actions which modify state should inhert from \fBTextEditorAuthenticatedAction\fP\&.
.br
 
.br
 Doing this permits state modifications to be concurrency safe\&. They will be enqueued using ITextEditorService\&.EnqueueEdit(Func<ITextEditorEditContext, Task>)\&.
.br
 
.br
 When it is a specific edit's turn to perform their modification, all state will be provided by the \fBITextEditorService\fP\&.
.br
 
.br
 Therefore no state modification can be done without the \fBTextEditorService\&.AuthenticatedActionKey\fP\&.
.br
 
.br
 The \fBTextEditorService\&.AuthenticatedActionKey\fP is public, so one could subvert this\&. But, it shouldn't be subverted, the key is public in order to provide clarity in how the "authentication" is being done\&.
.br
 
.br
 TODO: Learn more about SynchronizationContext\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
