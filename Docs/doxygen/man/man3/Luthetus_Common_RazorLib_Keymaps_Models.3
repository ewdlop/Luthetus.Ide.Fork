.TH "Luthetus.Common.RazorLib.Keymaps.Models" 3 "Version 1.0.0" "Luthetus.Ide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Luthetus.Common.RazorLib.Keymaps.Models
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "interface \fBIKeymap\fP"
.br
.ti -1c
.RI "struct \fBKeybind\fP"
.br
.RI "The idea behind this class is entirely based on the 'event\&.key' vs 'event\&.code' for a given keyboard event\&. It is desired to use the 'event\&.key' sometimes, whereas other times the 'event\&.code'\&. So, these corresponding properties on this type were made nullable\&. It still is incredibly clumsy because the goal is that 1 of them isn't null, yet both will forever be "nullable"\&. "
.ti -1c
.RI "class \fBKeymap\fP"
.br
.RI "TODO: Chords as part of keymaps (i\&.e: ({ Ctrl + '[' } + { Ctrl + 's' }) to focus solution explorer\&. "
.ti -1c
.RI "struct \fBKeymapArgs\fP"
.br
.ti -1c
.RI "class \fBKeymapDoNothing\fP"
.br
.ti -1c
.RI "class \fBKeymapJsonDto\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "record struct \fBKeymapLayer\fP (Key< KeymapLayer > Key, string DisplayName, string InternalName)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "record struct Luthetus\&.Common\&.RazorLib\&.Keymaps\&.Models\&.KeymapLayer (Key< KeymapLayer > Key, string DisplayName, string InternalName)"

.PP
Definition at line \fB5\fP of file \fBKeymapLayer\&.cs\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Luthetus\&.Ide from the source code\&.
